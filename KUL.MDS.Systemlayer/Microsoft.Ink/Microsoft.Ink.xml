<?xml version="1.0"?>
<!-- **************************************************************************
**   Microsoft Windows                                                       **
**   Copyright (C) Microsoft Corporation, 2004                               **
**                                                                           **
**   File: microsoft.ink.xml                                                 **
**       Microsoft TabletPC API Documentation                                **
**                                                                           **
******************************************************************************* -->
<doc>
  <assembly>
    <name>
    </name>
  </assembly>
  <members>
    <member name="T:Microsoft.Ink.InkOverlayEditingMode">
      <summary>      Defines values that specify the behavior mode of the InkOverlay object and the InkPicture control.    </summary>
    </member>
    <member name="F:Microsoft.Ink.InkOverlayEditingMode.Ink">
      <summary>      Specifies the object or control is in collection mode.    </summary>
    </member>
    <member name="F:Microsoft.Ink.InkOverlayEditingMode.Delete">
      <summary>      Specifies the object or control is in deletion mode.    </summary>
    </member>
    <member name="F:Microsoft.Ink.InkOverlayEditingMode.Select">
      <summary>      Specifies the object or control is in selection and editing mode.    </summary>
    </member>
    <member name="T:Microsoft.Ink.InkOverlayEraserMode">
      <summary>      Defines values that specify the way in which ink is erased from the InkOverlay object or the InkPicture control</summary>
    </member>
    <member name="F:Microsoft.Ink.InkOverlayEraserMode.StrokeErase">
      <summary>      Specifies ink is erased by a stroke.    </summary>
    </member>
    <member name="F:Microsoft.Ink.InkOverlayEraserMode.PointErase">
      <summary>      Specifies ink is erased by a point.    </summary>
    </member>
    <member name="T:Microsoft.Ink.InkOverlayAttachMode">
      <summary>      Defines values that specify where to attach the new InkOverlay object, behind or in front of the active layer.    </summary>
    </member>
    <member name="F:Microsoft.Ink.InkOverlayAttachMode.Behind">
      <summary>      Attaches the new InkOverlay object behind the active window.    </summary>
    </member>
    <member name="F:Microsoft.Ink.InkOverlayAttachMode.InFront">
      <summary>      Attaches the new InkOverlay object in front of the active window.    </summary>
    </member>
    <member name="T:Microsoft.Ink.SelectionHitResult">
      <summary>      Defines values that specify which part of a selection, if any, was hit during a hit test.    </summary>
    </member>
    <member name="F:Microsoft.Ink.SelectionHitResult.None">
      <summary>      Specifies no part of the selection was hit.    </summary>
    </member>
    <member name="F:Microsoft.Ink.SelectionHitResult.Northwest">
      <summary>      Specifies the northwest corner sizing handle was hit.    </summary>
    </member>
    <member name="F:Microsoft.Ink.SelectionHitResult.Southeast">
      <summary>      Specifies the southeast corner sizing handle was hit.    </summary>
    </member>
    <member name="F:Microsoft.Ink.SelectionHitResult.Northeast">
      <summary>      Specifies the northeast corner sizing handle was hit.    </summary>
    </member>
    <member name="F:Microsoft.Ink.SelectionHitResult.Southwest">
      <summary>      Specifies the southwest corner sizing handle was hit.    </summary>
    </member>
    <member name="F:Microsoft.Ink.SelectionHitResult.East">
      <summary>      Specifies the east side sizing handle was hit.    </summary>
    </member>
    <member name="F:Microsoft.Ink.SelectionHitResult.West">
      <summary>      Specifies the west side sizing handle was hit.    </summary>
    </member>
    <member name="F:Microsoft.Ink.SelectionHitResult.North">
      <summary>      Specifies the north side sizing handle was hit.    </summary>
    </member>
    <member name="F:Microsoft.Ink.SelectionHitResult.South">
      <summary>      Specifies the south side sizing handle was hit.    </summary>
    </member>
    <member name="F:Microsoft.Ink.SelectionHitResult.Selection">
      <summary>      Specifies the selection itself was hit (no selection handle was hit).    </summary>
    </member>
    <member name="T:Microsoft.Ink.InkOverlayPaintingEventHandler">
      <summary>Represents the method that handles the Painting event of an InkOverlay object.</summary>
      <param name="sender">[in] Specifies the source InkOverlay of this event.</param>
      <param name="e">[in] Specifies the InkOverlayPaintingEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.InkOverlayPaintingEventArgs">
      <summary>      Provides data for the Painting events of Painting objects and Painting controls, which occur when ink is about to be painted.    </summary>
    </member>
    <member name="M:Microsoft.Ink.InkOverlayPaintingEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
      <summary>Initializes a new instance of the InkOverlayPaintingEventArgs class</summary>
      <remarks>
      </remarks>
      <param name="graphics"> The Graphics object that the InkOverlay object is rendering to</param>
      <param name="clipRectangle"> The clip Rectangle to paint within</param>
      <param name="Allow">Set to true if the paint operation should occur; otherwise false</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlayPaintingEventArgs.Finalize">
      <summary>Frees the resources of the current InkOverlayPaintingEventArgs object before it is reclaimed by the garbage collector.		</summary>
    </member>
    <member name="M:Microsoft.Ink.InkOverlayPaintingEventArgs.Dispose">
      <summary>Releases resources used by the InkOverlayPaintingEventArgs object.		</summary>
    </member>
    <member name="M:Microsoft.Ink.InkOverlayPaintingEventArgs.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the InkOverlayPaintingEventArgs object and optionally releases the managed resources.		</summary>
      <param name="disposing">Set to true to release both managed and unmanaged resources; false to release only unmanaged resources.		</param>
    </member>
    <member name="P:Microsoft.Ink.InkOverlayPaintingEventArgs.Graphics">
      <value>Gets the Graphics object that is used to paint the item.	</value>
    </member>
    <member name="P:Microsoft.Ink.InkOverlayPaintingEventArgs.ClipRectangle">
      <value>Gets the Rectangle structure that represents the rectangle in which to paint.	</value>
    </member>
    <member name="T:Microsoft.Ink.InkOverlayPaintedEventHandler">
      <summary>Represents the method that handles the Painted event of an InkOverlay object.</summary>
      <param name="sender">[in] Specifies the source InkOverlay of this event.</param>
      <param name="e">[in] Specifies the PaintEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.InkOverlaySelectionChangingEventHandler">
      <summary>Represents the method that handles the SelectionChanging event of an InkOverlay object.</summary>
      <param name="sender">[in] Specifies the source InkOverlay of this event.</param>
      <param name="e">[in] Specifies the InkOverlaySelectionChangingEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.InkOverlaySelectionChangingEventArgs">
      <summary>      Provides data for the SelectionChanging events of SelectionChanging objects and SelectionChanging controls, which occur when the selection of ink is about to change, such as through alterations to the user interface, cut-and-paste procedures, or the Selection property (for Selection or Selection).    </summary>
    </member>
    <member name="M:Microsoft.Ink.InkOverlaySelectionChangingEventArgs.#ctor(Microsoft.Ink.Strokes)">
      <summary>Initializes a new instance of the InkOverlaySelectionChangingEventArgs class.    </summary>
      <remarks>
      </remarks>
      <param name="newSelection"> The Strokes collection that will become the Selection property of the InkOverlay object</param>
    </member>
    <member name="P:Microsoft.Ink.InkOverlaySelectionChangingEventArgs.NewSelection">
      <value>Gets the new Strokes collection for a InkOverlaySelectionChangingEventArgs event.	</value>
    </member>
    <member name="T:Microsoft.Ink.InkOverlaySelectionChangedEventHandler">
      <summary>Represents the method that handles the SelectionChanged event of an InkOverlay object.</summary>
      <param name="sender">[in] Specifies the source InkOverlay of this event.</param>
      <param name="e">[in] Specifies the EventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.InkOverlaySelectionMovingEventHandler">
      <summary>Represents the method that handles the SelectionMoving event of an InkOverlay object.</summary>
      <param name="sender">[in] Specifies the source InkOverlay of this event.</param>
      <param name="e">[in] Specifies the InkOverlaySelectionMovingEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.InkOverlaySelectionMovingEventArgs">
      <summary>      Provides data for the SelectionMoving events of SelectionMoving objects and SelectionMoving controls, which occur when selected strokes are about to be moved.    </summary>
    </member>
    <member name="M:Microsoft.Ink.InkOverlaySelectionMovingEventArgs.#ctor(System.Drawing.Rectangle)">
      <summary>Initializes a new instance of the InkOverlaySelectionMovingEventArgs class.    </summary>
      <remarks>
      </remarks>
      <param name="newPixelRect"> The new position to which the selected Strokes collection will move.    </param>
    </member>
    <member name="P:Microsoft.Ink.InkOverlaySelectionMovingEventArgs.NewPixelRect">
      <value>Gets the rectangle to which the selection is moved after the SelectionMoving event.	</value>
    </member>
    <member name="T:Microsoft.Ink.InkOverlaySelectionResizingEventHandler">
      <summary>Represents the method that handles the SelectionResizing event of an InkOverlay object.</summary>
      <param name="sender">[in] Specifies the source InkOverlay of this event.</param>
      <param name="e">[in] Specifies the InkOverlaySelectionResizingEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.InkOverlaySelectionResizingEventArgs">
      <summary>      Provides data for the SelectionResizing events of SelectionResizing objects and SelectionResizing controls, which occur when selected stroke are about to be resized.    </summary>
    </member>
    <member name="M:Microsoft.Ink.InkOverlaySelectionResizingEventArgs.#ctor(System.Drawing.Rectangle)">
      <summary>Initializes a new instance of the InkOverlaySelectionResizingEventArgs class.    </summary>
      <remarks>
      </remarks>
      <param name="newPixelRect"> The size to which the selected Strokes collection will change.    </param>
    </member>
    <member name="P:Microsoft.Ink.InkOverlaySelectionResizingEventArgs.NewPixelRect">
      <value>Gets the bounding rectangle of the selection after the SelectionResizing event, as a Rectangle structure.	</value>
    </member>
    <member name="T:Microsoft.Ink.InkOverlaySelectionMovedEventHandler">
      <summary>Represents the method that handles the SelectionMoved event of an InkOverlay object.</summary>
      <param name="sender">[in] Specifies the source InkOverlay of this event.</param>
      <param name="e">[in] Specifies the InkOverlaySelectionMovedEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.InkOverlaySelectionMovedEventArgs">
      <summary>      Provides data for the SelectionMoved events of SelectionMoved objects and SelectionMoved controls, which occur when selected strokes have been moved.    </summary>
    </member>
    <member name="M:Microsoft.Ink.InkOverlaySelectionMovedEventArgs.#ctor(System.Drawing.Rectangle)">
      <summary>Initializes a new instance of the InkOverlaySelectionMovedEventArgs class</summary>
      <remarks>
      </remarks>
      <param name="oldSelectionBoundingRect"> The old bounding Rectangle, or previous position, of the Strokes collection that was moved.    </param>
    </member>
    <member name="P:Microsoft.Ink.InkOverlaySelectionMovedEventArgs.OldSelectionBoundingRect">
      <value>Gets the bounding rectangle of the selected Strokes collection as it existed before the SelectionMoved event fired.	</value>
    </member>
    <member name="T:Microsoft.Ink.InkOverlaySelectionResizedEventHandler">
      <summary>Represents the method that handles the SelectionResized event of an InkOverlay object.</summary>
      <param name="sender">[in] Specifies the source InkOverlay of this event.</param>
      <param name="e">[in] Specifies the InkOverlaySelectionResizedEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.InkOverlaySelectionResizedEventArgs">
      <summary>      Provides data for the SelectionResizing events of SelectionResized objects and SelectionResized controls, which occur when selected stroke have been resized.    </summary>
    </member>
    <member name="M:Microsoft.Ink.InkOverlaySelectionResizedEventArgs.#ctor(System.Drawing.Rectangle)">
      <summary>Initializes a new instance of the InkOverlaySelectionResizedEventArgs class.    </summary>
      <remarks>
      </remarks>
      <param name="oldSelectionBoundingRect"> The original bounding Rectangle of the selected Strokes collection, before the resize operation</param>
    </member>
    <member name="P:Microsoft.Ink.InkOverlaySelectionResizedEventArgs.OldSelectionBoundingRect">
      <value>Gets the bounding rectangle of the selected Strokes collection as it existed before the SelectionResized event fired.	</value>
    </member>
    <member name="T:Microsoft.Ink.InkOverlayStrokesDeletingEventHandler">
      <summary>Represents the method that handles the StrokesDeleting event of an InkOverlay object.</summary>
      <param name="sender">[in] Specifies the source InkOverlay of this event.</param>
      <param name="e">[in] Specifies the InkOverlayStrokesDeletingEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.InkOverlayStrokesDeletingEventArgs">
      <summary>      Provides data for the StrokesDeleting events of StrokesDeleting objects and StrokesDeleting controls, which occur when stroke are about to be deleted.    </summary>
    </member>
    <member name="M:Microsoft.Ink.InkOverlayStrokesDeletingEventArgs.#ctor(Microsoft.Ink.Strokes)">
      <summary>Initializes a new instance of the InkOverlayStrokesDeletingEventArgs class.    </summary>
      <remarks>
      </remarks>
      <param name="strokesToDelete">The Strokes collection to be deleted</param>
    </member>
    <member name="P:Microsoft.Ink.InkOverlayStrokesDeletingEventArgs.StrokesToDelete">
      <value>Gets the Strokes collection deleted when the StrokesDeleting event fires.	</value>
    </member>
    <member name="T:Microsoft.Ink.InkOverlayStrokesDeletedEventHandler">
      <summary>Represents the method that handles the StrokesDeleted event of an InkOverlay object.</summary>
      <param name="sender">[in] Specifies the source InkOverlay of this event.</param>
      <param name="e">[in] Specifies the EventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.InkOverlay">
      <summary> Represents an object that is useful for annotation scenarios where users are not concerned with performing recognition on ink but instead are interested in the size, shape, color, and position of the ink.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="F:Microsoft.Ink.InkOverlay.DefaultInkCollectionMargin">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.Ink.InkOverlay.ClipInkToMargin">
      <summary> Not implemented.</summary>
    </member>
    <member name="F:Microsoft.Ink.InkOverlay.onPainting">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.Ink.InkOverlay.onPainted">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.Ink.InkOverlay.onSelectionChanging">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.Ink.InkOverlay.onSelectionChanged">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.Ink.InkOverlay.onSelectionMoving">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.Ink.InkOverlay.onSelectionResizing">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.Ink.InkOverlay.onSelectionMoved">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.Ink.InkOverlay.onSelectionResized">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.Ink.InkOverlay.onStrokesDeleting">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.Ink.InkOverlay.onStrokesDeleted">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.Finalize">
      <summary>Frees the resources of the current InkOverlay object before it is reclaimed by the garbage collector.		</summary>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.Dispose">
      <summary>Releases resources used by the InkOverlay object.		</summary>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the InkOverlay object and optionally releases the managed resources.		</summary>
      <param name="disposing">Set to true to release both managed and unmanaged resources; false to release only unmanaged resources.		</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.#ctor">
      <summary>Initializes a new instance of the InkOverlay class</summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.#ctor(System.IntPtr)">
      <summary>Initializes a new instance of the InkOverlay class and associates a window handle with it</summary>
      <param name="handle">The handle of the window to which the InkOverlay object is attached.    </param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.#ctor(System.Windows.Forms.Control)">
      <summary>Initializes a new instance of the InkOverlay class</summary>
      <param name="attachedControl">The control to which the InkOverlay object is attached.    </param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.#ctor(System.IntPtr,System.Boolean)">
      <summary>Initializes a new instance of the InkOverlay class, attaches it to the specified window handle, and determines whether to use the mouse for input.    </summary>
      <param name="handle">The handle of the window to which the InkOverlay object is attached.    </param>
      <param name="useMouseForInput">Set to true to use the mouse for tablet input; otherwise false.    </param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.#ctor(System.Windows.Forms.Control,System.Boolean)">
      <summary>Initializes a new instance of the InkOverlay class</summary>
      <param name="attachedControl">The control to which the InkOverlay object is attached.    </param>
      <param name="useMouseForInput">Set to true to use the mouse for tablet input; otherwise false.    </param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.#ctor(System.IntPtr,Microsoft.Ink.Tablet)">
      <summary>Initializes a new instance of the InkOverlay class and attaches it to a specified window handle on a specified Tablet object</summary>
      <param name="handle">The handle of the window to which the InkOverlay object is attached.    </param>
      <param name="tablet">The Tablet object to which the new window for the InkOverlay object is attached.    </param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.#ctor(System.Windows.Forms.Control,Microsoft.Ink.Tablet)">
      <summary>Initializes a new instance of the InkOverlay class</summary>
      <param name="attachedControl">The control to which the InkOverlay object is attached.    </param>
      <param name="tablet">The Tablet object to which the new window for the InkOverlay object is attached.    </param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnHandleCreated(System.Object,System.EventArgs)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnHandleDestroyed(System.Object,System.EventArgs)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.SetGestureStatus(Microsoft.Ink.ApplicationGesture,System.Boolean)">
      <summary>Sets whether or not the InkOverlay object has interest in a known application gesture.    </summary>
      <param name="gesture">A member of the ApplicationGesture enumeration, which indicates the gesture to set the status of</param>
      <param name="listening">Whether or not the InkOverlay object has interest in a known application gesture.</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.GetGestureStatus(Microsoft.Ink.ApplicationGesture)">
      <summary>Returns a value that indicates whether the InkOverlay object has interest in a particular application gesture.    </summary>
      <param name="gesture">A member of the ApplicationGesture enumeration that represents the gesture to query about.    </param>
      <returns>Whether the InkOverlay object has interest in a particular application gesture.</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.HitTestSelection(System.Int32,System.Int32)">
      <summary>Returns a value that indicates which part of a selection, if any, was hit during a hit test.</summary>
      <param name="X">The x-position, in pixels, of the hit test</param>
      <param name="Y">The y-position, in pixels, of the hit test</param>
      <returns>A member of the SelectionHitResult enumeration, which specifies which part of a selection, if any, was hit during a hit test</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.SetWindowInputRectangle(System.Drawing.Rectangle)">
      <summary>Sets the window rectangle, in pixels, within which ink is drawn.    </summary>
      <param name="windowInputRectangle">
      </param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.GetWindowInputRectangle(System.Drawing.Rectangle@)">
      <summary> Gets the window rectangle, in pixels, within which ink is drawn.    </summary>
      <param name="windowInputRectangle">The rectangle within which ink is drawn.    </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.SetAllTabletsMode">
      <summary>Sets the InkOverlay object to collect ink from any tablet attached to the Tablet PC.	</summary>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.SetAllTabletsMode(System.Boolean)">
      <summary>Sets the InkOverlay object to collect ink from any tablet attached to the Tablet PC.	</summary>
      <param name="useMouseForInput">The Boolean value that indicates whether to use the mouse as an input device</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.SetSingleTabletIntegratedMode(Microsoft.Ink.Tablet)">
      <summary>Sets the InkOverlay object to collect ink from only one tablet attached to the Tablet PC</summary>
      <param name="tablet">The Tablet object on which ink is collected.</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.Draw(System.Drawing.Rectangle)">
      <summary>Sets a rectangle in which to redraw the ink within the InkOverlay object</summary>
      <param name="rDrawRect">The rectangle in which to redraw the ink, in pixel coordinates</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnPainting(Microsoft.Ink.InkOverlayPaintingEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the Painting event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkOverlayPaintingEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnPainted(System.Windows.Forms.PaintEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the Painted event.</summary>
      <remarks>
      </remarks>
      <param name="e">The PaintEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnSelectionChanging(Microsoft.Ink.InkOverlaySelectionChangingEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the SelectionChanging event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkOverlaySelectionChangingEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnSelectionChanged(System.EventArgs)">
      <summary> Allows derived classes to modify the default behavior of the SelectionChanged event.</summary>
      <remarks>
      </remarks>
      <param name="e">The EventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnSelectionMoving(Microsoft.Ink.InkOverlaySelectionMovingEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the SelectionMoving event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkOverlaySelectionMovingEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnSelectionResizing(Microsoft.Ink.InkOverlaySelectionResizingEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the SelectionResizing event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkOverlaySelectionResizingEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnSelectionMoved(Microsoft.Ink.InkOverlaySelectionMovedEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the SelectionMoved event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkOverlaySelectionMovedEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnSelectionResized(Microsoft.Ink.InkOverlaySelectionResizedEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the SelectionResized event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkOverlaySelectionResizedEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnStrokesDeleting(Microsoft.Ink.InkOverlayStrokesDeletingEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the StrokesDeleting event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkOverlayStrokesDeletingEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnStrokesDeleted(System.EventArgs)">
      <summary> Allows derived classes to modify the default behavior of the StrokesDeleted event.</summary>
      <remarks>
      </remarks>
      <param name="e">The EventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnMouseDown(Microsoft.Ink.CancelMouseEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the MouseDown event.</summary>
      <param name="e">The CancelMouseEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnMouseMove(Microsoft.Ink.CancelMouseEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the MouseMove event.</summary>
      <param name="e">The CancelMouseEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnMouseUp(Microsoft.Ink.CancelMouseEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the MouseUp event.</summary>
      <param name="e">The CancelMouseEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnMouseWheel(Microsoft.Ink.CancelMouseEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the MouseWheel event.</summary>
      <param name="e">The CancelMouseEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnDoubleClick(System.ComponentModel.CancelEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the DoubleClick event.</summary>
      <param name="e">The CancelEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnStroke(Microsoft.Ink.InkCollectorStrokeEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the Stroke event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorStrokeEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnCursorDown(Microsoft.Ink.InkCollectorCursorDownEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the CursorDown event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorCursorDownEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnNewPackets(Microsoft.Ink.InkCollectorNewPacketsEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the NewPackets event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorNewPacketsEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnNewInAirPackets(Microsoft.Ink.InkCollectorNewInAirPacketsEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the NewInAirPackets event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorNewInAirPacketsEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnCursorButtonDown(Microsoft.Ink.InkCollectorCursorButtonDownEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the CursorButtonDown event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorCursorButtonDownEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnCursorButtonUp(Microsoft.Ink.InkCollectorCursorButtonUpEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the CursorButtonUp event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorCursorButtonUpEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnCursorInRange(Microsoft.Ink.InkCollectorCursorInRangeEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the CursorInRange event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorCursorInRangeEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnCursorOutOfRange(Microsoft.Ink.InkCollectorCursorOutOfRangeEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the CursorOutOfRange event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorCursorOutOfRangeEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnSystemGesture(Microsoft.Ink.InkCollectorSystemGestureEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the SystemGesture event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorSystemGestureEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnGesture(Microsoft.Ink.InkCollectorGestureEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the Gesture event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorGestureEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnTabletAdded(Microsoft.Ink.InkCollectorTabletAddedEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the TabletAdded event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorTabletAddedEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.OnTabletRemoved(Microsoft.Ink.InkCollectorTabletRemovedEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the TabletRemoved event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorTabletRemovedEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkOverlay.FireDelegateOnWindowsThread(System.Delegate,System.EventArgs)">
      <summary>
      </summary>
      <param name="method">
      </param>
      <param name="e">
      </param>
      <returns>
      </returns>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.CursorDown">
      <summary> Occurs when the cursor tip contacts the digitizing tablet surface</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.MouseDown">
      <summary> Occurs when the mouse pointer is over the InkOverlay and a mouse button is pressed</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.MouseMove">
      <summary> Occurs when the mouse pointer is moved over the InkOverlay</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.MouseUp">
      <summary> Occurs when the mouse pointer is over the InkOverlay and a mouse button is released</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.MouseWheel">
      <summary> Occurs when the mouse wheel moves while the InkOverlay object has focus</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.DoubleClick">
      <summary> Occurs when the InkOverlay object is double-clicked</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.Stroke">
      <summary> Occurs when the user finishes drawing a new stroke on any tablet</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.NewPackets">
      <summary> Occurs when the InkOverlay receives packets</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.NewInAirPackets">
      <summary> Occurs when an in-air packet is seen, which happens when a user moves a pen near the tablet and the cursor is within the InkOverlay object's window or the user moves a mouse within the InkOverlay object's associated window</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.CursorInRange">
      <summary> Occurs when a cursor enters the physical detection range (proximity) of the tablet context</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.CursorOutOfRange">
      <summary> Occurs when a cursor leaves the physical detection range (proximity) of the tablet context</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.CursorButtonDown">
      <summary> Occurs when the InkOverlay detects a cursor button that is down</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.CursorButtonUp">
      <summary> Occurs when the InkOverlay detects a cursor button that is up</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.TabletAdded">
      <summary> Occurs when a Tablet is added to the system</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.TabletRemoved">
      <summary> Occurs when a Tablet is removed from the system</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.SystemGesture">
      <summary> Occurs when a system gesture is recognized</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.Painting">
      <summary> Occurs before the InkOverlay object redraws itself</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.Painted">
      <summary> Occurs when the InkOverlay object has completed redrawing itself</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.SelectionChanging">
      <summary> Occurs when the selection of ink within the control is about to change, such as through alterations to the user interface, cut-and-paste procedures, or the Selection property</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.SelectionChanged">
      <summary> Occurs when the selection of ink within the control has changed, such as through alterations to the user interface, cut-and-paste procedures, or the Selection property</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.SelectionMoving">
      <summary> Occurs when the position of the current selection is about to change, such as through alterations to the user interface, cut-and-paste procedures, or the Selection property</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.SelectionResizing">
      <summary> Occurs when the size of the current selection is about to change, such as through alterations to the user interface, cut-and-paste procedures, or the Selection property</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.SelectionMoved">
      <summary> Occurs when the position of the current selection has changed, such as through alterations to the user interface, cut-and-paste procedures, or the Selection property</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.SelectionResized">
      <summary> Occurs when the size of the current selection has changed, such as through alterations to the user interface, cut-and-paste procedures, or the Selection property</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.StrokesDeleting">
      <summary> Occurs before strokes are deleted from the Ink property</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.StrokesDeleted">
      <summary> Occurs after strokes have been deleted from the Ink property</summary>
    </member>
    <member name="E:Microsoft.Ink.InkOverlay.Gesture">
      <summary> Occurs when an application-specific gesture is recognized</summary>
    </member>
    <member name="P:Microsoft.Ink.InkOverlay.Handle">
      <value>    Gets or sets the handle of the window to which the InkOverlay object is attached.  </value>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkOverlay.AttachedControl">
      <value>      Gets or sets the control to which the InkOverlay object is attached.    </value>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkOverlay.AutoRedraw">
      <summary>Gets or sets a value that specifies whether the InkOverlay object repaints the ink when the window is invalidated.	</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkOverlay.DynamicRendering">
      <summary>Gets or sets a value that indicates whether ink is rendered as it is drawn.</summary>
    </member>
    <member name="P:Microsoft.Ink.InkOverlay.CollectingInk">
      <summary>Gets a value that specifies whether ink is currently being drawn on an InkOverlay object.	</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkOverlay.DefaultDrawingAttributes">
      <summary>Gets or sets the default DrawingAttributes object, which specifies the drawing attributes that are used when drawing and displaying ink.  	</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkOverlay.Renderer">
      <summary>Gets or sets the Renderer object that is used to draw ink.  	</summary>
    </member>
    <member name="P:Microsoft.Ink.InkOverlay.Cursors">
      <summary>Gets the Cursors collection that is available for use in the inking region</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkOverlay.Ink">
      <summary>Gets or sets the Ink object that is associated with the InkOverlay object.	</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkOverlay.Enabled">
      <summary>      Gets or sets a value that specifies whether the InkOverlay object collects pen input.  	</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkOverlay.CollectionMode">
      <summary>Gets or sets the collection mode that determines whether ink, gesture, or both are recognized as the user writes.  	</summary>
    </member>
    <member name="P:Microsoft.Ink.InkOverlay.DesiredPacketDescription">
      <summary>Gets or sets interest in aspects of the packet associated with ink drawn on the InkOverlay object.			</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkOverlay.Tablet">
      <summary>Gets the tablet device that the InkOverlay object is currently using to collect input.	</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkOverlay.Cursor">
      <summary>Gets or sets the cursor that appears when the mouse pointer is over the InkPicture control.  	</summary>
    </member>
    <member name="P:Microsoft.Ink.InkOverlay.SupportHighContrastInk">
      <summary>Gets or sets a value that specifies whether ink is rendered as just one color when the system is in High Contrast mode.  	</summary>
    </member>
    <member name="P:Microsoft.Ink.InkOverlay.SupportHighContrastSelectionUI">
      <summary>Gets or sets a value that specifies whether all selection user interface (UI) are drawn in high contrast when the system is in High Contrast mode.</summary>
    </member>
    <member name="P:Microsoft.Ink.InkOverlay.MarginX">
      <summary>Gets or sets the margins along the x-axis, in pixels.  	</summary>
    </member>
    <member name="P:Microsoft.Ink.InkOverlay.MarginY">
      <summary>Gets or sets the margins along the y-axis, in pixels.  	</summary>
    </member>
    <member name="P:Microsoft.Ink.InkOverlay.AttachMode">
      <summary>Gets or sets the value that specifies whether the InkOverlay object is attached behind or in front of the known window.</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkOverlay.EditingMode">
      <summary>Gets or sets a value that indicates whether the InkOverlay is in ink mode, deletion mode, or selecting/editing mode.	</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkOverlay.EraserMode">
      <summary>Gets or sets a value that indicates whether ink is erased by stroke or by point.</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkOverlay.EraserWidth">
      <summary>Gets or sets a value that specifies the width of the eraser pen tip.	</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkOverlay.Selection">
      <summary>Gets or sets the Strokes collection that is currently selected inside the InkOverlay control.   	</summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:Microsoft.Ink.InkPicture">
      <summary> The InkPicture control provides the ability to place an image in an application and enable users to add ink on top of it</summary>
      <remarks>
      </remarks>
    </member>
    <member name="F:Microsoft.Ink.InkPicture.DefaultInkCollectionMargin">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.Ink.InkPicture.ClipInkToMargin">
      <summary> Not implemented.	</summary>
    </member>
    <member name="F:Microsoft.Ink.InkPicture.onPainting">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.Ink.InkPicture.onPainted">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.Ink.InkPicture.onSelectionChanging">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.Ink.InkPicture.onSelectionChanged">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.Ink.InkPicture.onSelectionMoving">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.Ink.InkPicture.onSelectionResizing">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.Ink.InkPicture.onSelectionMoved">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.Ink.InkPicture.onSelectionResized">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.Ink.InkPicture.onStrokesDeleting">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.Ink.InkPicture.onStrokesDeleted">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the InkPicture control and optionally releases the managed resources.		</summary>
      <param name="disposing">Set to true to release both managed and unmanaged resources; false to release only unmanaged resources.		</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.#ctor">
      <summary>Initializes a new instance of the InkPicture control.</summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnHandleCreated(System.EventArgs)">
      <summary> Allows derived classes to modify the default behavior of the HandleCreated event.</summary>
      <param name="e">The EventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnHandleDestroyed(System.EventArgs)">
      <summary> Allows derived classes to modify the default behavior of the HandleDestroyed event.</summary>
      <param name="e">The EventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the MouseDown event</summary>
      <param name="e">The MouseEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.SetGestureStatus(Microsoft.Ink.ApplicationGesture,System.Boolean)">
      <summary>Sets whether or not the InkPicture object has interest in a known application gesture.    </summary>
      <param name="gesture">A member of the ApplicationGesture enumeration, which indicates the gesture to set the status of</param>
      <param name="listening">Whether or not the InkPicture object has interest in a known application gesture.</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.GetGestureStatus(Microsoft.Ink.ApplicationGesture)">
      <summary>Returns a value that indicates whether the InkPicture control has interest in a particular application gesture.    </summary>
      <param name="gesture">A member of the ApplicationGesture enumeration that represents the gesture to query about.    </param>
      <returns>Whether the InkPicture control has interest in a particular application gesture.</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the KeyDown event.</summary>
      <param name="e">The KeyEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.HitTestSelection(System.Int32,System.Int32)">
      <summary>Returns a value that indicates which part of a selection, if any, was hit during a hit test.</summary>
      <param name="X">The x-position, in pixels, of the hit test</param>
      <param name="Y">The y-position, in pixels, of the hit test</param>
      <returns>A member of the SelectionHitResult enumeration, which specifies which part of a selection, if any, was hit during a hit test</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.SetWindowInputRectangle(System.Drawing.Rectangle)">
      <summary>Sets the window rectangle, in pixels, within which ink is drawn.    </summary>
      <param name="windowInputRectangle">
      </param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.GetWindowInputRectangle(System.Drawing.Rectangle@)">
      <summary> Gets the window rectangle, in pixels, within which ink is drawn.    </summary>
      <param name="windowInputRectangle">The rectangle within which ink is drawn.    </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.SetAllTabletsMode">
      <summary>Sets the InkPicture control to collect ink from any tablet attached to the Tablet PC.	</summary>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.SetAllTabletsMode(System.Boolean)">
      <summary>Sets the InkPicture control to collect ink from any tablet attached to the Tablet PC.	</summary>
      <param name="useMouseForInput">The Boolean value that indicates whether to use the mouse as an input device</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.SetSingleTabletIntegratedMode(Microsoft.Ink.Tablet)">
      <summary>Sets the InkPicture control to collect ink from only one tablet attached to the Tablet PC</summary>
      <param name="tablet">The Tablet object on which ink is collected.</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnPainting(Microsoft.Ink.InkOverlayPaintingEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the Painting event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkOverlayPaintingEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnPainted(System.Windows.Forms.PaintEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the Painted event.</summary>
      <remarks>
      </remarks>
      <param name="e">The PaintEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnSelectionChanging(Microsoft.Ink.InkOverlaySelectionChangingEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the SelectionChanging event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkOverlaySelectionChangingEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnSelectionChanged(System.EventArgs)">
      <summary> Allows derived classes to modify the default behavior of the SelectionChanged event.</summary>
      <remarks>
      </remarks>
      <param name="e">The EventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnSelectionMoving(Microsoft.Ink.InkOverlaySelectionMovingEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the SelectionMoving event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkOverlaySelectionMovingEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnSelectionResizing(Microsoft.Ink.InkOverlaySelectionResizingEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the SelectionResizing event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkOverlaySelectionResizingEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnSelectionMoved(Microsoft.Ink.InkOverlaySelectionMovedEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the SelectionMoved event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkOverlaySelectionMovedEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnSelectionResized(Microsoft.Ink.InkOverlaySelectionResizedEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the SelectionResized event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkOverlaySelectionResizedEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnStrokesDeleting(Microsoft.Ink.InkOverlayStrokesDeletingEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the StrokesDeleting event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkOverlayStrokesDeletingEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnStrokesDeleted(System.EventArgs)">
      <summary> Allows derived classes to modify the default behavior of the StrokesDeleted event.</summary>
      <remarks>
      </remarks>
      <param name="e">The EventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnStroke(Microsoft.Ink.InkCollectorStrokeEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the Stroke event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorStrokeEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnCursorDown(Microsoft.Ink.InkCollectorCursorDownEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the CursorDown.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorCursorDownEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnNewPackets(Microsoft.Ink.InkCollectorNewPacketsEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the NewPackets event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorNewPacketsEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnNewInAirPackets(Microsoft.Ink.InkCollectorNewInAirPacketsEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the NewInAirPackets.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorNewInAirPacketsEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnCursorButtonDown(Microsoft.Ink.InkCollectorCursorButtonDownEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the CursorButtonDown event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorCursorButtonDownEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnCursorButtonUp(Microsoft.Ink.InkCollectorCursorButtonUpEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the CursorButtonUp event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorCursorButtonUpEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnCursorInRange(Microsoft.Ink.InkCollectorCursorInRangeEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the CursorInRange.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorCursorInRangeEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnCursorOutOfRange(Microsoft.Ink.InkCollectorCursorOutOfRangeEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the CursorOutOfRange.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorCursorOutOfRangeEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnSystemGesture(Microsoft.Ink.InkCollectorSystemGestureEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the SystemGesture event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorSystemGestureEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnGesture(Microsoft.Ink.InkCollectorGestureEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the Gesture event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorGestureEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnTabletAdded(Microsoft.Ink.InkCollectorTabletAddedEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the TabletAdded event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorTabletAddedEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.OnTabletRemoved(Microsoft.Ink.InkCollectorTabletRemovedEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the TabletRemoved event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorTabletRemovedEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkPicture.FireDelegateOnWindowsThread(System.Delegate,System.EventArgs)">
      <summary>
      </summary>
      <param name="method">
      </param>
      <param name="e">
      </param>
      <returns>
      </returns>
    </member>
    <member name="E:Microsoft.Ink.InkPicture.CursorDown">
      <summary>      Occurs when the cursor tip contacts the digitizing tablet surface.    </summary>
    </member>
    <member name="E:Microsoft.Ink.InkPicture.Stroke">
      <summary> Occurs when the user finishes drawing a new stroke on any tablet</summary>
    </member>
    <member name="E:Microsoft.Ink.InkPicture.NewPackets">
      <summary> Occurs when the InkPicture receives packets</summary>
    </member>
    <member name="E:Microsoft.Ink.InkPicture.NewInAirPackets">
      <summary> Occurs when an in-air packet is seen, which happens when a user moves a pen near the tablet and the cursor is within the InkPicture or the user moves a mouse within the InkPicture</summary>
    </member>
    <member name="E:Microsoft.Ink.InkPicture.CursorInRange">
      <summary>      Occurs when a cursor enters the physical detection range (proximity) of the tablet context.    </summary>
    </member>
    <member name="E:Microsoft.Ink.InkPicture.CursorOutOfRange">
      <summary> Occurs when a cursor leaves the physical detection range (proximity) of the tablet context</summary>
    </member>
    <member name="E:Microsoft.Ink.InkPicture.CursorButtonDown">
      <summary> Occurs when the InkPicture detects a cursor button that is down</summary>
    </member>
    <member name="E:Microsoft.Ink.InkPicture.CursorButtonUp">
      <summary>      Occurs when the InkPicture detects a cursor button that is up.    </summary>
    </member>
    <member name="E:Microsoft.Ink.InkPicture.TabletAdded">
      <summary> Occurs when a Tablet is added to the system</summary>
    </member>
    <member name="E:Microsoft.Ink.InkPicture.TabletRemoved">
      <summary> Occurs when a Tablet is removed from the system</summary>
    </member>
    <member name="E:Microsoft.Ink.InkPicture.SystemGesture">
      <summary> Occurs when a system gesture is recognized</summary>
    </member>
    <member name="E:Microsoft.Ink.InkPicture.Painting">
      <summary> Occurs before the InkPicture object redraws itself</summary>
    </member>
    <member name="E:Microsoft.Ink.InkPicture.Painted">
      <summary> Occurs when the InkPicture object has completed redrawing itself</summary>
    </member>
    <member name="E:Microsoft.Ink.InkPicture.SelectionChanging">
      <summary> Occurs when the selection of ink within the control is about to change, such as through alterations to the user interface, cut-and-paste procedures, or the Selection property</summary>
    </member>
    <member name="E:Microsoft.Ink.InkPicture.SelectionChanged">
      <summary> Occurs when the selection of ink within the control has changed, such as through alterations to the user interface, cut-and-paste procedures, or the Selection property</summary>
    </member>
    <member name="E:Microsoft.Ink.InkPicture.SelectionMoving">
      <summary> Occurs when the position of the current selection is about to change, such as through alterations to the user interface, cut-and-paste procedures, or the Selection property</summary>
    </member>
    <member name="E:Microsoft.Ink.InkPicture.SelectionResizing">
      <summary> Occurs when the size of the current selection is about to change, such as through alterations to the user interface, cut-and-paste procedures, or the Selection property</summary>
    </member>
    <member name="E:Microsoft.Ink.InkPicture.SelectionMoved">
      <summary> Occurs when the position of the current selection has changed, such as through alterations to the user interface, cut-and-paste procedures, or the Selection property</summary>
    </member>
    <member name="E:Microsoft.Ink.InkPicture.SelectionResized">
      <summary> Occurs when the size of the current selection has changed, such as through alterations to the user interface, cut-and-paste procedures, or the Selection property</summary>
    </member>
    <member name="E:Microsoft.Ink.InkPicture.StrokesDeleting">
      <summary> Occurs before strokes are deleted from the Ink property</summary>
    </member>
    <member name="E:Microsoft.Ink.InkPicture.StrokesDeleted">
      <summary> Occurs after strokes have been deleted from the Ink property</summary>
    </member>
    <member name="E:Microsoft.Ink.InkPicture.Gesture">
      <summary> Occurs when an application-specific gesture is recognized</summary>
    </member>
    <member name="P:Microsoft.Ink.InkPicture.Disposing">
      <summary>Gets a value that indicates whether the InkPicture control is being disposed of.    </summary>
    </member>
    <member name="P:Microsoft.Ink.InkPicture.AutoRedraw">
      <summary>Gets or sets a value that specifies whether the InkPicture control repaints the ink when the window is invalidated.	</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkPicture.DynamicRendering">
      <summary>Gets or sets a value that indicates whether ink is rendered as it is drawn.</summary>
    </member>
    <member name="P:Microsoft.Ink.InkPicture.CollectingInk">
      <summary>Gets a value that specifies whether ink is currently being drawn on an InkPicture control.	</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkPicture.DefaultDrawingAttributes">
      <summary>Gets or sets the default DrawingAttributes object, which specifies the drawing attributes that are used when drawing and displaying ink.  	</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkPicture.Renderer">
      <summary>Gets or sets the Renderer object that is used to draw ink.  	</summary>
    </member>
    <member name="P:Microsoft.Ink.InkPicture.Cursors">
      <summary>Gets the Cursors collection that is available for use in the inking region</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkPicture.Ink">
      <summary>Gets or sets the Ink object that is associated with the InkPicture object.	</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkPicture.InkEnabled">
      <summary>      Gets or sets a value that specifies whether the InkPicture control collects pen input.  	</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkPicture.CollectionMode">
      <summary>Gets or sets the collection mode that determines whether ink, gesture, or both are recognized as the user writes.  	</summary>
    </member>
    <member name="P:Microsoft.Ink.InkPicture.DesiredPacketDescription">
      <summary>Gets or sets interest in aspects of the packet associated with ink drawn on the InkPicture object.			</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkPicture.Tablet">
      <summary>Gets the tablet device that the InkPicture control is currently using to collect input.		</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkPicture.Cursor">
      <summary>Gets or sets the cursor that appears when the mouse pointer is over the InkPicture control.  	</summary>
    </member>
    <member name="P:Microsoft.Ink.InkPicture.TabStop">
      <summary>Gets or sets a value indicating whether the user can give the focus to this control by pressing the TAB key.  	</summary>
    </member>
    <member name="P:Microsoft.Ink.InkPicture.SupportHighContrastInk">
      <summary>Gets or sets a value that specifies whether ink is rendered as just one color when the system is in High Contrast mode.  	</summary>
    </member>
    <member name="P:Microsoft.Ink.InkPicture.SupportHighContrastSelectionUI">
      <summary>Gets or sets a value that specifies whether all selection user interface (UI) are drawn in high contrast when the system is in High Contrast mode.</summary>
    </member>
    <member name="P:Microsoft.Ink.InkPicture.MarginX">
      <summary>Gets or sets the margins along the x-axis, in pixels.  	</summary>
    </member>
    <member name="P:Microsoft.Ink.InkPicture.MarginY">
      <summary>Gets or sets the margins along the y-axis, in pixels.  	</summary>
    </member>
    <member name="P:Microsoft.Ink.InkPicture.EditingMode">
      <summary>Gets or sets a value that indicates whether the InkPicture is in ink mode, delete mode, or select/edit mode.	</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkPicture.EraserMode">
      <summary>Gets or sets a value that indicates whether ink is erased by stroke or by point.</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkPicture.EraserWidth">
      <summary>Gets or sets a value that specifies the width of the eraser pen tip.	</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkPicture.Selection">
      <summary>Gets or sets the Strokes collection that is currently selected inside the InkPicture control.   	</summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.SRDescriptionAttribute.#ctor(System.String)">
      <summary>
      </summary>
      <param name="description">
      </param>
    </member>
    <member name="P:Microsoft.Ink.SRDescriptionAttribute.Description">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.Ink.SR">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.Ink.CollectionMode">
      <summary>      Defines values that determine whether ink, gesture, or ink and gestures are recognized as the user writes.    </summary>
    </member>
    <member name="F:Microsoft.Ink.CollectionMode.InkOnly">
      <summary>Collects only ink, creating a stroke.	  The Gesture, Gesture, or Gesture event interest is set to false, meaning that gestures are not collected (all other event interests remain as they were).	</summary>
    </member>
    <member name="F:Microsoft.Ink.CollectionMode.GestureOnly">
      <summary>Collects only gestures and does not create a stroke</summary>
    </member>
    <member name="F:Microsoft.Ink.CollectionMode.InkAndGesture">
      <summary>Accepts only single-stroke gestures</summary>
    </member>
    <member name="T:Microsoft.Ink.SystemGesture">
      <summary>      Defines values that set the interest in a set of operating system-specific gesture</summary>
    </member>
    <member name="F:Microsoft.Ink.SystemGesture.Tap">
      <summary>      Maps to a left-click on a mouse</summary>
    </member>
    <member name="F:Microsoft.Ink.SystemGesture.DoubleTap">
      <summary>      Maps to a double-click on a mouse</summary>
    </member>
    <member name="F:Microsoft.Ink.SystemGesture.RightTap">
      <summary>      Maps to a right-click on a mouse</summary>
    </member>
    <member name="F:Microsoft.Ink.SystemGesture.Drag">
      <summary>      Maps to a left drag on a mouse</summary>
    </member>
    <member name="F:Microsoft.Ink.SystemGesture.RightDrag">
      <summary>      Specifies a press and hold followed by a stroke, which maps to a right drag on a mouse</summary>
    </member>
    <member name="F:Microsoft.Ink.SystemGesture.HoldEnter">
      <summary>      Specifies a left click for a long time, which has no mouse equivalent</summary>
    </member>
    <member name="F:Microsoft.Ink.SystemGesture.HoldLeave">
      <summary>      Not implemented.    </summary>
    </member>
    <member name="F:Microsoft.Ink.SystemGesture.HoverEnter">
      <summary>      Maps to a mouse hover</summary>
    </member>
    <member name="F:Microsoft.Ink.SystemGesture.HoverLeave">
      <summary>      Maps to a mouse leaving a hover</summary>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorCursorDownEventHandler">
      <summary>Represents the method that handles the CursorDown event of an InkCollector.</summary>
      <param name="sender">[in] Specifies the source InkCollector of this event.</param>
      <param name="e">[in] Specifies the InkCollectorCursorDownEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorCursorDownEventArgs">
      <summary>Provides data for the CursorDown, CursorDown, and CursorDown events.    </summary>
    </member>
    <member name="M:Microsoft.Ink.InkCollectorCursorDownEventArgs.#ctor(Microsoft.Ink.Cursor,Microsoft.Ink.Stroke)">
      <summary>Initializes a new instance of the InkCollectorCursorDownEventArgs class.      </summary>
      <remarks>
      </remarks>
      <param name="cursor">The Cursor object that triggers the CursorDown event.      </param>
      <param name="stroke">The Stroke object created during the CursorDown event.      </param>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorCursorDownEventArgs.Cursor">
      <value>Gets the Cursor object that generated the CursorDown event.</value>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorCursorDownEventArgs.Stroke">
      <value>Gets the Stroke object that was started when the Cursor object caused the CursorDown event to fire.</value>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorStrokeEventHandler">
      <summary>Represents the method that handles the Stroke event of an InkCollector.</summary>
      <param name="sender">[in] Specifies the source InkCollector of this event.</param>
      <param name="e">[in] Specifies the InkCollectorStrokeEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorStrokeEventArgs">
      <summary>      Provides data for the Stroke events of ink collector (Stroke, Stroke, and Stroke), which occur when the user draws a new stroke on any tablet.    </summary>
    </member>
    <member name="M:Microsoft.Ink.InkCollectorStrokeEventArgs.#ctor(Microsoft.Ink.Cursor,Microsoft.Ink.Stroke,System.Boolean)">
      <summary>Initializes a new instance of the InkCollectorStrokeEventArgs class.</summary>
      <remarks>
      </remarks>
      <param name="cursor">The Cursor used to create the Stroke object.</param>
      <param name="stroke">The inked Stroke object that triggers the Stroke event.</param>
      <param name="cancel">Set to true if the Stroke object should be stored after returning from the event handler; false if the Stroke object is deleted after exiting the event handler.</param>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorStrokeEventArgs.Cursor">
      <value>Gets the Cursor object that was used to create the new stroke.</value>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorStrokeEventArgs.Stroke">
      <value>Gets the collected Stroke object that generated the Stroke event.</value>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorNewPacketsEventHandler">
      <summary>Represents the method that handles the NewPackets event of an InkCollector.</summary>
      <param name="sender">[in] Specifies the source InkCollector of this event.</param>
      <param name="e">[in] Specifies the InkCollectorNewPacketsEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorNewPacketsEventArgs">
      <summary>      Provides data for the NewPackets events of ink collector (NewPackets, NewPackets, and NewPackets), which occur when ink collector receives packet.    </summary>
    </member>
    <member name="M:Microsoft.Ink.InkCollectorNewPacketsEventArgs.#ctor(Microsoft.Ink.Cursor,Microsoft.Ink.Stroke,System.Int32,System.Int32[])">
      <summary>Initializes a new instance of the InkCollectorNewPacketsEventArgs class.</summary>
      <remarks>
      </remarks>
      <param name="cursor">The Cursor object that triggers the NewPackets event.    </param>
      <param name="stroke">The inked Stroke object.    </param>
      <param name="packetCount">The number of packet collected.</param>
      <param name="packetData">The packet data in raw format.</param>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorNewPacketsEventArgs.Cursor">
      <value>Gets the Cursor object that was used to create the Stroke object that generated the NewPackets event.</value>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorNewPacketsEventArgs.Stroke">
      <value>Gets the Stroke object that generated the NewPackets event.</value>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorNewPacketsEventArgs.PacketCount">
      <value>Gets the number of packet received for a Stroke object.</value>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorNewPacketsEventArgs.PacketData">
      <value>Gets an array of type Int32 containing the selected data for the packet.    </value>
      <remarks>
      </remarks>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorNewInAirPacketsEventHandler">
      <summary>Represents the method that handles the NewInAirPackets event of an InkCollector.</summary>
      <param name="sender">[in] Specifies the source InkCollector of this event.</param>
      <param name="e">[in] Specifies the InkCollectorNewInAirPacketsEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorNewInAirPacketsEventArgs">
      <summary>      Provides data for the NewInAirPackets events of ink collector (NewInAirPackets, NewInAirPackets, and NewInAirPackets), which occur when an in-air packet is seen.    </summary>
    </member>
    <member name="M:Microsoft.Ink.InkCollectorNewInAirPacketsEventArgs.#ctor(Microsoft.Ink.Cursor,System.Int32,System.Int32[])">
      <summary>Initializes a new instance of the InkCollectorNewInAirPacketsEventArgs class.</summary>
      <remarks>
      </remarks>
      <param name="cursor">The Cursor that triggers the NewInAirPackets event.    </param>
      <param name="packetCount">The number of packet collected.    </param>
      <param name="packetData">The packet data in raw format.    </param>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorNewInAirPacketsEventArgs.Cursor">
      <value>Gets the Cursor object that generated the NewInAirPackets event.    </value>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorNewInAirPacketsEventArgs.PacketCount">
      <value>Gets the number of in-air packet received.</value>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorNewInAirPacketsEventArgs.PacketData">
      <value>Gets an array of type Int32 containing the selected data for the packet.    </value>
      <remarks>
      </remarks>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorCursorInRangeEventHandler">
      <summary>Represents the method that handles the CursorInRange event of an InkCollector.</summary>
      <param name="sender">[in] Specifies the source InkCollector of this event.</param>
      <param name="e">[in] Specifies the InkCollectorCursorInRangeEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorCursorInRangeEventArgs">
      <summary>Provides data for the CursorInRange, CursorInRange, and CursorInRange events.      </summary>
    </member>
    <member name="M:Microsoft.Ink.InkCollectorCursorInRangeEventArgs.#ctor(Microsoft.Ink.Cursor,System.Boolean,Microsoft.Ink.CursorButtonState[])">
      <summary>Initializes a new instance of the InkCollectorCursorInRangeEventArgs class.	  </summary>
      <remarks>
      </remarks>
      <param name="cursor">The Cursor object that triggers the CursorInRange event.</param>
      <param name="newCursor">Set to true if this is the first time this InkCollector object has seen this Cursor object; otherwise false.</param>
      <param name="buttonStates">The values of the State properties for the CursorButtons collection associated with the Cursor object, taken at the time the CursorInRange event occurs.</param>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorCursorInRangeEventArgs.Cursor">
      <value>Gets the Cursor object that generated the CursorInRange event.</value>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorCursorInRangeEventArgs.NewCursor">
      <value>Gets a Boolean value that indicates whether this is the 	first time this InkCollector object has come in contact with the Cursor object that generated the CursorInRange event.</value>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorCursorInRangeEventArgs.ButtonStates">
      <value>Gets an array of values from the CursorButtonState enumeration describing the state of the buttons for the cursor that generated the CursorInRange event.</value>
      <remarks>
      </remarks>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorCursorOutOfRangeEventHandler">
      <summary>Represents the method that handles the CursorOutOfRange event of an InkCollector.</summary>
      <param name="sender">[in] Specifies the source InkCollector of this event.</param>
      <param name="e">[in] Specifies the InkCollectorCursorOutOfRangeEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorCursorOutOfRangeEventArgs">
      <summary>Provides data for the CursorOutOfRange, CursorOutOfRange, and CursorOutOfRange events.      </summary>
    </member>
    <member name="M:Microsoft.Ink.InkCollectorCursorOutOfRangeEventArgs.#ctor(Microsoft.Ink.Cursor)">
      <summary>Initializes a new instance of the InkCollectorCursorOutOfRangeEventArgs class.    </summary>
      <remarks>
      </remarks>
      <param name="cursor">The Cursor object that triggers the CursorOutOfRange event.    </param>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorCursorOutOfRangeEventArgs.Cursor">
      <value>Gets the Cursor object that generated the CursorOutOfRange event.</value>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorCursorButtonDownEventHandler">
      <summary>Represents the method that handles the CursorButtonDown event of an InkCollector.</summary>
      <remarks>
      </remarks>
      <param name="sender">[in] Specifies the source InkCollector of this event.</param>
      <param name="e">[in] Specifies the InkCollectorCursorButtonDownEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorCursorButtonDownEventArgs">
      <summary>      Provides data for the CursorButtonDown, CursorButtonDown, and CursorButtonDown events.    </summary>
    </member>
    <member name="M:Microsoft.Ink.InkCollectorCursorButtonDownEventArgs.#ctor(Microsoft.Ink.Cursor,Microsoft.Ink.CursorButton)">
      <summary>Initializes a new instance of the InkCollectorCursorButtonDownEventArgs class.</summary>
      <remarks>
      </remarks>
      <param name="cursor">The Cursor object that triggers the CursorButtonDown event.    </param>
      <param name="button">The CursorButton that was pressed.    </param>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorCursorButtonDownEventArgs.Cursor">
      <value>Gets the Cursor object that generated the CursorButtonDown event.    </value>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorCursorButtonDownEventArgs.Button">
      <value>Gets the CursorButton object for the button that was pressed.</value>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorCursorButtonUpEventHandler">
      <summary>Represents the method that handles the CursorButtonUp event of an InkCollector.</summary>
      <remarks>
      </remarks>
      <param name="sender">[in] Specifies the source InkCollector of this event</param>
      <param name="e">[in] Specifies the InkCollectorCursorButtonUpEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorCursorButtonUpEventArgs">
      <summary>      Provides data for the CursorButtonUp, CursorButtonUp, and CursorButtonUp events.    </summary>
    </member>
    <member name="M:Microsoft.Ink.InkCollectorCursorButtonUpEventArgs.#ctor(Microsoft.Ink.Cursor,Microsoft.Ink.CursorButton)">
      <summary>Initializes a new instance of the InkCollectorCursorButtonUpEventArgs class.</summary>
      <remarks>
      </remarks>
      <param name="cursor">The Cursor object that triggers the CursorButtonUp event.</param>
      <param name="button">The CursorButton that was released.</param>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorCursorButtonUpEventArgs.Cursor">
      <value>Gets the Cursor object that generated the CursorButtonUp event.</value>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorCursorButtonUpEventArgs.Button">
      <value>Gets the CursorButton object for the button that was released.</value>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorTabletAddedEventHandler">
      <summary>Represents the method that handles the TabletAdded event of an InkCollector.</summary>
      <param name="sender">[in] Specifies the source InkCollector of this event.</param>
      <param name="e">[in] Specifies the InkCollectorTabletAddedEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorTabletAddedEventArgs">
      <summary>      Provides data for the TabletAdded events of ink collector (TabletAdded, TabletAdded, and TabletAdded), which occur when a tablet is added to the system.    </summary>
    </member>
    <member name="M:Microsoft.Ink.InkCollectorTabletAddedEventArgs.#ctor(Microsoft.Ink.Tablet)">
      <summary>Initializes a new instance of the InkCollectorTabletAddedEventArgs class.</summary>
      <remarks>
      </remarks>
      <param name="tablet">The Tablet object that is added.</param>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorTabletAddedEventArgs.Tablet">
      <value>Gets the Tablet object that is added to the system.</value>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorTabletRemovedEventHandler">
      <summary>Represents the method that handles the TabletRemoved event of an InkCollector.</summary>
      <param name="sender">[in] Specifies the source InkCollector of this event.</param>
      <param name="e">[in] Specifies the InkCollectorTabletRemovedEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorTabletRemovedEventArgs">
      <summary>      Provides data for the TabletRemoved events of ink collector (TabletRemoved, TabletRemoved, and TabletRemoved), which occur when a tablet is removed from the system.    </summary>
    </member>
    <member name="M:Microsoft.Ink.InkCollectorTabletRemovedEventArgs.#ctor(System.Int32)">
      <summary>Initializes a new instance of the InkCollectorTabletRemovedEventArgs class.</summary>
      <remarks>
      </remarks>
      <param name="tabletId">The value that was used as the ID for the Tablet object that was removed.</param>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorTabletRemovedEventArgs.TabletId">
      <value>Gets the Int32 value that was used as the ID for the Tablet object that was removed.</value>
      <remarks>
      </remarks>
    </member>
    <member name="T:Microsoft.Ink.CancelMouseEventArgs">
      <summary>      Provides data for cancelable mouse events.    </summary>
    </member>
    <member name="M:Microsoft.Ink.CancelMouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the CancelMouseEventArgs class</summary>
      <param name="mb"> A member of the MouseButtons enumeration, specifying which mouse button was pressed</param>
      <param name="clicks"> The number of times the mouse button was pressed and released</param>
      <param name="x"> The x-coordinate, in pixels, of a mouse click.</param>
      <param name="y"> The y-coordinate, in pixels, of a mouse click</param>
      <param name="delta"> A signed count of the number of detents the mouse wheel has rotated.</param>
      <param name="cancel">Set to true to cancel the event for the parent control; otherwise false</param>
    </member>
    <member name="P:Microsoft.Ink.CancelMouseEventArgs.Cancel">
      <summary>Gets or sets a value that indicates whether the mouse event is canceled for the parent control.</summary>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorMouseDownEventHandler">
      <summary>Represents the method that handles the MouseDown event of an InkCollector.</summary>
      <param name="sender">[in] Specifies the source InkCollector of this event.</param>
      <param name="e">[in] Specifies the CancelMouseEventArgs object that contains the event data</param>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorMouseMoveEventHandler">
      <summary>Represents the method that handles the MouseMove event of an InkCollector.</summary>
      <param name="sender">[in] Specifies the source InkCollector of this event.</param>
      <param name="e">[in] Specifies the CancelMouseEventArgs object that contains the event data</param>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorMouseUpEventHandler">
      <summary>Represents the method that handles the MouseUp event of an InkCollector.</summary>
      <param name="sender">[in] Specifies the source InkCollector of this event.</param>
      <param name="e">[in] Specifies the CancelMouseEventArgs object that contains the event data</param>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorMouseWheelEventHandler">
      <summary>Represents the method that handles the MouseWheel event of an InkCollector.</summary>
      <param name="sender">[in] Specifies the source InkCollector of this event.</param>
      <param name="e">[in] Specifies the CancelMouseEventArgs object that contains the event data</param>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorDoubleClickEventHandler">
      <summary>Represents the method that handles the DoubleClick event of an InkCollector.</summary>
      <param name="sender">[in] Specifies the source InkCollector of this event.</param>
      <param name="e">[in] Specifies the CancelEventArgs object that contains the event data</param>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorSystemGestureEventHandler">
      <summary>Represents the method that handles the Gesture event of an InkCollector.</summary>
      <param name="sender">[in] Specifies the source InkCollector of this event.</param>
      <param name="e">[in] Specifies the InkCollectorSystemGestureEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorSystemGestureEventArgs">
      <summary>      Provides data for the SystemGesture events of ink collector (SystemGesture, SystemGesture, and SystemGesture), which occur when a system gesture is recognized</summary>
    </member>
    <member name="M:Microsoft.Ink.InkCollectorSystemGestureEventArgs.#ctor(Microsoft.Ink.Cursor,Microsoft.Ink.SystemGesture,System.Drawing.Point,System.Int32,System.Char,System.Int32)">
      <summary>Initializes a new instance of the InkCollectorSystemGestureEventArgs class.</summary>
      <remarks>
      </remarks>
      <param name="cursor">The Cursor used to create the Stroke object.</param>
      <param name="id">The value of the SystemGesture enumeration that corresponds to the system gesture.</param>
      <param name="pt">The location of the hot point for the system gesture.</param>
      <param name="modifier">Reserved.</param>
      <param name="c">Reserved.</param>
      <param name="mode">Set to 1 if the Cursor object is in ink mode; 2 if the Cursor object is in erase mode.</param>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorSystemGestureEventArgs.Cursor">
      <value>Gets the Cursor object that generated the SystemGesture event.</value>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorSystemGestureEventArgs.Point">
      <value>Gets the Point structure that indicates the location of the system gesture.</value>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorSystemGestureEventArgs.Id">
      <value>Gets the value of the system gesture.</value>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorSystemGestureEventArgs.Modifier">
      <value>Reserved.</value>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorSystemGestureEventArgs.Character">
      <value>Reserved.</value>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorSystemGestureEventArgs.CursorMode">
      <value>Gets a value that indicates whether the Cursor object is in normal mode or eraser mode.</value>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorGestureEventHandler">
      <summary>Represents the method that handles the Gesture event of an InkCollector.</summary>
      <param name="sender">[in] Specifies the source InkCollector of this event.</param>
      <param name="e">[in] Specifies the InkCollectorGestureEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.InkCollectorGestureEventArgs">
      <summary>      Provides data for the Gesture events of ink collector (Gesture, Gesture, and Gesture), which occur when an application-specific gesture is recognized.    </summary>
    </member>
    <member name="M:Microsoft.Ink.InkCollectorGestureEventArgs.#ctor(Microsoft.Ink.Cursor,Microsoft.Ink.Strokes,Microsoft.Ink.Gesture[],System.Boolean)">
      <summary>Initializes a new instance of the InkCollectorGestureEventArgs event.</summary>
      <remarks>
      </remarks>
      <param name="cursor">The Cursor used to create the application gesture.</param>
      <param name="strokes">The Strokes collection that the gesture is make of.</param>
      <param name="gestures">An array of Gesture objects recognized, in order of confidence.</param>
      <param name="cancel">Set to true if the gesture was handled in the Gesture event handler (default value); otherwise false.	 </param>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorGestureEventArgs.Cursor">
      <value>Gets the Cursor object that generated the Gesture event.</value>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorGestureEventArgs.Strokes">
      <value>Gets the Strokes collection that the recognizer returned as the application gesture.</value>
    </member>
    <member name="P:Microsoft.Ink.InkCollectorGestureEventArgs.Gestures">
      <value>Gets an array of Gesture objects, in order of confidence, from the recognizer.</value>
    </member>
    <member name="T:Microsoft.Ink.InkCollector">
      <summary>      Represents an object that is used to capture ink from available tablet devices.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="F:Microsoft.Ink.InkCollector.DefaultInkCollectionMargin">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.Ink.InkCollector.ClipInkToMargin">
      <summary> Not implemented.	</summary>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.Finalize">
      <summary>Frees the resources of the current InkCollector object before it is reclaimed by the garbage collector.		</summary>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.Dispose">
      <summary>Releases resources used by the InkCollector object.		</summary>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the InkCollector object and optionally releases the managed resources.		</summary>
      <param name="disposing">Set to true to release both managed and unmanaged resources; false to release only unmanaged resources.		</param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.#ctor">
      <summary>Initializes a new instance of the InkCollector class</summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.#ctor(System.IntPtr)">
      <summary>Initializes a new instance of the InkCollector class and associates a window handle with it.    </summary>
      <param name="handle">The handle of the window to which the InkCollector object is attached</param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.#ctor(System.Windows.Forms.Control)">
      <summary>Initializes a new instance of the InkCollector class</summary>
      <param name="attachedControl">The control to which the InkCollector object is attached.    </param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.#ctor(System.IntPtr,System.Boolean)">
      <summary> Creates an InkCollector object, attaches it to the specified window handle, and determines whether to use the mouse for input</summary>
      <param name="handle">The handle of the window to which the InkCollector object is attached</param>
      <param name="useMouseForInput">Set to true to use the mouse for tablet input; otherwise false.    </param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.#ctor(System.Windows.Forms.Control,System.Boolean)">
      <summary>Initializes a new instance of the InkCollector class</summary>
      <param name="attachedControl">The control to which the InkCollector object is attached.    </param>
      <param name="useMouseForInput">Set to true to use the mouse for tablet input; otherwise false.    </param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.#ctor(System.IntPtr,Microsoft.Ink.Tablet)">
      <summary> Creates an InkCollector object and attaches it to a specified window handle on a specified tablet</summary>
      <param name="handle">The handle of the window to which the InkCollector object is attached</param>
      <param name="tablet">The Tablet object to which the new window of the InkCollector object is attached.    </param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.#ctor(System.Windows.Forms.Control,Microsoft.Ink.Tablet)">
      <summary>Initializes a new instance of the InkCollector class</summary>
      <param name="attachedControl">The control to which the InkCollector object is attached.    </param>
      <param name="tablet">The Tablet object to which the new window of the InkCollector object is attached.    </param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.OnHandleCreated(System.Object,System.EventArgs)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.OnHandleDestroyed(System.Object,System.EventArgs)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.SetGestureStatus(Microsoft.Ink.ApplicationGesture,System.Boolean)">
      <summary>Sets whether or not the InkCollector object has interest in a known application gesture.    </summary>
      <param name="gesture">A member of the ApplicationGesture enumeration, which indicates the gesture to set the status of</param>
      <param name="listening">Whether or not the InkCollector object has interest in a known application gesture.</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.GetGestureStatus(Microsoft.Ink.ApplicationGesture)">
      <summary>Returns a value that indicates whether the InkCollector object has interest in a particular application gesture.    </summary>
      <param name="gesture">A member of the ApplicationGesture enumeration that represents the gesture to query about.    </param>
      <returns>Whether the InkCollector object has interest in a particular application gesture.</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.SetWindowInputRectangle(System.Drawing.Rectangle)">
      <summary>Sets the window rectangle, in pixels, within which ink is drawn.    </summary>
      <param name="windowInputRectangle">
      </param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.GetWindowInputRectangle(System.Drawing.Rectangle@)">
      <summary> Gets the window rectangle, in pixels, within which ink is drawn.    </summary>
      <param name="windowInputRectangle">The rectangle in which ink is drawn.    </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.SetAllTabletsMode">
      <summary>Sets the InkCollector object to collect ink from any tablet attached to the Tablet PC.	</summary>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.SetAllTabletsMode(System.Boolean)">
      <summary>Sets the InkCollector object to collect ink from any tablet attached to the Tablet PC.	</summary>
      <param name="useMouseForInput">The Boolean value that indicates whether to use the mouse as an input device</param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.SetSingleTabletIntegratedMode(Microsoft.Ink.Tablet)">
      <summary>Sets the InkCollector object to collect ink from only one tablet attached to the Tablet PC</summary>
      <param name="tablet">The Tablet object on which ink is collected.</param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.OnMouseDown(Microsoft.Ink.CancelMouseEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the MouseDown event.</summary>
      <param name="e">The CancelMouseEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.OnMouseMove(Microsoft.Ink.CancelMouseEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the MouseMove event.</summary>
      <param name="e">The CancelMouseEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.OnMouseUp(Microsoft.Ink.CancelMouseEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the MouseUp event.</summary>
      <param name="e">The CancelMouseEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.OnMouseWheel(Microsoft.Ink.CancelMouseEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the MouseWheel event.</summary>
      <param name="e">The CancelMouseEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.OnDoubleClick(System.ComponentModel.CancelEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the DoubleClick event.</summary>
      <param name="e">The CancelEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.OnStroke(Microsoft.Ink.InkCollectorStrokeEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the Stroke event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorStrokeEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.OnCursorDown(Microsoft.Ink.InkCollectorCursorDownEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the CursorDown event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorCursorDownEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.OnNewPackets(Microsoft.Ink.InkCollectorNewPacketsEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the NewPackets event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorNewPacketsEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.OnNewInAirPackets(Microsoft.Ink.InkCollectorNewInAirPacketsEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the NewInAirPackets event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorNewInAirPacketsEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.OnCursorButtonDown(Microsoft.Ink.InkCollectorCursorButtonDownEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the CursorButtonDown event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorCursorButtonDownEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.OnCursorButtonUp(Microsoft.Ink.InkCollectorCursorButtonUpEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the CursorButtonUp event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorCursorButtonUpEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.OnCursorInRange(Microsoft.Ink.InkCollectorCursorInRangeEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the CursorInRange event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorCursorInRangeEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.OnCursorOutOfRange(Microsoft.Ink.InkCollectorCursorOutOfRangeEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the CursorOutOfRange event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorCursorOutOfRangeEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.OnSystemGesture(Microsoft.Ink.InkCollectorSystemGestureEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the SystemGesture event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorSystemGestureEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.OnGesture(Microsoft.Ink.InkCollectorGestureEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the Gesture event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorGestureEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.OnTabletAdded(Microsoft.Ink.InkCollectorTabletAddedEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the TabletAdded event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorTabletAddedEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.OnTabletRemoved(Microsoft.Ink.InkCollectorTabletRemovedEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the TabletRemoved event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkCollectorTabletRemovedEventArgs object that contains the event data</param>
    </member>
    <member name="M:Microsoft.Ink.InkCollector.FireDelegateOnWindowsThread(System.Delegate,System.EventArgs)">
      <summary>
      </summary>
      <param name="method">
      </param>
      <param name="e">
      </param>
      <returns>
      </returns>
    </member>
    <member name="E:Microsoft.Ink.InkCollector.CursorDown">
      <summary> Occurs when the cursor tip contacts the digitizing tablet surface</summary>
    </member>
    <member name="E:Microsoft.Ink.InkCollector.MouseDown">
      <summary> Occurs when the mouse pointer is over the InkCollector and a mouse button is pressed</summary>
    </member>
    <member name="E:Microsoft.Ink.InkCollector.MouseMove">
      <summary> Occurs when the mouse pointer is moved over the InkCollector</summary>
    </member>
    <member name="E:Microsoft.Ink.InkCollector.MouseUp">
      <summary> Occurs when the mouse pointer is over the InkCollector and a mouse button is released</summary>
    </member>
    <member name="E:Microsoft.Ink.InkCollector.MouseWheel">
      <summary> Occurs when the mouse wheel moves while the InkCollector object has focus</summary>
    </member>
    <member name="E:Microsoft.Ink.InkCollector.DoubleClick">
      <summary> Occurs when the InkCollector object is double-clicked</summary>
    </member>
    <member name="E:Microsoft.Ink.InkCollector.Stroke">
      <summary> Occurs when the user finishes drawing a new stroke on any tablet</summary>
    </member>
    <member name="E:Microsoft.Ink.InkCollector.NewPackets">
      <summary> Occurs when the InkCollector receives packets</summary>
    </member>
    <member name="E:Microsoft.Ink.InkCollector.NewInAirPackets">
      <summary> Occurs when an in-air packet is seen, which happens when a user moves a pen near the tablet and the cursor is within the InkCollector object's window or the user moves a mouse within the InkCollector object's associated window</summary>
    </member>
    <member name="E:Microsoft.Ink.InkCollector.CursorInRange">
      <summary> Occurs when a cursor enters the physical detection range (proximity) of the tablet context</summary>
    </member>
    <member name="E:Microsoft.Ink.InkCollector.CursorOutOfRange">
      <summary> Occurs when a cursor leaves the physical detection range (proximity) of the tablet context</summary>
    </member>
    <member name="E:Microsoft.Ink.InkCollector.CursorButtonDown">
      <summary> Occurs when the InkCollector detects a cursor button that is down</summary>
    </member>
    <member name="E:Microsoft.Ink.InkCollector.CursorButtonUp">
      <summary> Occurs when the InkCollector detects a cursor button that is up</summary>
    </member>
    <member name="E:Microsoft.Ink.InkCollector.TabletAdded">
      <summary> Occurs when a Tablet is added to the system</summary>
    </member>
    <member name="E:Microsoft.Ink.InkCollector.TabletRemoved">
      <summary> Occurs when a Tablet is removed from the system</summary>
    </member>
    <member name="E:Microsoft.Ink.InkCollector.SystemGesture">
      <summary> Occurs when a system gesture is recognized</summary>
    </member>
    <member name="E:Microsoft.Ink.InkCollector.Gesture">
      <summary> Occurs when an application-specific gesture is recognized</summary>
    </member>
    <member name="P:Microsoft.Ink.InkCollector.Handle">
      <value>    Gets or sets the handle of the window to which the InkCollector object is attached.  </value>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkCollector.AttachedControl">
      <value>      Gets or sets the control to which the InkCollector object is attached.    </value>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkCollector.AutoRedraw">
      <summary>Gets or sets a value that specifies whether the InkCollector object repaints the ink when the window is invalidated.	</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkCollector.DynamicRendering">
      <summary>Gets or sets a value that indicates whether ink is rendered as it is drawn.</summary>
    </member>
    <member name="P:Microsoft.Ink.InkCollector.CollectingInk">
      <summary>Gets a value that specifies whether ink is currently being drawn on an InkCollector object.	</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkCollector.DefaultDrawingAttributes">
      <summary>Gets or sets the default DrawingAttributes object, which specifies the drawing attributes that are used when drawing and displaying ink.  	</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkCollector.Renderer">
      <summary>Gets or sets the Renderer object that is used to draw ink.  	</summary>
    </member>
    <member name="P:Microsoft.Ink.InkCollector.Cursors">
      <summary>Gets the Cursors collection that is available for use in the inking region</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkCollector.Ink">
      <summary>Gets or sets the Ink object that is associated with the InkCollector object.	</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkCollector.Enabled">
      <summary>      Gets or sets a value that specifies whether the InkCollector object collects pen input.  	</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkCollector.CollectionMode">
      <summary>Gets or sets the collection mode that determines whether ink, gesture, or both are recognized as the user writes.  	</summary>
    </member>
    <member name="P:Microsoft.Ink.InkCollector.DesiredPacketDescription">
      <summary>Gets or sets interest in aspects of the packet associated with ink drawn on the InkCollector object.			</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkCollector.Tablet">
      <summary>Gets the tablet device that the InkCollector object is currently using to collect input.	</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkCollector.Cursor">
      <summary>Gets or sets the cursor that appears when the mouse pointer is over the InkPicture control.  	</summary>
    </member>
    <member name="P:Microsoft.Ink.InkCollector.SupportHighContrastInk">
      <summary>Gets or sets a value that specifies whether ink is rendered as just one color when the system is in High Contrast mode.  	</summary>
    </member>
    <member name="P:Microsoft.Ink.InkCollector.MarginX">
      <summary>Gets or sets the margins along the x-axis, in pixels.  	</summary>
    </member>
    <member name="P:Microsoft.Ink.InkCollector.MarginY">
      <summary>Gets or sets the margins along the y-axis, in pixels.  	</summary>
    </member>
    <member name="T:Microsoft.Ink.InkInsertMode">
      <summary>      Defines values that specify how ink is inserted onto the InkEdit control.    </summary>
    </member>
    <member name="F:Microsoft.Ink.InkInsertMode.InsertAsText">
      <summary>      Specifies drawn ink is inserted as text.    </summary>
    </member>
    <member name="F:Microsoft.Ink.InkInsertMode.InsertAsInk">
      <summary>      Specifies drawn ink is inserted as ink.    </summary>
    </member>
    <member name="T:Microsoft.Ink.InkMode">
      <summary>      Defines values that specify the collection mode of the InkEdit control.    </summary>
    </member>
    <member name="F:Microsoft.Ink.InkMode.Disabled">
      <summary>      Specifies that ink collection is disabled</summary>
    </member>
    <member name="F:Microsoft.Ink.InkMode.Ink">
      <summary>      Specifies that only ink is collected, creating a stroke.    </summary>
    </member>
    <member name="F:Microsoft.Ink.InkMode.InkAndGesture">
      <summary>      Specifies that ink is collected and single stroke application gesture are accepted.    </summary>
    </member>
    <member name="T:Microsoft.Ink.InkDisplayMode">
      <summary>      Defines values that specify how a selection appears on the InkEdit control.    </summary>
    </member>
    <member name="F:Microsoft.Ink.InkDisplayMode.Text">
      <summary>      Specifies the selection appears as text.    </summary>
    </member>
    <member name="F:Microsoft.Ink.InkDisplayMode.Ink">
      <summary>      Specifies the selection appears as ink.    </summary>
    </member>
    <member name="T:Microsoft.Ink.InkEditStatus">
      <summary>      Indicates the collection status of the InkEdit control.    </summary>
    </member>
    <member name="F:Microsoft.Ink.InkEditStatus.Idle">
      <summary>      Indicates the control is idle (not collecting or recognizing ink).    </summary>
    </member>
    <member name="F:Microsoft.Ink.InkEditStatus.Collecting">
      <summary>      Indicates the control is collecting ink.    </summary>
    </member>
    <member name="F:Microsoft.Ink.InkEditStatus.Recognizing">
      <summary>      Indicates the control is recognizing ink.    </summary>
    </member>
    <member name="T:Microsoft.Ink.InkEditStrokeEventHandler">
      <summary>Represents the method that handles the Stroke event of an InkEdit control.</summary>
      <param name="sender">[in] Specifies the source InkEdit of this event.</param>
      <param name="e">[in] Specifies the InkEditStrokeEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.InkEditStrokeEventArgs">
      <summary>      Provides data for Stroke events, which occur when the user draws a new stroke on an InkEdit control.    </summary>
    </member>
    <member name="M:Microsoft.Ink.InkEditStrokeEventArgs.#ctor(Microsoft.Ink.Cursor,Microsoft.Ink.Stroke,System.Boolean)">
      <summary>Initializes a new instance of the InkEditStrokeEventArgs class.</summary>
      <remarks>
      </remarks>
      <param name="cursor">The Cursor that was used to create the Stroke object.</param>
      <param name="stroke">The Stroke object that triggers the Stroke event.</param>
      <param name="cancel">Set to true to cancel collection of the Stroke object; otherwise false.</param>
    </member>
    <member name="P:Microsoft.Ink.InkEditStrokeEventArgs.Cursor">
      <value>Gets the Cursor object that generated the Stroke event.    </value>
    </member>
    <member name="P:Microsoft.Ink.InkEditStrokeEventArgs.Stroke">
      <value>Gets the Stroke object that generated the Stroke event.</value>
    </member>
    <member name="T:Microsoft.Ink.InkEditRecognitionEventHandler">
      <summary>Represents the method that handles the Recognition event of an InkEdit control.</summary>
      <param name="sender">[in] Specifies the source InkEdit of this event.</param>
      <param name="e">[in] Specifies the InkEditRecognitionEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.InkEditRecognitionEventArgs">
      <summary>Provides data for Recognition events, which occur when the InkEdit control gets results manually from a call to the Recognize method or automatically after the recognition timeout fires.    </summary>
    </member>
    <member name="M:Microsoft.Ink.InkEditRecognitionEventArgs.#ctor(Microsoft.Ink.RecognitionResult)">
      <summary>Initializes a new instance of the  InkEditRecognitionEventArgs class.</summary>
      <remarks>
      </remarks>
      <param name="recognitionResult">The RecognitionResult object that contains the result of the Recognition event.</param>
    </member>
    <member name="P:Microsoft.Ink.InkEditRecognitionEventArgs.RecognitionResult">
      <value>Gets the RecognitionResult object that contains the results of the Recognition event.</value>
    </member>
    <member name="T:Microsoft.Ink.InkEditGestureEventHandler">
      <summary>Represents the method that handles the Gesture event of an InkEdit control.</summary>
      <param name="sender">[in] Specifies the source InkEdit of this event.</param>
      <param name="e">[in] Specifies the InkEditGestureEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.InkEditGestureEventArgs">
      <summary>      Provides data for Gesture events, which occur when an application-specific gesture is recognized in an InkEdit control.    </summary>
    </member>
    <member name="M:Microsoft.Ink.InkEditGestureEventArgs.#ctor(Microsoft.Ink.Cursor,Microsoft.Ink.Strokes,Microsoft.Ink.Gesture[],System.Boolean)">
      <summary>Initializes a new instance of the InkEditGestureEventArgs class.</summary>
      <remarks>
      </remarks>
      <param name="cursor">The Cursor that was used to create the application gesture.</param>
      <param name="strokes">The Strokes collection that makes up the application gesture.</param>
      <param name="gestures">The array of Gesture objects recognized, in order of confidence.</param>
      <param name="cancel">Set to true if the gesture was handled in the Gesture event handler (default value); otherwise false.</param>
    </member>
    <member name="P:Microsoft.Ink.InkEditGestureEventArgs.Cursor">
      <value>Gets the Cursor object that generated the Gesture event.</value>
    </member>
    <member name="P:Microsoft.Ink.InkEditGestureEventArgs.Strokes">
      <value>Gets the Strokes collection that the recognizer returned as the application gesture.	</value>
    </member>
    <member name="P:Microsoft.Ink.InkEditGestureEventArgs.Gestures">
      <value>Gets an array of Gesture objects, in order of confidence, from the recognizer.</value>
    </member>
    <member name="T:Microsoft.Ink.InkEdit">
      <summary> The InkEdit control enables you to collect ink, recognize it, and display it as text</summary>
    </member>
    <member name="M:Microsoft.Ink.InkEdit.SetGestureStatus(Microsoft.Ink.ApplicationGesture,System.Boolean)">
      <summary>Sets whether or not the InkEdit control has interest in a known application gesture.    </summary>
      <remarks>
      </remarks>
      <param name="gesture">A member of the ApplicationGesture enumeration, which indicates the gesture to set the status of</param>
      <param name="listening">Whether or not the InkEdit control has interest in a known application gesture.</param>
    </member>
    <member name="M:Microsoft.Ink.InkEdit.GetGestureStatus(Microsoft.Ink.ApplicationGesture)">
      <summary>Returns a value that indicates whether the InkEdit object has interest in a particular application gesture.    </summary>
      <remarks>
      </remarks>
      <param name="gesture">A member of the ApplicationGesture enumeration that represents the gesture to query about.    </param>
      <returns>Whether the InkEdit control has interest in a particular application gesture.</returns>
    </member>
    <member name="M:Microsoft.Ink.InkEdit.Recognize">
      <summary>Causes the ink on the InkEdit control to be recognized.</summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.InkEdit.OnStroke(Microsoft.Ink.InkEditStrokeEventArgs)">
      <summary>Allows derived classes to modify the default behavior of the Stroke event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkEditStrokeEventArgs object that contains the event data.</param>
    </member>
    <member name="M:Microsoft.Ink.InkEdit.OnRecognition(Microsoft.Ink.InkEditRecognitionEventArgs)">
      <summary>Allows derived classes to modify the default behavior of the Recognition event.	</summary>
      <remarks>
      </remarks>
      <param name="e">The InkEditRecognitionEventArgs object that contains the event data.</param>
    </member>
    <member name="M:Microsoft.Ink.InkEdit.OnGesture(Microsoft.Ink.InkEditGestureEventArgs)">
      <summary>Allows derived classes to modify the default behavior of the Gesture event.</summary>
      <remarks>
      </remarks>
      <param name="e">The InkEditGestureEventArgs object that contains the event data.</param>
    </member>
    <member name="M:Microsoft.Ink.InkEdit.#ctor">
      <summary>Initializes a new instance of the InkEdit control.</summary>
    </member>
    <member name="M:Microsoft.Ink.InkEdit.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the InkEdit control and optionally releases the managed resources.		</summary>
      <param name="disposing">Set to true to release both managed and unmanaged resources; false to release only unmanaged resources.		</param>
    </member>
    <member name="M:Microsoft.Ink.InkEdit.OnHandleCreated(System.EventArgs)">
      <summary>Allows derived classes to modify the default behavior of the HandleCreated event.</summary>
      <param name="e">The EventArgs object that contains the event data.</param>
    </member>
    <member name="M:Microsoft.Ink.InkEdit.WndProc(System.Windows.Forms.Message@)">
      <summary>Processes &lt;tla rid="win" /&gt; messages</summary>
      <param name="m">The &lt;tla rid="win" /&gt;Message to process.</param>
    </member>
    <member name="E:Microsoft.Ink.InkEdit.Stroke">
      <summary> Occurs when the user finishes drawing a new stroke on any tablet</summary>
    </member>
    <member name="E:Microsoft.Ink.InkEdit.Recognition">
      <summary> Occurs when the InkEdit control gets results manually from a call to the Recognize method or automatically after the recognition timeout fires</summary>
    </member>
    <member name="E:Microsoft.Ink.InkEdit.Gesture">
      <summary> Occurs when an application-specific gesture is recognized</summary>
    </member>
    <member name="P:Microsoft.Ink.InkEdit.InkMode">
      <summary>Gets or sets a value from the InkMode enumeration type that indicates whether the InkEdit control collects ink, gesture, or both.</summary>
    </member>
    <member name="P:Microsoft.Ink.InkEdit.RecoTimeout">
      <summary>Gets or sets the length of time, in milliseconds, between the last stroke collected and the onset of text recognition.</summary>
    </member>
    <member name="P:Microsoft.Ink.InkEdit.InkInsertMode">
      <summary>Gets or sets a value from the InkInsertMode enumeration that indicates how ink is inserted onto the control.</summary>
    </member>
    <member name="P:Microsoft.Ink.InkEdit.DrawingAttributes">
      <summary>Gets or sets the drawing attributes to apply to ink as it is drawn</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkEdit.Recognizer">
      <summary>Gets or sets the Recognizer object used by the InkEdit control.</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkEdit.Factoid">
      <summary>Gets or sets the string name of the factoid used by the     InkEdit control.</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkEdit.SelInks">
      <summary>Gets or sets the array of embedded Ink objects (if displayed as ink) in the current selection.</summary>
    </member>
    <member name="P:Microsoft.Ink.InkEdit.SelInksDisplayMode">
      <summary>Gets or sets a value that indicates whether the selected ink appears as ink or text.</summary>
    </member>
    <member name="P:Microsoft.Ink.InkEdit.UseMouseForInput">
      <summary>Gets or sets a value that indicates whether the mouse can be used as an input device for the InkEdit control.</summary>
    </member>
    <member name="P:Microsoft.Ink.InkEdit.Cursor">
      <summary>Gets or sets the Cursor that appears when the mouse pointer is over the control.</summary>
    </member>
    <member name="P:Microsoft.Ink.InkEdit.Status">
      <summary>Gets a value that indicates whether the InkEdit control is idle, collecting ink, or recognizing ink.</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.InkEdit.Disposing">
      <summary>Gets a value that indicates whether the InkEdit control is being disposed of.    </summary>
    </member>
    <member name="P:Microsoft.Ink.InkEdit.CreateParams">
      <summary>Gets an overridden version of the CreateParams property that contains the required creation parameters for when the control handle is created.</summary>
    </member>
    <member name="T:Microsoft.Ink.InkControlsHelperMethods">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.Ink.InkControlsHelperMethods.ShouldControlsRunDownlevel(Microsoft.Win32.RegistryKey)">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.Ink.InkControlsHelperMethods.ShouldControlsRunDownlevel">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.Ink.Divider">
      <summary>Represents the ability to analyze the layout of a collection of strokes and divide them into text and graphics.	</summary>
    </member>
    <member name="M:Microsoft.Ink.Divider.#ctor">
      <summary>Initializes a new instance of the Divider class.</summary>
    </member>
    <member name="M:Microsoft.Ink.Divider.Finalize">
      <summary>Frees the resources of the current Divider object before it is reclaimed by the garbage collector.    </summary>
    </member>
    <member name="M:Microsoft.Ink.Divider.Dispose">
      <summary>Releases resources used by the Divider object.		</summary>
    </member>
    <member name="M:Microsoft.Ink.Divider.Dispose(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.Ink.Divider.#ctor(Microsoft.Ink.Strokes)">
      <summary>Initializes a new instance of the Divider class.</summary>
      <param name="strokes">The Strokes collection to place in the Strokes property of the new Divider object.</param>
    </member>
    <member name="M:Microsoft.Ink.Divider.#ctor(Microsoft.Ink.Strokes,Microsoft.Ink.RecognizerContext)">
      <summary>
      </summary>
      <param name="strokes">
      </param>
      <param name="recognizerContext">
      </param>
    </member>
    <member name="M:Microsoft.Ink.Divider.Divide">
      <summary> Returns a DivisionResult object that contains structural information about the Strokes property of the Divider object.    </summary>
      <returns> Returns a DivisionResult object that contains structural information about the Strokes property of the Divider object.    </returns>
    </member>
    <member name="M:Microsoft.Ink.Divider.HandleStrokesAdded(System.Object,Microsoft.Ink.StrokesEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.Ink.Divider.HandleStrokesRemoved(System.Object,Microsoft.Ink.StrokesEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.Ink.Divider.LineHeight">
      <summary> Gets or sets the expected handwriting height, in HIMETRIC units.    </summary>
    </member>
    <member name="P:Microsoft.Ink.Divider.RecognizerContext">
      <summary> Gets or sets the RecognizerContext object that the Divider object uses for handwriting analysis.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.Divider.Strokes">
      <summary>Gets or sets the Strokes collection on which the Divider object performs ink analysis.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:Microsoft.Ink.InkDivisionType">
      <summary>      Defines values for the structural types within the DivisionResult object.    </summary>
    </member>
    <member name="F:Microsoft.Ink.InkDivisionType.Segment">
      <summary>      A recognition segment.    </summary>
    </member>
    <member name="F:Microsoft.Ink.InkDivisionType.Line">
      <summary>      A line of handwriting that contains one or more recognition segments.    </summary>
    </member>
    <member name="F:Microsoft.Ink.InkDivisionType.Paragraph">
      <summary>      A block of strokes that contains one or more lines of handwriting.    </summary>
    </member>
    <member name="F:Microsoft.Ink.InkDivisionType.Drawing">
      <summary>ink that is not text.    </summary>
    </member>
    <member name="T:Microsoft.Ink.DivisionResult">
      <summary> Represents the layout analysis of the collection of strokes contained by the Divider object.    </summary>
    </member>
    <member name="M:Microsoft.Ink.DivisionResult.ResultByType(Microsoft.Ink.InkDivisionType)">
      <summary> Gets the requested structural units of the analysis results for a DivisionUnits collection.    </summary>
      <returns>Returns the DivisionUnits collection containing the requested structural units of the analysis results.    </returns>
      <param name="divisionType">One of the values of the InkDivisionType enumeration, which indicates the structural units to return</param>
    </member>
    <member name="P:Microsoft.Ink.DivisionResult.Strokes">
      <summary> Gets the Strokes collection that applies to this DivisionResult.    </summary>
    </member>
    <member name="T:Microsoft.Ink.DivisionUnit">
      <summary> Represents a single structural element within a DivisionResult object.    </summary>
    </member>
    <member name="M:Microsoft.Ink.DivisionUnit.Finalize">
      <summary>Frees the resources of the current DivisionUnit object before it is reclaimed by the garbage collector.		</summary>
    </member>
    <member name="M:Microsoft.Ink.DivisionUnit.ToString">
      <summary>Returns the recognized text for the Strokes collection in the DivisionUnit object.    </summary>
      <returns>Returns the recognized text for the Strokes collection in the DivisionUnit object, or null (Nothing in Microsoft Visual Basic .NET) for drawing elements.    </returns>
    </member>
    <member name="P:Microsoft.Ink.DivisionUnit.DivisionType">
      <summary>Gets the structural type of the DivisionUnit object.</summary>
    </member>
    <member name="P:Microsoft.Ink.DivisionUnit.Transform">
      <summary>Gets the transformation matrix that the DivisionUnit object uses to rotate the strokes to horizontal.    </summary>
    </member>
    <member name="P:Microsoft.Ink.DivisionUnit.RecognitionString">
      <summary>Gets the recognized text for the Strokes collection in the DivisionUnit object.    </summary>
    </member>
    <member name="P:Microsoft.Ink.DivisionUnit.Strokes">
      <summary>      Gets the Strokes collection that was used to create the DivisionUnit object</summary>
    </member>
    <member name="T:Microsoft.Ink.DivisionUnits">
      <summary> Contains a collection of DivisionUnit objects that are contained in a DivisionResult object.    </summary>
    </member>
    <member name="F:Microsoft.Ink.DivisionUnits.InvalidStroke">
    </member>
    <member name="M:Microsoft.Ink.DivisionUnits.#ctor(Microsoft.Ink.Ink,Microsoft.Ink.InkDivisionType,System.Int32[])">
    </member>
    <member name="M:Microsoft.Ink.DivisionUnits.#ctor(Microsoft.Ink.Ink,Microsoft.Ink.InkDivisionType,System.Int32[],System.String[])">
    </member>
    <member name="M:Microsoft.Ink.DivisionUnits.#ctor(Microsoft.Ink.Ink,Microsoft.Ink.InkDivisionType,System.Int32[],System.String[],System.Int32[],System.Int32[],System.Single[])">
    </member>
    <member name="M:Microsoft.Ink.DivisionUnits.CreateStrokes(Microsoft.Ink.Ink,System.Int32[])">
      <summary>
      </summary>
      <param name="myInk">
      </param>
      <param name="StrokeIds">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.Ink.DivisionUnits.CopyTo(System.Array,System.Int32)">
      <summary>Copies all of the elements of the current DivisionUnits collection to the specified one-dimensional array, starting at the specified destination array index.</summary>
      <param name="array">The one-dimensional array that is the destination of elements copied from the collection</param>
      <param name="index">The zero-based index in the array parameter at which copying begins.</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.DivisionUnits.GetEnumerator">
      <summary> Returns an object that implements the IEnumerator interface and that can iterate through the DivisionUnit objects within the DivisionUnits collection.    </summary>
      <returns> Returns an object that implements the IEnumerator interface and that can iterate through the DivisionUnit objects within the DivisionUnits collection.    </returns>
    </member>
    <member name="M:Microsoft.Ink.DivisionUnits.System#Collections#IEnumerable#GetEnumerator">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.Ink.DivisionUnits.SyncRoot">
      <value>Gets an object that can be used to synchronize access to the DivisionUnits collection.</value>
    </member>
    <member name="P:Microsoft.Ink.DivisionUnits.Count">
      <value>Gets the number of DivisionUnit objects contained in the DivisionUnits collection.</value>
    </member>
    <member name="P:Microsoft.Ink.DivisionUnits.IsSynchronized">
      <value>      Gets a value that indicates whether or not access to the DivisionUnits collection is synchronized (thread safe).    </value>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.DivisionUnits.Item(System.Int32)">
      <summary>
      </summary>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.Ink.DivisionUnits.InkDivisionUnitsEnumerator">
      <summary>An implementation of the IEnumerator interface that supports iterating over a DivisionUnits collection.</summary>
    </member>
    <member name="M:Microsoft.Ink.DivisionUnits.InkDivisionUnitsEnumerator.#ctor(Microsoft.Ink.DivisionUnits)">
      <summary>Initializes a new instance of the InkDivisionUnitsEnumerator object</summary>
      <param name="a"> The DivisionUnit collection that this enumerator iterates over</param>
    </member>
    <member name="M:Microsoft.Ink.DivisionUnits.InkDivisionUnitsEnumerator.MoveNext">
      <summary>Moves the enumerator index to the next object in the collection.		</summary>
      <returns>Set to true if the index position references an object; false if the index position references the end of the collection.		</returns>
    </member>
    <member name="M:Microsoft.Ink.DivisionUnits.InkDivisionUnitsEnumerator.Reset">
      <summary>Resets the enumerator index to the beginning of the DivisionUnits collection.		</summary>
    </member>
    <member name="P:Microsoft.Ink.DivisionUnits.InkDivisionUnitsEnumerator.System#Collections#IEnumerator#Current">
      <value>
      </value>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.Ink.DivisionUnits.InkDivisionUnitsEnumerator.Current">
      <value>Gets the DivisionUnit object in the DivisionUnits collection to which the enumerator is pointing.    </value>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.Ink.PanelType">
      <summary>      Defines the type of input currently available in the PenInputPanel object.    </summary>
    </member>
    <member name="F:Microsoft.Ink.PanelType.Default">
      <summary>      Specifies the PenInputPanel object displays the last panel type used for any pen input panel in any application</summary>
    </member>
    <member name="F:Microsoft.Ink.PanelType.Inactive">
      <summary>      Specifies the PenInputPanel object does not accept input</summary>
    </member>
    <member name="F:Microsoft.Ink.PanelType.Handwriting">
      <summary>      Specifies the PenInputPanel object displays the default handwriting panel for the current input language.    </summary>
    </member>
    <member name="F:Microsoft.Ink.PanelType.Keyboard">
      <summary>      Specifies the PenInputPanel object displays the default keyboard panel for the current input language.    </summary>
    </member>
    <member name="T:Microsoft.Ink.PenInputPanel">
      <summary>    	The PenInputPanel object enables you to easily add in-place pen input to your applications.    </summary>
    </member>
    <member name="M:Microsoft.Ink.PenInputPanel.#ctor">
      <summary>Initializes a new instance of the PenInputPanel class</summary>
    </member>
    <member name="M:Microsoft.Ink.PenInputPanel.#ctor(System.IntPtr)">
      <summary>Initializes a new instance of the PenInputPanel class and attaches it to a window handle.    </summary>
      <param name="attachHandle">The window handle to attach the PenInputPanel object to.    </param>
    </member>
    <member name="M:Microsoft.Ink.PenInputPanel.#ctor(System.Windows.Forms.Control)">
      <summary> Creates a PenInputPanel object and attaches it to the specified control.     </summary>
      <param name="attachControl">The control to attach the PenInputPanel object to.    </param>
    </member>
    <member name="M:Microsoft.Ink.PenInputPanel.Finalize">
      <summary>Frees the resources of the current PenInputPanel object before it is reclaimed by the garbage collector.		</summary>
    </member>
    <member name="M:Microsoft.Ink.PenInputPanel.Dispose">
      <summary>Releases resources used by the PenInputPanel object.		</summary>
    </member>
    <member name="M:Microsoft.Ink.PenInputPanel.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the PenInputPanel object and optionally releases the managed resources.		</summary>
      <param name="disposing">Set to true to release both managed and unmanaged resources; false to release only unmanaged resources.		</param>
    </member>
    <member name="M:Microsoft.Ink.PenInputPanel.OnAttachedControlHandleCreated(System.Object,System.EventArgs)">
    </member>
    <member name="M:Microsoft.Ink.PenInputPanel.MoveTo(System.Int32,System.Int32)">
      <summary> Sets the position of the PenInputPanel object to a defined screen position.    </summary>
      <remarks>
      </remarks>
      <param name="left">The new x-axis position of the left edge of the PenInputPanel object, in screen coordinates.    </param>
      <param name="top">The new y-axis position of the top edge of the PenInputPanel object, in screen coordinates.    </param>
    </member>
    <member name="M:Microsoft.Ink.PenInputPanel.CommitPendingInput">
      <summary>Sends collected ink to the recognizer and posts the recognition result.    </summary>
    </member>
    <member name="M:Microsoft.Ink.PenInputPanel.Refresh">
      <summary> Updates and restores the PenInputPanel properties based on Tablet PC Input Panel, automatically positions the pen input panel, and sets the user interface to the default panel.    </summary>
    </member>
    <member name="M:Microsoft.Ink.PenInputPanel.EnableTsf(System.Boolean)">
      <summary>Indicates whether or not the PenInputPanel object attempts to send text to the attached control through the Text Services Framework (TSF) and enables the use of the correction user interface.    </summary>
      <remarks>
      </remarks>
      <param name="enable">A Boolean variable that indicates whether or not the PenInputPanel object attempts to send text to the attached control through the Text Services Framework (TSF) and enables the use of the correction user interface.</param>
    </member>
    <member name="F:Microsoft.Ink.PenInputPanel.onVisibleChanged">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.Ink.PenInputPanel.OnVisibleChanged(Microsoft.Ink.PenInputPanelVisibleChangedEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the VisibleChanged event.    </summary>
      <param name="e">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="F:Microsoft.Ink.PenInputPanel.onPanelMoving">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.Ink.PenInputPanel.OnPanelMoving(Microsoft.Ink.PenInputPanelMovingEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the PanelMoving event.    </summary>
      <param name="e">The PenInputPanelMovingEventArgs object that contains the event data</param>
      <remarks>
      </remarks>
    </member>
    <member name="F:Microsoft.Ink.PenInputPanel.onPanelChanged">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.Ink.PenInputPanel.OnPanelChanged(Microsoft.Ink.PenInputPanelChangedEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the PanelChanged event.    </summary>
      <param name="e">The PenInputPanelChangedEventArgs object that contains the event data</param>
      <remarks>
      </remarks>
    </member>
    <member name="F:Microsoft.Ink.PenInputPanel.onInputFailed">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.Ink.PenInputPanel.OnInputFailed(Microsoft.Ink.PenInputPanelInputFailedEventArgs)">
      <summary> Allows derived classes to modify the default behavior of the InputFailed event.    </summary>
      <param name="e">The PenInputPanelInputFailedEventArgs object that contains the event data</param>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.PenInputPanel.AttachedEditWindow">
      <summary> Gets or sets the window handle that the PenInputPanel object is attached to.    </summary>
    </member>
    <member name="P:Microsoft.Ink.PenInputPanel.AttachedEditControl">
      <summary>Gets or sets the control that the PenInputPanel object is attached to.    </summary>
    </member>
    <member name="P:Microsoft.Ink.PenInputPanel.Busy">
      <summary> Gets a Boolean value that indicates whether the PenInputPanel object is currently processing ink.    </summary>
    </member>
    <member name="P:Microsoft.Ink.PenInputPanel.Factoid">
      <summary>Gets or sets the string name of the factoid used by the PenInputPanel object.</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.PenInputPanel.CurrentPanel">
      <summary>Gets or sets which panel type is currently being used for input within the PenInputPanel object.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.PenInputPanel.DefaultPanel">
      <summary> Gets or sets the default panel type used for input within the PenInputPanel object.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.PenInputPanel.AutoShow">
      <summary>Gets or sets a Boolean value that indicates whether the pen input panel appears when focus is set on the attached control by using the pen.    </summary>
    </member>
    <member name="P:Microsoft.Ink.PenInputPanel.Visible">
      <summary> Gets or sets a value that indicates whether the PenInputPanel object is visible.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.PenInputPanel.Top">
      <summary>Gets the vertical, or y-axis, location of the top edge of the PenInputPanel object, in screen coordinates.    </summary>
    </member>
    <member name="P:Microsoft.Ink.PenInputPanel.Left">
      <summary>Gets the horizontal, or  x-axis, location of the left edge of the PenInputPanel object, in screen coordinates.    </summary>
    </member>
    <member name="P:Microsoft.Ink.PenInputPanel.Width">
      <summary> Gets the width  of the pen input panel in client coordinates.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.PenInputPanel.Height">
      <summary> Gets the height of the pen input panel in client coordinates.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.PenInputPanel.VerticalOffset">
      <summary> Gets or sets the offset between the closest horizontal edge of the pen input panel and the closest horizontal edge of the control to which it is attached.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.PenInputPanel.HorizontalOffset">
      <summary> Gets or sets the offset between the left edge of the pen input panel and the left edge of the control to which it is attached.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="E:Microsoft.Ink.PenInputPanel.VisibleChanged">
      <summary>Occurs when the PenInputPanel object has shown or hidden itself.</summary>
    </member>
    <member name="E:Microsoft.Ink.PenInputPanel.PanelMoving">
      <summary>Occurs when the PenInputPanel object is moving.</summary>
    </member>
    <member name="E:Microsoft.Ink.PenInputPanel.PanelChanged">
      <summary>Occurs when the PenInputPanel object changes between layouts.</summary>
    </member>
    <member name="E:Microsoft.Ink.PenInputPanel.InputFailed">
      <summary>Occurs when input focus changes before the PenInputPanel object was able to insert user input into the attached control.</summary>
    </member>
    <member name="T:Microsoft.Ink.PenInputPanelVisibleChangedEventHandler">
      <summary>Represents the method that handles the VisibleChanged event of a PenInputPanel object.</summary>
      <param name="sender">[in] Specifies the source PenInputPanel object of this event.</param>
      <param name="e">[in] Specifies the PenInputPanelVisibleChangedEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.PenInputPanelVisibleChangedEventArgs">
      <summary>Provides data for VisibleChanged events, which occur when the PenInputPanel object has shown or hidden itself.    </summary>
    </member>
    <member name="M:Microsoft.Ink.PenInputPanelVisibleChangedEventArgs.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the PenInputPanelVisibleChangedEventArgs class.    </summary>
      <param name="newVisibility">Set to true if the PenInputPanel object has become visible; otherwise false</param>
    </member>
    <member name="P:Microsoft.Ink.PenInputPanelVisibleChangedEventArgs.NewVisibility">
      <summary>Gets a value that indicates whether the PenInputPanel object has become visible.</summary>
    </member>
    <member name="T:Microsoft.Ink.PenInputPanelMovingEventHandler">
      <summary>Represents the method that handles the PanelMoving event of a PenInputPanel object.</summary>
      <param name="sender">[in] Specifies the source PenInputPanel object of this event.</param>
      <param name="e">[in] Specifies the PenInputPanelMovingEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.PenInputPanelMovingEventArgs">
      <summary>      Provides data for PanelMoving events, which occur when a PenInputPanel is moving.    </summary>
    </member>
    <member name="M:Microsoft.Ink.PenInputPanelMovingEventArgs.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the PenInputPanelMovingEventArgs class.</summary>
      <param name="left">The new horizontal position, in screen coordinates.</param>
      <param name="top">The new vertical position, in screen coordinates.</param>
    </member>
    <member name="P:Microsoft.Ink.PenInputPanelMovingEventArgs.Left">
      <summary>	Gets the new horizontal, or x-axis, position of the left edge of the PenInputPanel object, in screen coordinates.</summary>
    </member>
    <member name="P:Microsoft.Ink.PenInputPanelMovingEventArgs.Top">
      <summary>	Gets the new vertical, or y-axis, position of the PenInputPanel object, in screen coordinates.</summary>
    </member>
    <member name="T:Microsoft.Ink.PenInputPanelChangedEventHandler">
      <summary>Represents the method that handles the PanelChanged event of a PenInputPanel object.</summary>
      <param name="sender">[in] Specifies the source PenInputPanel object of this event.</param>
      <param name="e">[in] Specifies the PenInputPanelChangedEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.PenInputPanelChangedEventArgs">
      <summary>      Provides data for PanelChanged events, which occur when a PenInputPanel object changes between layouts.    </summary>
    </member>
    <member name="M:Microsoft.Ink.PenInputPanelChangedEventArgs.#ctor(Microsoft.Ink.PanelType)">
      <summary>Initializes a new instance of the PenInputPanelChangedEventArgs class.    </summary>
      <param name="newPanelType">A member of the PanelType enumeration that indicates the type of panel the PenInputPanel object has changed to.</param>
    </member>
    <member name="P:Microsoft.Ink.PenInputPanelChangedEventArgs.NewPanelType">
      <summary>Gets the new panel type used for input within the PenInputPanel object, after the PanelChanged event fires.</summary>
    </member>
    <member name="T:Microsoft.Ink.PenInputPanelInputFailedEventHandler">
      <summary>Represents the method that handles the InputFailed event of a PenInputPanel object.</summary>
      <param name="sender">[in] Specifies the source PenInputPanel object of this event.</param>
      <param name="e">[in] Specifies the PenInputPanelInputFailedEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.PenInputPanelInputFailedEventArgs">
      <summary>      Provides data for InputFailed events, which occur when the input focus changes before a PenInputPanel object was able to insert user input into the attached control.    </summary>
    </member>
    <member name="M:Microsoft.Ink.PenInputPanelInputFailedEventArgs.#ctor(System.IntPtr,System.Windows.Forms.Keys,System.String)">
      <summary>Initializes a new instance of the PenInputPanelInputFailedEventArgs class class.    </summary>
      <param name="keyData">The state of keys pressed, including SHIFT, CAPS LOCK, CTRL, and ALT.</param>
      <param name="text">The string returned from the recognizer, intended to be inserted into the control represented by the Handle property.</param>
      <param name="handle">The handle of the control that invoked the PenInputPanel object.</param>
    </member>
    <member name="P:Microsoft.Ink.PenInputPanelInputFailedEventArgs.Handle">
      <summary>Gets the handle of the control that invoked the PenInputPanel object.</summary>
    </member>
    <member name="P:Microsoft.Ink.PenInputPanelInputFailedEventArgs.Text">
      <summary>Gets the string that was to be inserted into the control when the InputFailed event fired.</summary>
    </member>
    <member name="T:Microsoft.Ink.Cursor">
      <summary>      Represents general information about a tablet pointing and selecting device.    </summary>
    </member>
    <member name="M:Microsoft.Ink.Cursor.ToString">
      <summary>Returns a string that represents the current Cursor object.</summary>
      <returns>Returns a string that represents the current Cursor object.</returns>
    </member>
    <member name="P:Microsoft.Ink.Cursor.Name">
      <summary>Gets the name of the Cursor object.</summary>
    </member>
    <member name="P:Microsoft.Ink.Cursor.Id">
      <summary>Gets the identifier of the Cursor object.</summary>
    </member>
    <member name="P:Microsoft.Ink.Cursor.Inverted">
      <summary>Gets a value that indicates whether the cursor is the inverted end of the pen.		</summary>
    </member>
    <member name="P:Microsoft.Ink.Cursor.DrawingAttributes">
      <summary>Gets or sets the drawing attributes to apply to ink as it is drawn</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.Cursor.Tablet">
      <summary>Gets the tablet device to which the Cursor belongs.	</summary>
    </member>
    <member name="P:Microsoft.Ink.Cursor.Buttons">
      <summary>Returns the CursorButtons collection that is available on a known Cursor.</summary>
    </member>
    <member name="T:Microsoft.Ink.CursorButtonState">
      <summary>      Defines values that specify the state of a cursor button.    </summary>
    </member>
    <member name="F:Microsoft.Ink.CursorButtonState.Unavailable">
      <summary>      Shows that the cursor button is unavailable</summary>
    </member>
    <member name="F:Microsoft.Ink.CursorButtonState.Up">
      <summary>      Shows that the cursor button is up</summary>
    </member>
    <member name="F:Microsoft.Ink.CursorButtonState.Down">
      <summary>      Shows that the cursor button is down</summary>
    </member>
    <member name="T:Microsoft.Ink.CursorButton">
      <summary>      Represents general information about a button on a tablet pointing and selecting device.    </summary>
    </member>
    <member name="M:Microsoft.Ink.CursorButton.ToString">
      <summary>Returns a string that represents the current CursorButton object.</summary>
      <returns>Returns a string that represents the current CursorButton object.</returns>
    </member>
    <member name="P:Microsoft.Ink.CursorButton.Name">
      <summary>Gets the name of the CursorButton object.</summary>
    </member>
    <member name="P:Microsoft.Ink.CursorButton.Id">
      <summary>Gets the identifier of the CursorButton object.</summary>
    </member>
    <member name="P:Microsoft.Ink.CursorButton.State">
      <summary>Gets the state of the CursorButton object.	</summary>
    </member>
    <member name="T:Microsoft.Ink.CursorButtons">
      <summary>      Represents a collection of CursorButton objects for a Cursor object.    </summary>
    </member>
    <member name="M:Microsoft.Ink.CursorButtons.CopyTo(System.Array,System.Int32)">
      <summary>Copies all of the elements of the current CursorButtons collection to the specified one-dimensional array, starting at the specified destination array index.</summary>
      <param name="array">The one-dimensional array that is the destination of elements copied from the collection</param>
      <param name="index">The zero-based index in the array parameter at which copying begins.</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.CursorButtons.GetEnumerator">
      <summary> Returns an object that implements the IEnumerator interface and that can iterate through the CursorButton objects within the CursorButtons collection.    </summary>
      <returns> Returns an object that implements the IEnumerator interface and that can iterate through the CursorButton objects within the CursorButtons collection.    </returns>
    </member>
    <member name="M:Microsoft.Ink.CursorButtons.System#Collections#IEnumerable#GetEnumerator">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.Ink.CursorButtons.SyncRoot">
      <value>Returns an object that can be used to synchronize access to the CursorButtons collection.</value>
    </member>
    <member name="P:Microsoft.Ink.CursorButtons.Count">
      <value>Gets the number of CursorButton objects contained in the CursorButtons collection.</value>
    </member>
    <member name="P:Microsoft.Ink.CursorButtons.IsSynchronized">
      <value>Gets a value that indicates whether or not access to the CursorButtons collection is synchronized (thread safe).</value>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.CursorButtons.Item(System.Guid)">
      <summary>
      </summary>
      <param name="id">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.Ink.CursorButtons.Item(System.Int32)">
      <summary>
      </summary>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.Ink.CursorButtons.CursorButtonsEnumerator">
      <summary>      An implementation of the IEnumerator interface that supports iterating over a CursorButtons collection.    </summary>
    </member>
    <member name="M:Microsoft.Ink.CursorButtons.CursorButtonsEnumerator.#ctor(Microsoft.Ink.CursorButtons)">
      <summary>Initializes a new instance of the CursorButtonsEnumerator class</summary>
      <param name="cursorButtons"> The CursorButton collection that this enumerator iterates over</param>
    </member>
    <member name="M:Microsoft.Ink.CursorButtons.CursorButtonsEnumerator.MoveNext">
      <summary>Moves the enumerator index to the next object in the collection.		</summary>
      <returns>Set to true if the index position references an object; false if the index position references the end of the collection.		</returns>
    </member>
    <member name="M:Microsoft.Ink.CursorButtons.CursorButtonsEnumerator.Reset">
      <summary>Resets the enumerator index to the beginning of the CursorButtons collection.		</summary>
    </member>
    <member name="P:Microsoft.Ink.CursorButtons.CursorButtonsEnumerator.System#Collections#IEnumerator#Current">
      <value>
      </value>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.Ink.CursorButtons.CursorButtonsEnumerator.Current">
      <value>Gets the CursorButton object in the CursorButtons collection to which the enumerator is pointing.    </value>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.Ink.Cursors">
      <summary>      Represents a collection of Cursor objects.    </summary>
    </member>
    <member name="M:Microsoft.Ink.Cursors.CopyTo(System.Array,System.Int32)">
      <summary>Copies all of the elements of the current Cursors collection to the specified one-dimensional array, starting at the specified destination array index.</summary>
      <param name="array">The one-dimensional array that is the destination of elements copied from the collection</param>
      <param name="index">The zero-based index in the array parameter at which copying begins.</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Cursors.GetEnumerator">
      <summary> Returns an object that implements the IEnumerator interface and that can iterate through the Cursor objects within the Cursors collection.    </summary>
      <returns> Returns an object that implements the IEnumerator interface and that can iterate through the Cursor objects within the Cursors collection.    </returns>
    </member>
    <member name="M:Microsoft.Ink.Cursors.System#Collections#IEnumerable#GetEnumerator">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.Ink.Cursors.SyncRoot">
      <value>Returns an object that can be used to synchronize access to the Cursors collection.</value>
    </member>
    <member name="P:Microsoft.Ink.Cursors.Count">
      <value>Gets the number of Cursors objects contained in the Cursors collection.</value>
    </member>
    <member name="P:Microsoft.Ink.Cursors.IsSynchronized">
      <value>Gets a value that indicates whether or not access to the Cursors collection is synchronized (thread safe).</value>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.Cursors.Item(System.Int32)">
      <summary>
      </summary>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.Ink.Cursors.CursorsEnumerator">
      <summary>An implementation of the IEnumerator interface that supports iterating over a Cursors collection.</summary>
    </member>
    <member name="M:Microsoft.Ink.Cursors.CursorsEnumerator.#ctor(Microsoft.Ink.Cursors)">
      <summary>Initializes a new instance of the CursorsEnumerator class.</summary>
      <param name="c"> The Cursor collection that this enumerator iterates over</param>
    </member>
    <member name="M:Microsoft.Ink.Cursors.CursorsEnumerator.MoveNext">
      <summary>Moves the enumerator index to the next object in the collection.		</summary>
      <returns>Set to true if the index position references an object; false if the index position references the end of the collection.		</returns>
    </member>
    <member name="M:Microsoft.Ink.Cursors.CursorsEnumerator.Reset">
      <summary>Resets the enumerator index to the beginning of the Cursors collection.		</summary>
    </member>
    <member name="P:Microsoft.Ink.Cursors.CursorsEnumerator.System#Collections#IEnumerator#Current">
      <value>
      </value>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.Ink.Cursors.CursorsEnumerator.Current">
      <value>Gets the Cursor object in the Cursors collection to which the enumerator is pointing.    </value>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.Ink.CustomStrokes">
      <summary>Contains a collection of user-defined Strokes collections.</summary>
    </member>
    <member name="M:Microsoft.Ink.CustomStrokes.#ctor">
    </member>
    <member name="M:Microsoft.Ink.CustomStrokes.Clear">
      <summary> Clears all the Strokes collections from the CustomStrokes collection</summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.CustomStrokes.Add(System.String,Microsoft.Ink.Strokes)">
      <summary>Adds a Strokes collection to the CustomStrokes collection.</summary>
      <param name="name">The name of the Strokes collection to add to the CustomStrokes collection.</param>
      <param name="strokes">The Strokes collection to add to the CustomStrokes collection.</param>
    </member>
    <member name="M:Microsoft.Ink.CustomStrokes.Remove(System.String)">
      <summary>Removes a Strokes collection from a CustomStrokes collection</summary>
      <param name="s">The name that was used to add the Strokes collection to the CustomStrokes collection</param>
    </member>
    <member name="M:Microsoft.Ink.CustomStrokes.RemoveAt(System.Int32)">
      <summary>Removes a Strokes collection at the specified index of the CustomStrokes collection</summary>
      <param name="i">The index of the Strokes collection to be removed from the CustomStrokes collection</param>
    </member>
    <member name="M:Microsoft.Ink.CustomStrokes.CopyTo(System.Array,System.Int32)">
      <summary>Copies all of the elements of the current CustomStrokes collection to the specified one-dimensional array, starting at the specified destination array index.</summary>
      <param name="array">The one-dimensional array that is the destination of elements copied from the collection</param>
      <param name="index">The zero-based index in the array parameter at which copying begins.</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.CustomStrokes.GetEnumerator">
      <summary> Returns an object that implements the IEnumerator interface and that can iterate through the Stroke collections within the CustomStrokes collection.    </summary>
      <returns> Returns an object that implements the IEnumerator interface and that can iterate through the Strokes collections within the CustomStrokes collection.    </returns>
    </member>
    <member name="M:Microsoft.Ink.CustomStrokes.System#Collections#IEnumerable#GetEnumerator">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.Ink.CustomStrokes.Count">
      <value>Gets the number of Strokes objects contained in the CustomStrokes collection.</value>
    </member>
    <member name="P:Microsoft.Ink.CustomStrokes.IsFixedSize">
      <value>Gets a value indicating whether the CustomStrokes collection has a fixed size.</value>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.CustomStrokes.IsSynchronized">
      <value>Gets a value that indicates whether or not access to the CustomStrokes collection is synchronized (thread safe).</value>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.CustomStrokes.SyncRoot">
      <value>Returns an object that can be used to synchronize access to the CustomStrokes collection.</value>
    </member>
    <member name="P:Microsoft.Ink.CustomStrokes.IsReadOnly">
      <value>Gets a value indicating whether the CustomStrokes collection is read-only.</value>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.CustomStrokes.Item(System.Int32)">
      <summary>
      </summary>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.Ink.CustomStrokes.Item(System.String)">
      <summary>
      </summary>
      <param name="name">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.Ink.CustomStrokes.CustomStrokesEnumerator">
      <summary>An implementation of the IEnumerator interface that supports iterating over a CustomStrokes collection.</summary>
    </member>
    <member name="M:Microsoft.Ink.CustomStrokes.CustomStrokesEnumerator.#ctor(Microsoft.Ink.CustomStrokes)">
      <summary>Initializes a new instance of the CustomStrokesEnumerator class</summary>
      <param name="cs"> The CustomStrokes collection that this enumerator iterates over</param>
    </member>
    <member name="M:Microsoft.Ink.CustomStrokes.CustomStrokesEnumerator.MoveNext">
      <summary>Moves the enumerator index to the next object in the collection.		</summary>
      <returns>Set to true if the index position references an object; false if the index position references the end of the collection.		</returns>
    </member>
    <member name="M:Microsoft.Ink.CustomStrokes.CustomStrokesEnumerator.Reset">
      <summary>Resets the enumerator index to the beginning of the CustomStrokes collection.		</summary>
    </member>
    <member name="P:Microsoft.Ink.CustomStrokes.CustomStrokesEnumerator.System#Collections#IEnumerator#Current">
      <value>
      </value>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.Ink.CustomStrokes.CustomStrokesEnumerator.Current">
      <value>Gets the Strokes collection in the CustomStrokes collection to which the enumerator is pointing.    </value>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.Ink.PenTip">
      <summary>      Defines values that specify the shape of the pen tip.    </summary>
    </member>
    <member name="F:Microsoft.Ink.PenTip.Ball">
      <summary>      Specifies a round pen tip.    </summary>
    </member>
    <member name="F:Microsoft.Ink.PenTip.Rectangle">
      <summary>      Specifies a rectangular pen tip.    </summary>
    </member>
    <member name="T:Microsoft.Ink.RasterOperation">
      <summary>      Defines values for performing raster operations on drawn ink</summary>
    </member>
    <member name="F:Microsoft.Ink.RasterOperation.Black">
      <summary>      Specifies black pen color.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RasterOperation.NotMergePen">
      <summary>      Specifies the inverse of MergePen.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RasterOperation.MaskNotPen">
      <summary>      Specifies a combination of the colors are common to the background color and the inverse of the pen.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RasterOperation.NotCopyPen">
      <summary>      Specifies the inverse of CopyPen.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RasterOperation.MakePenNot">
      <summary>      Specifies a combination of the colors are common to both the pen and the inverse of the display.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RasterOperation.Not">
      <summary>      Specifies the inverse of the display color.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RasterOperation.XOrPen">
      <summary>      Specifies a combination of the colors in the pen and in the display color, but not in both.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RasterOperation.NotMaskPen">
      <summary>      Specifies the inverse of MaskPen.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RasterOperation.MaskPen">
      <summary>      Specifies a combination of the colors common to both the pen and the display.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RasterOperation.NotXOrPen">
      <summary>      Specifies an inverse of XOrPen.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RasterOperation.NoOperation">
      <summary>      Specifies no operation; the output remains unchanged.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RasterOperation.MergeNotPen">
      <summary>      Specifies a combination of the display color and the inverse of the pen color.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RasterOperation.CopyPen">
      <summary>      Specifies the pen color.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RasterOperation.MergePenNot">
      <summary>      Specifies a combination of the pen color and the inverse of the display color.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RasterOperation.MergePen">
      <summary>      Specifies a combination of the pen color and the display color.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RasterOperation.White">
      <summary>      Specifies a white pen color.    </summary>
    </member>
    <member name="T:Microsoft.Ink.DrawingAttributes">
      <summary>Represents the attributes that are applied to ink when it is drawn.    </summary>
    </member>
    <member name="M:Microsoft.Ink.DrawingAttributes.#ctor">
      <summary>Initializes a new instance of the DrawingAttributes class.    </summary>
    </member>
    <member name="M:Microsoft.Ink.DrawingAttributes.#ctor(System.Drawing.Color)">
      <summary>Initializes a new instance of the DrawingAttributes class.    </summary>
      <param name="color">The specific color to which the DrawingAttributes object is initialized.    </param>
    </member>
    <member name="M:Microsoft.Ink.DrawingAttributes.#ctor(System.Single)">
      <summary>Initializes a new instance of the DrawingAttributes class.    </summary>
      <param name="width">The specific pen width to which the DrawingAttributes object is initialized.    </param>
    </member>
    <member name="M:Microsoft.Ink.DrawingAttributes.#ctor(System.Drawing.Pen)">
      <summary>Initializes a new instance of the DrawingAttributes class.    </summary>
      <param name="pen">The Pen object from which the pen color and width for the DrawingAttributes object is taken.    </param>
    </member>
    <member name="M:Microsoft.Ink.DrawingAttributes.System#ICloneable#Clone">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.Ink.DrawingAttributes.Clone">
      <summary>Returns a copy of this DrawingAttributes object.    </summary>
      <returns>The new copy of the DrawingAttributes object.    </returns>
    </member>
    <member name="P:Microsoft.Ink.DrawingAttributes.Color">
      <summary>Gets or sets the color of the ink that is drawn with this DrawingAttributes object.</summary>
    </member>
    <member name="P:Microsoft.Ink.DrawingAttributes.AntiAliased">
      <summary>Gets or sets the value that indicates whether a stroke is antialiased.</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.DrawingAttributes.Width">
      <summary>Gets or sets the y-axis dimension, or width, of the pen tip when drawing ink.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.DrawingAttributes.Height">
      <summary>Gets or sets the y-axis dimesion, or height, of the pen tip when drawing ink.</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.DrawingAttributes.FitToCurve">
      <summary>Gets or sets the value that indicates whether Bezier smoothing is used to render  ink.			  </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.DrawingAttributes.IgnorePressure">
      <summary>Gets or sets the value that indicates whether ink gets wider with increased pressure of the pen tip on the tablet surface.    </summary>
    </member>
    <member name="P:Microsoft.Ink.DrawingAttributes.Transparency">
      <summary>Gets or sets a value that indicates the transparency value of ink.	  </summary>
    </member>
    <member name="P:Microsoft.Ink.DrawingAttributes.RasterOperation">
      <summary>Gets or sets a value that defines how the colors of the pen and background interact.		</summary>
    </member>
    <member name="P:Microsoft.Ink.DrawingAttributes.PenTip">
      <summary>Gets or sets a value that indicates which pen tip to use when drawing ink that is associated with this DrawingAttributes object.</summary>
    </member>
    <member name="P:Microsoft.Ink.DrawingAttributes.ExtendedProperties">
      <summary>Gets the collection of application-defined data.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:Microsoft.Ink.InkErrors">
    </member>
    <member name="F:Microsoft.Ink.InkErrors.MismatchedInkObject">
    </member>
    <member name="F:Microsoft.Ink.InkErrors.Busy">
    </member>
    <member name="F:Microsoft.Ink.InkErrors.IncompatibleObject">
    </member>
    <member name="F:Microsoft.Ink.InkErrors.WindowNotSet">
    </member>
    <member name="F:Microsoft.Ink.InkErrors.InvalidMode">
    </member>
    <member name="F:Microsoft.Ink.InkErrors.Enabled">
    </member>
    <member name="F:Microsoft.Ink.InkErrors.NoStrokesToRecognize">
    </member>
    <member name="F:Microsoft.Ink.InkErrors.EmptyRecognitionResult">
    </member>
    <member name="F:Microsoft.Ink.InkErrors.InvalidProperty">
    </member>
    <member name="F:Microsoft.Ink.InkErrors.RecognizerNotRegistered">
    </member>
    <member name="F:Microsoft.Ink.InkErrors.OverlappingInputRect">
    </member>
    <member name="F:Microsoft.Ink.InkErrors.InvalidStroke">
    </member>
    <member name="F:Microsoft.Ink.InkErrors.NoDefaultTablet">
    </member>
    <member name="F:Microsoft.Ink.InkErrors.UnknownProperty">
    </member>
    <member name="F:Microsoft.Ink.InkErrors.InvalidInputRect">
    </member>
    <member name="F:Microsoft.Ink.InkErrors.InitializeFail">
    </member>
    <member name="F:Microsoft.Ink.InkErrors.NotRelevant">
    </member>
    <member name="F:Microsoft.Ink.InkErrors.InvalidRights">
    </member>
    <member name="F:Microsoft.Ink.InkErrors.OutOfOrderCall">
    </member>
    <member name="M:Microsoft.Ink.InkErrors.ThrowExceptionForInkError(System.Int32)">
    </member>
    <member name="T:Microsoft.Ink.ExtendedProperties">
      <summary>      Represents a collection of ExtendedProperty objects that contain application-defined data.    </summary>
    </member>
    <member name="M:Microsoft.Ink.ExtendedProperties.Clear">
      <summary> Clears all the ExtendedProperty objects from the ExtendedProperties collection</summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.ExtendedProperties.IndexOf(Microsoft.Ink.ExtendedProperty)">
      <summary>Returns the index of a specific ExtendedProperty object within an ExtendedProperties collection, based on the name of the ExtendedProperty object.</summary>
      <param name="ep">The ExtendedProperty object to check for</param>
      <returns>Returns the index of the ExtendedProperty object within an ExtendedProperties collection</returns>
    </member>
    <member name="M:Microsoft.Ink.ExtendedProperties.IndexOf(System.Guid)">
      <summary>Returns the index of a specific ExtendedProperty object within an ExtendedProperties collection, based on the globally unique identifier (GUID) for the ExtendedProperty object.</summary>
      <param name="id">The Guid of the ExtendedProperty object to check for</param>
      <returns>Returns the index of the ExtendedProperty object within an ExtendedProperties collection</returns>
    </member>
    <member name="M:Microsoft.Ink.ExtendedProperties.Contains(Microsoft.Ink.ExtendedProperty)">
      <summary>Indicates whether the ExtendedProperties collection contains a specific ExtendedProperty object.</summary>
      <param name="ep">The ExtendedProperty object to check for.</param>
      <returns>Whether the ExtendedProperties collection contains a specific ExtendedProperty object.</returns>
    </member>
    <member name="M:Microsoft.Ink.ExtendedProperties.Contains(System.Guid)">
      <summary>Indicates whether the ExtendedProperties collection contains a specific ExtendedProperty object.</summary>
      <param name="id">The globally unique identifier (GUID) of the ExtendedProperty object to check for.</param>
      <returns>Whether the ExtendedProperties collection contains a specific ExtendedProperty object.</returns>
    </member>
    <member name="M:Microsoft.Ink.ExtendedProperties.Add(System.Guid,System.Object)">
      <summary>Creates an ExtendedProperty object and adds it to the ExtendedProperties collection.</summary>
      <param name="id">The identifier of the new ExtendedProperty object.</param>
      <param name="data">The data for the new ExtendedProperty object.</param>
      <returns>The new ExtendedProperty object.    </returns>
    </member>
    <member name="M:Microsoft.Ink.ExtendedProperties.Remove(System.Guid)">
      <summary> Removes an ExtendedProperty object from the ExtendedProperties collection</summary>
      <param name="id">The globally unique identifier (GUID) of the ExtendedProperty object to remove from the ExtendedProperties collection</param>
    </member>
    <member name="M:Microsoft.Ink.ExtendedProperties.Remove(Microsoft.Ink.ExtendedProperty)">
      <summary> Removes an ExtendedProperty object from the ExtendedProperties collection</summary>
      <param name="ep">The ExtendedProperty object to remove from the ExtendedProperties collection</param>
    </member>
    <member name="M:Microsoft.Ink.ExtendedProperties.RemoveAt(System.Int32)">
      <summary>Removes an ExtendedProperty object at the specified index of the ExtendedProperties collection</summary>
      <param name="i">The index of the ExtendedProperty object to be removed from the ExtendedProperties collection</param>
    </member>
    <member name="M:Microsoft.Ink.ExtendedProperties.DoesPropertyExist(System.Guid)">
      <summary>Indicates whether a specified ExtendedProperty object exists in the ExtendedProperties collection.</summary>
      <param name="id">The globally unique identifier (GUID) of the property to check for</param>
      <returns>Whether the specified ExtendedProperty object exists in the ExtendedProperties collection.</returns>
    </member>
    <member name="M:Microsoft.Ink.ExtendedProperties.CopyTo(System.Array,System.Int32)">
      <summary>Copies all of the elements of the current ExtendedProperties collection to the specified one-dimensional array, starting at the specified destination array index.</summary>
      <param name="array">The one-dimensional array that is the destination of elements copied from the collection</param>
      <param name="index">The zero-based index in the array parameter at which copying begins.</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.ExtendedProperties.GetEnumerator">
      <summary> Returns an object that implements the IEnumerator interface that can iterate through the ExtendedProperty objects within the ExtendedProperties collection.    </summary>
      <returns> Returns an object that implements the IEnumerator interface that can iterate through the ExtendedProperty objects within the ExtendedProperties collection.    </returns>
    </member>
    <member name="M:Microsoft.Ink.ExtendedProperties.System#Collections#IEnumerable#GetEnumerator">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.Ink.ExtendedProperties.Count">
      <value>Gets the number of ExtendedProperty objects contained in the ExtendedProperties collection.</value>
    </member>
    <member name="P:Microsoft.Ink.ExtendedProperties.IsFixedSize">
      <value>Gets a value indicating whether the ExtendedProperties collection has a fixed size.</value>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.ExtendedProperties.IsReadOnly">
      <value>Gets a value indicating whether the ExtendedProperties collection is read-only.</value>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.ExtendedProperties.IsSynchronized">
      <value>Gets a value that indicates whether or not access to the ExtendedProperties collection is synchronized (thread safe).</value>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.ExtendedProperties.SyncRoot">
      <value>Returns an object that can be used to synchronize access to the ExtendedProperties collection.</value>
    </member>
    <member name="P:Microsoft.Ink.ExtendedProperties.Item(System.Guid)">
      <summary>
      </summary>
      <param name="id">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.Ink.ExtendedProperties.Item(System.Int32)">
      <summary>
      </summary>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.Ink.ExtendedProperties.ExtendedPropertiesEnumerator">
      <summary>An implementation of the IEnumerator interface that supports iterating over an ExtendedProperties collection.</summary>
    </member>
    <member name="M:Microsoft.Ink.ExtendedProperties.ExtendedPropertiesEnumerator.#ctor(Microsoft.Ink.ExtendedProperties)">
      <summary>Initializes a new instance of the ExtendedPropertiesEnumerator class.  </summary>
      <param name="p">The ExtendedProperties collection that this enumerator iterates over.  </param>
    </member>
    <member name="M:Microsoft.Ink.ExtendedProperties.ExtendedPropertiesEnumerator.MoveNext">
      <summary>Moves the enumerator index to the next object in the collection.		</summary>
      <returns>Set to true if the index position references an object; false if the index position references the end of the collection.		</returns>
    </member>
    <member name="M:Microsoft.Ink.ExtendedProperties.ExtendedPropertiesEnumerator.Reset">
      <summary>Resets the enumerator index to the beginning of the ExtendedProperties collection.		</summary>
    </member>
    <member name="P:Microsoft.Ink.ExtendedProperties.ExtendedPropertiesEnumerator.System#Collections#IEnumerator#Current">
      <value>
      </value>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.Ink.ExtendedProperties.ExtendedPropertiesEnumerator.Current">
      <value>Gets the ExtendedProperty object in the ExtendedProperties collection to which the enumerator is pointing.    </value>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.Ink.ExtendedProperty">
      <summary>      Represents the ability to add your own data to a variety of objects within the Tablet PC object model.    </summary>
    </member>
    <member name="P:Microsoft.Ink.ExtendedProperty.Id">
      <value>Gets the identifier of the ExtendedProperty object.</value>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.ExtendedProperty.Data">
      <value>Gets or sets the data for the ExtendedProperty object</value>
      <remarks>
      </remarks>
    </member>
    <member name="T:Microsoft.Ink.RecognitionConfidence">
      <summary>      Defines values that indicate the level of confidence that the recognizer has in the accuracy of the recognition result.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionConfidence.Strong">
      <summary>      Indicates strong confidence in the result or alternate.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionConfidence.Intermediate">
      <summary>      Indicates intermediate confidence in the result or alternate.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionConfidence.Poor">
      <summary>      Indicates poor confidence in the result or alternate.    </summary>
    </member>
    <member name="T:Microsoft.Ink.ApplicationGesture">
      <summary>      Defines values for the set of available application-specific gesture.    </summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.AllGestures">
      <summary>Recognizes all application-specific gestures.</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.NoGesture">
      <summary>Recognizes no application-specific gestures.</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.Scratchout">
      <summary>Erases content</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.Triangle">
      <summary>Inserts input</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.Square">
      <summary>Marks an action item</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.Star">
      <summary>Marks an action item</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.Check">
      <summary>Denotes a check-off</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.Curlicue">
      <summary>Cuts a word</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.DoubleCurlicue">
      <summary>Copies a word</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.Circle">
      <summary>Has no suggested semantic behavior or action</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.DoubleCircle">
      <summary>Pastes a selection</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.SemiCircleLeft">
      <summary>Undoes an action</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.SemiCircleRight">
      <summary>Redoes an action</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.ChevronUp">
      <summary>Has no suggested semantic behavior or action</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.ChevronDown">
      <summary>Has no suggested semantic behavior or action</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.ChevronLeft">
      <summary>Has no suggested semantic behavior or action</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.ChevronRight">
      <summary>Has no suggested semantic behavior or action</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.ArrowUp">
      <summary>Has no suggested semantic behavior or action</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.ArrowDown">
      <summary>Has no suggested semantic behavior or action</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.ArrowLeft">
      <summary>Has no suggested semantic behavior or action</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.ArrowRight">
      <summary>Has no suggested semantic behavior or action</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.Up">
      <summary>Has no suggested semantic behavior or action</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.Down">
      <summary>Has no suggested semantic behavior or action</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.Left">
      <summary>Specifies a backspace</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.Right">
      <summary>Signifies a space</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.UpDown">
      <summary>Undoes an action</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.DownUp">
      <summary>Has no suggested semantic behavior or action</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.LeftRight">
      <summary>Cuts a selection</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.RightLeft">
      <summary>Copies a selection</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.UpLeftLong">
      <summary>Decreases the indent</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.UpRightLong">
      <summary>Signifies pressing a TAB key</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.DownLeftLong">
      <summary>Signifies pressing an ENTER key</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.DownRightLong">
      <summary>Signifies pressing the spacebar</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.UpLeft">
      <summary>Has no suggested semantic behavior or action</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.UpRight">
      <summary>Has no suggested semantic behavior or action</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.DownLeft">
      <summary>Has no suggested semantic behavior or action</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.DownRight">
      <summary>Has no suggested semantic behavior or action</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.LeftUp">
      <summary>Has no suggested semantic behavior or action</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.LeftDown">
      <summary>Has no suggested semantic behavior or action</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.RightUp">
      <summary>Signifies an Input Method Editor (IME) convert</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.RightDown">
      <summary>Has no suggested semantic behavior or action</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.Exclamation">
      <summary>Has no suggested semantic behavior or action</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.Tap">
      <summary>Signifies a mouse click</summary>
    </member>
    <member name="F:Microsoft.Ink.ApplicationGesture.DoubleTap">
      <summary>Signifies a mouse double-click</summary>
    </member>
    <member name="T:Microsoft.Ink.Gesture">
      <summary>      Represents the ability to query particular properties of a gesture returned from a gesture recognition.    </summary>
    </member>
    <member name="P:Microsoft.Ink.Gesture.Id">
      <summary>Gets the value of the application gesture.</summary>
    </member>
    <member name="P:Microsoft.Ink.Gesture.HotPoint">
      <summary>Gets the hot point of the gesture, in ink space coordinates.    </summary>
    </member>
    <member name="P:Microsoft.Ink.Gesture.Confidence">
      <summary>Gets the level of confidence (strong, intermediate, or poor) that a recognizer has in the recognition of a gesture</summary>
    </member>
    <member name="T:Microsoft.Ink.ExtractFlags">
      <summary>      Defines values that determine how strokes are extracted from an Ink object.		This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.		</summary>
    </member>
    <member name="F:Microsoft.Ink.ExtractFlags.CopyFromOriginal">
      <summary>      Copies ink from the Ink object.    </summary>
    </member>
    <member name="F:Microsoft.Ink.ExtractFlags.RemoveFromOriginal">
      <summary>      Cuts ink from the Ink object.    </summary>
    </member>
    <member name="F:Microsoft.Ink.ExtractFlags.Default">
      <summary>      Cuts ink from the Ink object.    </summary>
    </member>
    <member name="T:Microsoft.Ink.PersistenceFormat">
      <summary>      Defines values that specify how ink is persisted.    </summary>
    </member>
    <member name="F:Microsoft.Ink.PersistenceFormat.InkSerializedFormat">
      <summary>      Specifies ink that is persisted using Ink Serialized Format (ISF).      This is the most compact persistent representation of ink</summary>
    </member>
    <member name="F:Microsoft.Ink.PersistenceFormat.Base64InkSerializedFormat">
      <summary>      Specifies ink that is persisted by encoding the ink serialized format (ISF) as a base64 stream.      This format is provided so ink can be encoded directly in an Extensible Markup Language (XML) or HTML file.</summary>
    </member>
    <member name="F:Microsoft.Ink.PersistenceFormat.Gif">
      <summary>      Specifies ink that is persisted by using a Graphics Interchange Format (GIF) file that contains Ink Serialized Format (ISF) as metadata embedded within the file.      This allows ink to be viewed in applications that are not ink-enabled and maintain its full ink fidelity when it returns to an ink-enabled application</summary>
    </member>
    <member name="F:Microsoft.Ink.PersistenceFormat.Base64Gif">
      <summary>      Specifies ink that is persisted by using a base64 encoded fortified Graphics Interchange Format (GIF).      This format is provided when ink is to be encoded directly in an Extensible Markup Language (XML) or HTML file with later conversion into an image</summary>
    </member>
    <member name="T:Microsoft.Ink.CompressionMode">
      <summary>      Defines values for the compression modes that are used to save the Ink object to a serialized format.    </summary>
    </member>
    <member name="F:Microsoft.Ink.CompressionMode.Default">
      <summary>      Provides the optimum balance between saving time and minimizing storage space</summary>
    </member>
    <member name="F:Microsoft.Ink.CompressionMode.Maximum">
      <summary>      Maximizes compression, thereby minimizing required storage space</summary>
    </member>
    <member name="F:Microsoft.Ink.CompressionMode.NoCompression">
      <summary>      Minimizes the time to save the ink</summary>
    </member>
    <member name="T:Microsoft.Ink.BoundingBoxMode">
      <summary>      Specifies which characteristics of a stroke, such as drawing attributes, are used to calculate the bounding box of the ink.    </summary>
    </member>
    <member name="F:Microsoft.Ink.BoundingBoxMode.Default">
      <summary>      Use the definition of each stroke.    </summary>
    </member>
    <member name="F:Microsoft.Ink.BoundingBoxMode.NoCurveFit">
      <summary>      Use the polyline of the strokes.    </summary>
    </member>
    <member name="F:Microsoft.Ink.BoundingBoxMode.CurveFit">
      <summary>      Use the Bezier curve fitting line of the strokes.    </summary>
    </member>
    <member name="F:Microsoft.Ink.BoundingBoxMode.PointsOnly">
      <summary>      Use only the points of the strokes.    </summary>
    </member>
    <member name="F:Microsoft.Ink.BoundingBoxMode.Union">
      <summary>      The union of NoCurveFit and CurveFit request.    </summary>
    </member>
    <member name="T:Microsoft.Ink.InkClipboardModes">
      <summary>      Defines values that specify the copy options of the Clipboard.		This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.		</summary>
    </member>
    <member name="F:Microsoft.Ink.InkClipboardModes.Copy">
      <summary>      Copies the ink to the Clipboard.    </summary>
    </member>
    <member name="F:Microsoft.Ink.InkClipboardModes.Cut">
      <summary>      Cuts the ink and copies it to the Clipboard.    </summary>
    </member>
    <member name="F:Microsoft.Ink.InkClipboardModes.ExtractOnly">
      <summary>      Does not copy the ink to the Clipboard</summary>
    </member>
    <member name="F:Microsoft.Ink.InkClipboardModes.DelayedCopy">
      <summary>      Uses delayed rendering to reduce the amount of data that is stored on the Clipboard</summary>
    </member>
    <member name="F:Microsoft.Ink.InkClipboardModes.Default">
      <summary>      The Copy mode.    </summary>
    </member>
    <member name="T:Microsoft.Ink.InkClipboardFormats">
      <summary>      Defines values that specify the format of ink that is stored on the Clipboard.		This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.		</summary>
    </member>
    <member name="F:Microsoft.Ink.InkClipboardFormats.None">
      <summary>      Specifies a flag that can be used to verify whether any formats are present by checking against it.    </summary>
    </member>
    <member name="F:Microsoft.Ink.InkClipboardFormats.InkSerializedFormat">
      <summary>      Specifies ink is encoded in Ink Serialized Format (ISF)</summary>
    </member>
    <member name="F:Microsoft.Ink.InkClipboardFormats.SketchInk">
      <summary>      Specifies ink is not expected to form words, but rather is interpreted as a picture</summary>
    </member>
    <member name="F:Microsoft.Ink.InkClipboardFormats.TextInk">
      <summary>      Specifies ink is expected to form words</summary>
    </member>
    <member name="F:Microsoft.Ink.InkClipboardFormats.EnhancedMetafile">
      <summary>      Specifies the enhanced metafile to play to create the background</summary>
    </member>
    <member name="F:Microsoft.Ink.InkClipboardFormats.Metafile">
      <summary>      Specifies ink is stored as a metafile or a list of commands that can be played back to draw a graphic.    </summary>
    </member>
    <member name="F:Microsoft.Ink.InkClipboardFormats.Bitmap">
      <summary>      Specifies the bitmap to use as the background</summary>
    </member>
    <member name="F:Microsoft.Ink.InkClipboardFormats.PasteMask">
      <summary>      Specifies the formats that can be used for pasting.      This format includes the TextInk, SketchInk, and InkSerializedFormat formats.</summary>
    </member>
    <member name="F:Microsoft.Ink.InkClipboardFormats.CopyMask">
      <summary>      Specifies the formats that are copied to the Clipboard through ink.    </summary>
    </member>
    <member name="F:Microsoft.Ink.InkClipboardFormats.Default">
      <summary>      The CopyMask format.    </summary>
    </member>
    <member name="T:Microsoft.Ink.Ink">
      <summary>      Represents the collected strokes of ink within an ink space.    </summary>
    </member>
    <member name="F:Microsoft.Ink.Ink.InkSerializedFormat">
      <summary> Returns a string that contains the name of the format for ink serialized format (ISF) for querying the Clipboard.	</summary>
    </member>
    <member name="F:Microsoft.Ink.Ink.m_Ink">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.Ink.Ink.#ctor(Microsoft.Ink._Internal.InkDisp)">
      <summary>
      </summary>
      <param name="ink">
      </param>
    </member>
    <member name="M:Microsoft.Ink.Ink.#ctor">
      <summary>Initializes a new instance of the Ink class.    </summary>
    </member>
    <member name="M:Microsoft.Ink.Ink.Dispose">
      <summary>Releases resources used by the Ink object.		</summary>
    </member>
    <member name="M:Microsoft.Ink.Ink.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the Ink object and optionally releases the managed resources.		</summary>
      <param name="disposing">Set to true to release both managed and unmanaged resources; false to release only unmanaged resources.		</param>
    </member>
    <member name="M:Microsoft.Ink.Ink.Finalize">
      <summary>Frees the resources of the current Ink object before it is reclaimed by the garbage collector.		</summary>
    </member>
    <member name="M:Microsoft.Ink.Ink.System#ICloneable#Clone">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.Ink.Ink.Clone">
      <summary>Creates a copy of this Ink object.    </summary>
      <returns>The new copy of the original Ink object.    </returns>
    </member>
    <member name="M:Microsoft.Ink.Ink.HitTest(System.Drawing.Rectangle,System.Single)">
      <summary>Returns the Strokes collection contained within a known Rectangle.</summary>
      <param name="selectionRectangle">The selection rectangle, in ink space coordinates.</param>
      <param name="percentIntersect">&lt;condition type="signature" criteria="sig_Rectangle_Single"&gt;The percentage value that determines which Stroke objects are included in the Strokes collection</param>
      <returns>Returns the Strokes collection contained within the specified area.</returns>
    </member>
    <member name="M:Microsoft.Ink.Ink.HitTest(System.Drawing.Point[],System.Single,System.Drawing.Point[]@)">
      <summary>Returns the Strokes collection contained within a polyline selection boundary.</summary>
      <param name="points">The points that are used in the selection boundary to select the Stroke objects</param>
      <param name="percentIntersect">&lt;condition type="signature" criteria="sig_Rectangle_Single"&gt;The percentage value that determines which Stroke objects are included in the Strokes collection</param>
      <param name="lassoPoints">When this method returns, contains an out parameter that represents the specific portion of the selection boundary that is used for the selection</param>
      <returns>Returns the Strokes collection contained within the specified area.</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Ink.HitTest(System.Drawing.Point[],System.Single)">
      <summary>Returns the Strokes collection contained within a polyline selection boundary.</summary>
      <param name="points">The points that are used in the selection boundary to select the Stroke objects</param>
      <param name="percentIntersect">&lt;condition type="signature" criteria="sig_Rectangle_Single"&gt;The percentage value that determines which Stroke objects are included in the Strokes collection</param>
      <returns>Returns the Strokes collection contained within the specified area.</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Ink.HitTest(System.Drawing.Point,System.Single)">
      <summary>Returns the Strokes collection of Stroke objects that are either completely inside or intersected by a known circle.</summary>
      <param name="point">The center of the hit test circle, in ink space coordinates.</param>
      <param name="radius">The radius of the hit test circle, in ink space coordinates.</param>
      <returns>Returns the Strokes collection contained within the specified area.</returns>
    </member>
    <member name="M:Microsoft.Ink.Ink.NearestPoint(System.Drawing.Point)">
      <summary>Returns the Stroke object within the Ink object that is nearest to a specified Point, given in ink space coordinates.</summary>
      <param name="point">The specified point within the Ink object, given in ink space coordinates.</param>
      <returns>Returns the Stroke that contains a Point that is closest to the specified point in the Ink object</returns>
    </member>
    <member name="M:Microsoft.Ink.Ink.NearestPoint(System.Drawing.Point,System.Single@)">
      <summary>Returns the Stroke object nearest a specified point, and returns the point on the Stroke object that is closest to the specified point.</summary>
      <param name="point">The specified point within the Ink object, given in ink space coordinates.</param>
      <param name="pointOnStroke">The point on the Stroke object that is closest to the specified point within the Ink object</param>
      <returns>Returns the Stroke that contains a Point that is closest to the specified point in the Ink object</returns>
    </member>
    <member name="M:Microsoft.Ink.Ink.NearestPoint(System.Drawing.Point,System.Single@,System.Single@)">
      <summary>Returns the Stroke object nearest a specified point, returns the point on the Stroke object that is closest to the specified point, and returns the distance between the specified point and the nearest point on the Stroke object in the Ink object.</summary>
      <param name="point">The specified point within the Ink object, given in ink space coordinates.</param>
      <param name="pointOnStroke">The point on the Stroke object that is closest to the specified point within the Ink object</param>
      <param name="distanceFromPacket">The distance between the specified point and the nearest Stroke object in the Ink object.</param>
      <returns>Returns the Stroke that contains a Point that is closest to the specified point in the Ink object</returns>
    </member>
    <member name="M:Microsoft.Ink.Ink.DeleteStroke(Microsoft.Ink.Stroke)">
      <summary>Deletes a Stroke object from the Ink object.</summary>
      <param name="stroke">The Stroke object to delete.</param>
    </member>
    <member name="M:Microsoft.Ink.Ink.DeleteStrokes(Microsoft.Ink.Strokes)">
      <summary>Deletes the specified Strokes collection from the Ink object.</summary>
      <param name="strokes">The Strokes collection to delete.</param>
    </member>
    <member name="M:Microsoft.Ink.Ink.DeleteStrokes">
      <summary> Deletes a Strokes collection from the Ink object</summary>
    </member>
    <member name="M:Microsoft.Ink.Ink.ExtractStrokes(Microsoft.Ink.Strokes,Microsoft.Ink.ExtractFlags)">
      <summary>Extracts the specified Stroke objects from the Ink object by using either cut or copy, as specified, and returns a new Ink object containing the extracted Stroke objects.</summary>
      <remarks>
      </remarks>
      <param name="strokes">The Strokes collection to extract.</param>
      <param name="extractionFlags">One of the ExtractFlags values that specifies whether the ink is cut or copied into the new Ink object.</param>
      <returns>Returns an Ink object that contains the extracted Strokes collection.</returns>
    </member>
    <member name="M:Microsoft.Ink.Ink.ExtractStrokes(Microsoft.Ink.Strokes)">
      <summary>Extracts the specified Stroke objects from the Ink object and returns a new Ink object containing the extracted Stroke objects.</summary>
      <param name="strokes">The Strokes collection to extract.</param>
      <returns>Returns an Ink object that contains the extracted Strokes collection.</returns>
    </member>
    <member name="M:Microsoft.Ink.Ink.ExtractStrokes">
      <summary> Extracts Stroke objects from the Ink object and returns a new Ink object containing the extracted Stroke objects</summary>
      <returns>Returns an Ink object that contains the extracted Strokes collection.</returns>
    </member>
    <member name="M:Microsoft.Ink.Ink.ExtractStrokes(System.Drawing.Rectangle,Microsoft.Ink.ExtractFlags)">
      <summary>Extracts the all the Stroke objects within the bounds of a specified rectangle from the Ink object by using either cut or copy, as specified, and returns a new Ink object containing the extracted Strokes collection.</summary>
      <param name="extractionRectangle">The Rectangle that delimits the ink to extract from the Ink object.</param>
      <param name="extractionFlags">One of the ExtractFlags values that specifies whether the ink is cut or copied into the new Ink object.</param>
      <returns>Returns an Ink object that contains the extracted Strokes collection.</returns>
    </member>
    <member name="M:Microsoft.Ink.Ink.ExtractStrokes(System.Drawing.Rectangle)">
      <summary>Extracts the all the Stroke objects that are within the bounds of a specified rectangle, from the Ink object, and returns a new Ink object containing the extracted Strokes collection.</summary>
      <param name="extractionRectangle">The Rectangle that delimits the ink to extract from the Ink object.</param>
      <returns>Returns an Ink object that contains the extracted Strokes collection.</returns>
    </member>
    <member name="M:Microsoft.Ink.Ink.Clip(System.Drawing.Rectangle)">
      <summary>Removes the portions of a Stroke object or Strokes collection that are outside a given rectangle.</summary>
      <param name="r">The rectangle outside of which the Stroke object or Strokes collection are clipped</param>
    </member>
    <member name="M:Microsoft.Ink.Ink.GetBoundingBox(Microsoft.Ink.BoundingBoxMode)">
      <summary>Returns the bounding Rectangle that contains all of the Stroke objects in the Ink object, by using the specified BoundingBoxMode flag to determine the bounds.</summary>
      <param name="mode">A member of the BoundingBoxMode enumeration, which specifies which characteristics of a stroke, such as drawing attributes, are used to calculate the bounding box of the ink.</param>
      <remarks>
      </remarks>
      <returns>Returns the Rectangle that defines the bounding box of the Strokes collection in the Ink object.</returns>
    </member>
    <member name="M:Microsoft.Ink.Ink.GetBoundingBox">
      <summary>Returns the bounding Rectangle that contains all of the Stroke objects in the Ink object</summary>
      <remarks>
      </remarks>
      <returns>Returns the Rectangle that defines the bounding box of the Strokes collection in the Ink object.</returns>
    </member>
    <member name="M:Microsoft.Ink.Ink.CreateStrokes">
      <summary> Creates a Strokes collection for this Ink object</summary>
      <returns>Returns a new Strokes collection.</returns>
    </member>
    <member name="M:Microsoft.Ink.Ink.CreateStrokes(System.Int32[])">
      <summary>Creates a Strokes collection based on specified Id properties of Stroke objects.</summary>
      <returns>Returns a new Strokes collection.</returns>
      <param name="ids">An array of specified Id properties for Stroke objects that exist in the Ink object</param>
    </member>
    <member name="M:Microsoft.Ink.Ink.AddStrokesAtRectangle(Microsoft.Ink.Strokes,System.Drawing.Rectangle)">
      <summary>Specifies the known Strokes collection to insert into this Ink object at a specified rectangle.</summary>
      <param name="strokes">The Strokes collection to add to the Ink object</param>
      <param name="destinationRectangle">The rectangle where the strokes are added, in ink space coordinates.</param>
    </member>
    <member name="M:Microsoft.Ink.Ink.Load(System.Byte[])">
      <summary>Populates a new Ink object with known binary data.</summary>
      <param name="inkdata">The byte array that contains the ink data.</param>
    </member>
    <member name="M:Microsoft.Ink.Ink.Save(Microsoft.Ink.PersistenceFormat,Microsoft.Ink.CompressionMode)">
      <summary>Converts the Ink object to the specified format, saves it by using the specified compression format, and returns the binary data in a Byte array.</summary>
      <param name="p">A memeber of the PersistenceFormat enumeration that indicates the format of the persisted ink.</param>
      <param name="c">A member of the CompressionMode enumeration that specifies the compression mode of the persisted ink.</param>
      <returns>Returns the Byte array that contains the persisted ink.</returns>
    </member>
    <member name="M:Microsoft.Ink.Ink.Save(Microsoft.Ink.PersistenceFormat)">
      <summary>Converts the Ink object to the specified format, saves it by using the CompressionMode compression mode, and returns the binary data in a Byte array.</summary>
      <param name="p">A memeber of the PersistenceFormat enumeration that indicates the format of the persisted ink.</param>
      <returns>Returns the Byte array that contains the persisted ink.</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Ink.Save">
      <summary> Converts the Ink object to a specified format and returns the binary data in a Byte array.</summary>
      <returns>Returns the Byte array that contains the persisted ink.</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Ink.CreateStroke(System.Drawing.Point[])">
      <summary>      Creates a Stroke object from an array of Point input values.    </summary>
      <param name="points">The array of points that make up the Stroke object.</param>
      <returns>The newly created stroke.</returns>
    </member>
    <member name="M:Microsoft.Ink.Ink.CreateStroke(System.Int32[],Microsoft.Ink.TabletPropertyDescriptionCollection)">
      <summary>      Creates a Stroke object from packet data.    </summary>
      <param name="packetData">The array of packet data used to make up the Stroke object.</param>
      <param name="tabletPropertyDescriptionCollection">The TabletPropertyDescriptionCollection collection that describes what properties are in the CreateStroke array.</param>
      <returns>The newly created stroke.</returns>
    </member>
    <member name="M:Microsoft.Ink.Ink.ClipboardCopy(Microsoft.Ink.InkClipboardFormats,Microsoft.Ink.InkClipboardModes)">
      <summary>Copies the Ink object to the Clipboard.    </summary>
      <param name="formats">A member of the InkClipboardFormats enumeration that specifies the format for the Ink object</param>
      <param name="modes">A member of the InkClipboardModes enumeration that specifies the mode for the Ink object</param>
      <returns>Returns the data object to be created</returns>
      <permission cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard">
      </permission>
    </member>
    <member name="M:Microsoft.Ink.Ink.ClipboardCopy(Microsoft.Ink.Strokes,Microsoft.Ink.InkClipboardFormats,Microsoft.Ink.InkClipboardModes)">
      <summary>Copies a specified Strokes collection to the Clipboard.    </summary>
      <param name="strokes">The Strokes collection to copy.</param>
      <param name="formats">A member of the InkClipboardFormats enumeration that specifies the format for the Ink object</param>
      <param name="modes">A member of the InkClipboardModes enumeration that specifies the mode for the Ink object</param>
      <returns>Returns the data object to be created</returns>
      <permission cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard">
      </permission>
    </member>
    <member name="M:Microsoft.Ink.Ink.ClipboardCopy(System.Drawing.Rectangle,Microsoft.Ink.InkClipboardFormats,Microsoft.Ink.InkClipboardModes)">
      <summary>Copies the Strokes collection contained in the specified rectangle to the Clipboard.    </summary>
      <param name="copyRectangle">The rectangle that contains the Strokes collection to copy to the Clipboard.</param>
      <param name="formats">A member of the InkClipboardFormats enumeration that specifies the format for the Ink object</param>
      <param name="modes">A member of the InkClipboardModes enumeration that specifies the mode for the Ink object</param>
      <returns>Returns the data object to be created</returns>
      <remarks>
      </remarks>
      <permission cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard">
      </permission>
    </member>
    <member name="M:Microsoft.Ink.Ink.CanPaste">
      <summary>Returns a value that indicates whether data (either on the Clipboard, or as an  IDataObject) can be converted to an Ink object</summary>
      <returns>Whether the data can be converted to an Ink object.</returns>
      <permission cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard">
      </permission>
    </member>
    <member name="M:Microsoft.Ink.Ink.CanPaste(System.Object)">
      <summary>Returns a value that indicates whether the IDataObject can be converted to an Ink object.</summary>
      <param name="dataObject">The IDataObject to inspect</param>
      <returns>Whether the data can be converted to an Ink object.</returns>
      <permission cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard">
      </permission>
    </member>
    <member name="M:Microsoft.Ink.Ink.ClipboardPaste">
      <summary> Pastes an IDataObject, either specified or from the Clipboard, to this Ink object</summary>
      <returns>Returns the Strokes collection that is pasted to the Ink object.</returns>
      <remarks>
      </remarks>
      <permission cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard">
      </permission>
    </member>
    <member name="M:Microsoft.Ink.Ink.ClipboardPaste(System.Drawing.Point)">
      <summary>Pastes an IDataObject from the Clipboard to the specified point in this Ink object.</summary>
      <param name="pt">The point to paste to, in ink space coordinates</param>
      <returns>Returns the Strokes collection that is pasted to the Ink object.</returns>
      <permission cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard">
      </permission>
    </member>
    <member name="M:Microsoft.Ink.Ink.ClipboardPaste(System.Drawing.Point,System.Object)">
      <summary>Pastes the specified IDataObject to the specified point in this Ink object.</summary>
      <param name="pt">The point to paste to, in ink space coordinates</param>
      <param name="dataObject">The IDataObject to paste into this Ink object.</param>
      <returns>Returns the Strokes collection that is pasted to the Ink object.</returns>
      <permission cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard">
      </permission>
    </member>
    <member name="E:Microsoft.Ink.Ink.InkAdded">
      <summary>Occurs when a stroke is added to the Ink object</summary>
      <remarks>
      </remarks>
    </member>
    <member name="E:Microsoft.Ink.Ink.InkDeleted">
      <summary>Occurs when a stroke is deleted from the Ink object</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.Ink.Strokes">
      <summary>Gets a copy of the Strokes collection contained in the Ink object.</summary>
    </member>
    <member name="P:Microsoft.Ink.Ink.CustomStrokes">
      <summary>Gets the CustomStrokes collection to be persisted with the ink.    </summary>
    </member>
    <member name="P:Microsoft.Ink.Ink.Dirty">
      <summary>Gets or sets the value that indicates whether an Ink object has been modified since the last time the ink was saved.    </summary>
    </member>
    <member name="P:Microsoft.Ink.Ink.ExtendedProperties">
      <summary>Gets the collection of application-defined data.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:Microsoft.Ink.InkHelperMethods">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.Ink.InkHelperMethods.CoordsToPoints(System.Int32[])">
      <summary>
      </summary>
      <param name="coords">
      </param>
    </member>
    <member name="M:Microsoft.Ink.InkHelperMethods.PointsToCoords(System.Drawing.Point[])">
      <summary>
      </summary>
      <param name="points">
      </param>
    </member>
    <member name="M:Microsoft.Ink.InkHelperMethods.TabletPropertyDescriptionToBytes(Microsoft.Ink.TabletPropertyDescriptionCollection)">
      <summary>
      </summary>
      <param name="tabletPropertyDescriptionCollection">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.Ink.IntSecurity.DemandPermissionToCollectOnWindow(System.IntPtr)">
      <summary>
      </summary>
      <param name="hwnd">
      </param>
    </member>
    <member name="P:Microsoft.Ink.IntSecurity.AddComEventHandler">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.Ink.IntSecurity.AllWindows">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.Ink.IntSecurity.ClipboardRead">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.Ink.IntSecurity.ClipboardWrite">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.Ink.IntSecurity.ControlFromHandleOrLocation">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.Ink.IntSecurity.UnmanagedCode">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.Ink.IntSecurity.MemberAccess">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.Ink.IntSecurity.RemoveComEventHandler">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.Ink.PacketProperty">
      <summary>      Defines values that specify the packet properties.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="F:Microsoft.Ink.PacketProperty.X">
      <summary>The Guid for the PacketProperty object for the x-coordinate in the tablet coordinate space.	</summary>
    </member>
    <member name="F:Microsoft.Ink.PacketProperty.Y">
      <summary>The Guid for the PacketProperty object for the y-coordinate in the tablet coordinate space.	</summary>
    </member>
    <member name="F:Microsoft.Ink.PacketProperty.Z">
      <summary>The Guid  for the PacketProperty object for the z-coordinate or distance of the pen tip from the tablet surface.	</summary>
    </member>
    <member name="F:Microsoft.Ink.PacketProperty.PacketStatus">
      <summary>The Guid for the PacketProperty object for the current status of the cursor</summary>
    </member>
    <member name="F:Microsoft.Ink.PacketProperty.TimerTick">
      <summary>The Guid for the PacketProperty object for the time the packet was generated</summary>
    </member>
    <member name="F:Microsoft.Ink.PacketProperty.SerialNumber">
      <summary>The Guid for the PacketProperty object for identifying the packet.	</summary>
    </member>
    <member name="F:Microsoft.Ink.PacketProperty.NormalPressure">
      <summary>The Guid for the PacketProperty object that represents pressure of the pen tip perpendicular to the tablet surface.	</summary>
    </member>
    <member name="F:Microsoft.Ink.PacketProperty.TangentPressure">
      <summary>The Guid for the PacketProperty object that represents pressure of the pen tip along the plane of the tablet surface.	  </summary>
    </member>
    <member name="F:Microsoft.Ink.PacketProperty.ButtonPressure">
      <summary>The Guid  for the PacketProperty object for pressure on a pressure sensitive button.	</summary>
    </member>
    <member name="F:Microsoft.Ink.PacketProperty.XTiltOrientation">
      <summary>The Guid for the PacketProperty object for the angle between the y,z-plane and the pen and y-axis plane.	</summary>
    </member>
    <member name="F:Microsoft.Ink.PacketProperty.YTiltOrientation">
      <summary>The Guid  for the PacketProperty object for the angle between the x,z-plane and the pen and x-axis plane.	</summary>
    </member>
    <member name="F:Microsoft.Ink.PacketProperty.AzimuthOrientation">
      <summary>The Guid for the PacketProperty object for the clockwise rotation of the cursor about the z-axis through a full circular range.	</summary>
    </member>
    <member name="F:Microsoft.Ink.PacketProperty.AltitudeOrientation">
      <summary>The Guid for the PacketProperty object for the angle between the axis of the pen and the surface of the tablet.	</summary>
    </member>
    <member name="F:Microsoft.Ink.PacketProperty.TwistOrientation">
      <summary>The Guid for the PacketPropertyobject for the clockwise rotation of the cursor about its own axis.	</summary>
    </member>
    <member name="F:Microsoft.Ink.PacketProperty.PitchRotation">
      <summary>The Guid  for the PacketProperty object that indicates whether the tip is above or below a horizontal line that is perpendicular to the writing surface.	</summary>
    </member>
    <member name="F:Microsoft.Ink.PacketProperty.RollRotation">
      <summary>The Guid for the PacketProperty object for the clockwise rotation of the pen around its own axis.	</summary>
    </member>
    <member name="F:Microsoft.Ink.PacketProperty.YawRotation">
      <summary>The Guid for the PacketProperty object for the angle of the pen to the left or right around the center of its horizontal axis when the pen is horizontal.	</summary>
    </member>
    <member name="T:Microsoft.Ink.Renderer">
      <summary>      Represents the management of mappings from ink to the display window</summary>
    </member>
    <member name="F:Microsoft.Ink.Renderer.m_Renderer">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.Ink.Renderer.#ctor(Microsoft.Ink._Internal.IInkRenderer)">
      <summary>
      </summary>
      <param name="inkRenderer">
      </param>
    </member>
    <member name="M:Microsoft.Ink.Renderer.#ctor">
      <summary>Initializes a new instance of the Renderer class.	</summary>
    </member>
    <member name="M:Microsoft.Ink.Renderer.SetViewTransform(System.Drawing.Drawing2D.Matrix)">
      <summary> Sets the Matrix object that represents the view transform that is used to render ink.</summary>
      <param name="viewTransform">The Matrix object that represents the geometric transformation values-rotation, scaling, shear, and reflection-to use to transform the ink from ink space coordinates to logical device context coordinates</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Renderer.SetObjectTransform(System.Drawing.Drawing2D.Matrix)">
      <summary> Sets the Matrix object that represents the object transform that is used to render ink.</summary>
      <param name="objectTransform">The Matrix object that represents the geometric transformation values-rotation, scaling, shear, and reflection-to use to transform the coordinates of the ink, using ink space coordinates</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Renderer.GetViewTransform(System.Drawing.Drawing2D.Matrix@)">
      <summary> Identifies the Matrix object that represents the object transform that was used to render ink.</summary>
      <remarks>
      </remarks>
      <param name="viewTransform">
      </param>
    </member>
    <member name="M:Microsoft.Ink.Renderer.GetObjectTransform(System.Drawing.Drawing2D.Matrix@)">
      <summary> Identifies the Matrix object that represents the object transform that was used to render ink.</summary>
      <remarks>
      </remarks>
      <param name="objectTransform">The Matrix object that represents the geometric transformation values-rotation, scaling, shear, and reflection-to use to transform the stroke coordinates within the ink space</param>
    </member>
    <member name="M:Microsoft.Ink.Renderer.PixelToInkSpace(System.Drawing.Graphics,System.Drawing.Point@)">
      <summary> Converts a location in pixel space coordinates to be a location in ink space coordinates by using a Graphics object for the conversion.    </summary>
      <param name="g">The Graphics object to use for conversion</param>
      <param name="pt">The point to convert into an ink space location</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Renderer.PixelToInkSpace(System.IntPtr,System.Drawing.Point@)">
      <summary> Converts a location in pixel space coordinates to be a location in ink space coordinates by using a handle for the conversion.    </summary>
      <param name="hdc">The handle of the containing control or form</param>
      <param name="pt">The point to convert into an ink space location</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Renderer.InkSpaceToPixel(System.Drawing.Graphics,System.Drawing.Point@)">
      <summary> Converts a location in ink space coordinates to be a location in pixel space by using a Graphics object for the conversion.     </summary>
      <param name="g">The Graphics object to use for conversion</param>
      <param name="pt">The point to convert into a pixel location</param>
    </member>
    <member name="M:Microsoft.Ink.Renderer.InkSpaceToPixel(System.IntPtr,System.Drawing.Point@)">
      <summary> Converts a location in ink space coordinates to be a location in pixel space by using a handle for the conversion.     </summary>
      <param name="hdc">The handle of the containing control or form</param>
      <param name="pt">The point to convert into a pixel location</param>
    </member>
    <member name="M:Microsoft.Ink.Renderer.PixelToInkSpace(System.Drawing.Graphics,System.Drawing.Point[]@)">
      <summary> Converts an array of locations in pixel space coordinates to be an array of locations in ink space coordinates by using a Graphics object for the conversion</summary>
      <param name="g">The Graphics object to use for conversion</param>
      <param name="pts">The array of points to convert into ink space locations</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Renderer.PixelToInkSpace(System.IntPtr,System.Drawing.Point[]@)">
      <summary> Converts an array of locations in pixel space coordinates to be an array of locations in ink space coordinates by using a handle for the conversion</summary>
      <param name="hdc">The handle of the containing control or form</param>
      <param name="pts">The array of points to convert into ink space locations</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Renderer.InkSpaceToPixel(System.Drawing.Graphics,System.Drawing.Point[]@)">
      <summary> Converts an array of locations in ink space coordinates to be in pixel space by using a Graphics object for the conversion</summary>
      <param name="g">The Graphics object to use for conversion</param>
      <param name="pts">The array of points to convert into pixel locations</param>
    </member>
    <member name="M:Microsoft.Ink.Renderer.InkSpaceToPixel(System.IntPtr,System.Drawing.Point[]@)">
      <summary> Converts an array of locations in ink space coordinates to be in pixel space by using a handle for the conversion</summary>
      <param name="hdc">The handle of the containing control or form</param>
      <param name="pts">The array of points to convert into pixel locations</param>
    </member>
    <member name="M:Microsoft.Ink.Renderer.Draw(System.Drawing.Graphics,Microsoft.Ink.Strokes)">
      <summary>Draws the Strokes collection on the specified Graphics surface</summary>
      <param name="g">The Graphics object with which to draw.	</param>
      <param name="strokes">The Strokes collection to draw.	</param>
    </member>
    <member name="M:Microsoft.Ink.Renderer.Draw(System.IntPtr,Microsoft.Ink.Strokes)">
      <summary>Draws the Strokes collection on the device context whose handle is passed in</summary>
      <param name="hdc">The handle of the device context on which to draw</param>
      <param name="strokes">The Strokes collection to draw.	</param>
    </member>
    <member name="M:Microsoft.Ink.Renderer.Draw(System.Drawing.Graphics,Microsoft.Ink.Stroke)">
      <summary>Draws the Stroke object on the specified Graphics surface.	</summary>
      <param name="g">The Graphics object with which to draw.	</param>
      <param name="stroke">The Stroke object to draw.	</param>
    </member>
    <member name="M:Microsoft.Ink.Renderer.Draw(System.Drawing.Graphics,Microsoft.Ink.Stroke,Microsoft.Ink.DrawingAttributes)">
      <summary>Draws the Stroke object, with DrawingAttributes, on the specified Graphics surface</summary>
      <param name="g">The Graphics object with which to draw.	</param>
      <param name="stroke">The Stroke object to draw.	</param>
      <param name="da">The DrawingAttributes property to use for the drawing</param>
    </member>
    <member name="M:Microsoft.Ink.Renderer.Draw(System.IntPtr,Microsoft.Ink.Stroke)">
      <summary>Draws the Stroke object on the device context whose handle is passed in.	</summary>
      <param name="hdc">The handle of the device context on which to draw</param>
      <param name="stroke">The Stroke object to draw.	</param>
    </member>
    <member name="M:Microsoft.Ink.Renderer.Draw(System.IntPtr,Microsoft.Ink.Stroke,Microsoft.Ink.DrawingAttributes)">
      <summary>Draws the Stroke object, with DrawingAttributes, on the device context whose handle is passed in.	</summary>
      <param name="hdc">The handle of the device context on which to draw</param>
      <param name="stroke">The Stroke object to draw.	</param>
      <param name="da">The DrawingAttributes property to use for the drawing</param>
    </member>
    <member name="M:Microsoft.Ink.Renderer.Measure(Microsoft.Ink.Strokes)">
      <summary> Calculates the Rectangle on the device context needed to contain the Strokes collection to be drawn with the Draw method of the Renderer object.</summary>
      <param name="strokes">The Strokes collection to measure</param>
      <remarks>
      </remarks>
      <returns> The Rectangle on the device context needed to contain the &lt;condition type="signature" criteria="sig_Stroke sig_Stroke_DrawingAttributes"&gt;stroke if the stroke&lt;/condition&gt;&lt;condition type="signature" criteria="sig_Strokes"&gt;strokes if the strokes&lt;/condition&gt; were drawn with the Draw method of the Renderer object</returns>
    </member>
    <member name="M:Microsoft.Ink.Renderer.Measure(Microsoft.Ink.Stroke)">
      <summary> Calculates the Rectangle on the device context needed to contain the Stroke object to be drawn with the Draw method of the Renderer object.</summary>
      <param name="stroke">The Stroke object to measure</param>
      <remarks>
      </remarks>
      <returns> The Rectangle on the device context needed to contain the &lt;condition type="signature" criteria="sig_Stroke sig_Stroke_DrawingAttributes"&gt;stroke if the stroke&lt;/condition&gt;&lt;condition type="signature" criteria="sig_Strokes"&gt;strokes if the strokes&lt;/condition&gt; were drawn with the Draw method of the Renderer object</returns>
    </member>
    <member name="M:Microsoft.Ink.Renderer.Measure(Microsoft.Ink.Stroke,Microsoft.Ink.DrawingAttributes)">
      <summary> Calculates the Rectangle on the device context needed to contain the Stroke object to be drawn with the Draw method of the Renderer object by using the specified DrawingAttributes.</summary>
      <param name="stroke">The Stroke object to measure</param>
      <param name="da">The DrawingAttributes to use when calculating the rectangle, which override the DrawingAttributes property of the Stroke object</param>
      <remarks>
      </remarks>
      <returns> The Rectangle on the device context needed to contain the &lt;condition type="signature" criteria="sig_Stroke sig_Stroke_DrawingAttributes"&gt;stroke if the stroke&lt;/condition&gt;&lt;condition type="signature" criteria="sig_Strokes"&gt;strokes if the strokes&lt;/condition&gt; were drawn with the Draw method of the Renderer object</returns>
    </member>
    <member name="M:Microsoft.Ink.Renderer.Move(System.Single,System.Single)">
      <summary> Applies a translation to the GetViewTransform in ink space coordinates.</summary>
      <param name="offsetX">The amount to translate the view transform in the X dimension, in ink space coordinates</param>
      <param name="offsetY">The amount to translate the view transform in the Y dimension, in ink space coordinates</param>
    </member>
    <member name="M:Microsoft.Ink.Renderer.Rotate(System.Single,System.Drawing.Point)">
      <summary> Applies a rotation to the GetViewTransform.</summary>
      <param name="degrees">The degrees by which to rotate clockwise</param>
      <param name="point">The point-in ink space coordinates-around which to rotate</param>
    </member>
    <member name="M:Microsoft.Ink.Renderer.Rotate(System.Single)">
      <summary> Applies a rotation to the GetViewTransform.</summary>
      <param name="degrees">The degrees by which to rotate clockwise</param>
    </member>
    <member name="M:Microsoft.Ink.Renderer.Scale(System.Single,System.Single,System.Boolean)">
      <summary> Scales the GetViewTransform in the X and Y dimensions.</summary>
      <param name="scaleX">The factor to scale the X dimension of the ink in the view transform</param>
      <param name="scaleY">The factor to scale the Y dimension of the ink in the view transform</param>
      <param name="applyOnPenWidth">A value that indicates whether to apply the scale factors to the width of the drawing attributes of the ink in addition to the overall dimensions of the ink</param>
    </member>
    <member name="M:Microsoft.Ink.Renderer.Scale(System.Single,System.Single)">
      <summary> Scales the GetViewTransform in the X and Y dimensions.</summary>
      <param name="scaleX">The factor to scale the X dimension of the ink in the view transform</param>
      <param name="scaleY">The factor to scale the Y dimension of the ink in the view transform</param>
    </member>
    <member name="M:Microsoft.Ink.Renderer.GetFullHdc(System.Drawing.Graphics)">
      <summary>
      </summary>
      <param name="g">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:Microsoft.Ink.Stroke">
      <summary>      Represents a single ink stroke.	  A stroke is a set of properties and point data that the digitizer captures that represent the coordinates and properties of a known ink mark</summary>
    </member>
    <member name="M:Microsoft.Ink.Stroke.GetBoundingBox(Microsoft.Ink.BoundingBoxMode)">
      <summary>Returns the bounding Rectangle that contains the Stroke object, by using the specified BoundingBoxMode flag to determine the bounds.</summary>
      <param name="mode">A member of the BoundingBoxMode enumeration that specifies which characteristics of a Stroke object, such as drawing attributes, are used to calculate the bounding box of the Stroke object.</param>
      <remarks>
      </remarks>
      <returns>Returns the bounding Rectangle that defines the bounding box for the Stroke object.</returns>
    </member>
    <member name="M:Microsoft.Ink.Stroke.GetBoundingBox">
      <summary> Returns the bounding Rectangle that contains the Stroke object.</summary>
      <remarks>
      </remarks>
      <returns>Returns the bounding Rectangle that defines the bounding box for the Stroke object.</returns>
    </member>
    <member name="M:Microsoft.Ink.Stroke.GetFlattenedBezierPoints(System.Int32)">
      <summary> Returns the array of actual points that are used to approximate the Bezier representation of a Stroke object</summary>
      <param name="fittingError">The maximum distance (accuracy), in HIMETRIC units, between the Bezier control points and the points of the Stroke object</param>
      <returns> Returns a Point array that indicates the points that were used to draw the Bezier curve representation of the Stroke object.</returns>
    </member>
    <member name="M:Microsoft.Ink.Stroke.GetFlattenedBezierPoints">
      <summary> Returns the array of actual points that are used to approximate the Bezier representation of a Stroke object</summary>
      <returns> Returns a Point array that indicates the points that were used to draw the Bezier curve representation of the Stroke object.</returns>
    </member>
    <member name="M:Microsoft.Ink.Stroke.GetPoints(System.Int32,System.Int32)">
      <summary>Returns an array of Point structures that make up the Stroke object.</summary>
      <param name="index">The starting zero-based index within the array of Point structures that make up the Stroke object.</param>
      <param name="count">The number of points to return.</param>
      <returns> Returns an array of Point structures that make up the Stroke object.</returns>
    </member>
    <member name="M:Microsoft.Ink.Stroke.GetPoint(System.Int32)">
      <summary>Returns the Point structure at the specified index in a Stroke object.</summary>
      <param name="index">The zero-based index of the Point structure to return.</param>
      <returns> Returns the Point structure at the specified index in the Stroke object.</returns>
    </member>
    <member name="M:Microsoft.Ink.Stroke.GetPoints">
      <summary>Returns an array of Point structures that make up the Stroke object.</summary>
      <returns> Returns an array of Point structures that make up the Stroke object.</returns>
    </member>
    <member name="M:Microsoft.Ink.Stroke.GetPacketDescriptionPropertyMetrics(System.Guid)">
      <summary> Returns the metrics for a given packet description type</summary>
      <param name="id">The Guid from the PacketProperty object, which identifies the property for which to obtain metrics.</param>
      <returns>Returns the metrics for a given packet description type.</returns>
    </member>
    <member name="M:Microsoft.Ink.Stroke.SetPoints(System.Int32,System.Drawing.Point[])">
      <summary> Sets an array of Point structures at the specified indices in a Stroke object.</summary>
      <param name="index">The zero-based index of the first point in the Stroke object to be modified</param>
      <param name="points">The array of new Point values to replace the points in the Stroke object beginning at &lt;condition type="signature" criteria="sig_Int32_PointA"&gt;index&lt;/condition&gt;&lt;condition type="signature" criteria="sig_PointA"&gt;the first point&lt;/condition&gt;</param>
      <returns> Returns the actual number of points set.</returns>
    </member>
    <member name="M:Microsoft.Ink.Stroke.SetPoint(System.Int32,System.Drawing.Point)">
      <summary> Sets the Point structure at the specified index in a Stroke object.</summary>
      <param name="index">The zero-based index of the Point structure to modify</param>
      <param name="point">The new Point value for the point in the Stroke object at index</param>
      <returns> Returns the number of points changed</returns>
    </member>
    <member name="M:Microsoft.Ink.Stroke.SetPoints(System.Drawing.Point[])">
      <summary> Sets an array of Point structures at the specified indices in a Stroke object.</summary>
      <param name="points">The array of new Point values to replace the points in the Stroke object beginning at &lt;condition type="signature" criteria="sig_Int32_PointA"&gt;index&lt;/condition&gt;&lt;condition type="signature" criteria="sig_PointA"&gt;the first point&lt;/condition&gt;</param>
      <returns> Returns the actual number of points set.</returns>
    </member>
    <member name="M:Microsoft.Ink.Stroke.GetPacketData(System.Int32,System.Int32)">
      <summary>Returns the packet data for a range of packets within the Stroke object.    </summary>
      <param name="index">The starting point of the zero-based index to a packet within the stroke.  </param>
      <param name="count">The number of point packet data sets to return, starting with the packet specified in the index parameter.  </param>
      <returns>Returns a signed 32-bit integer array containing the packet data for the requested points in the Stroke object</returns>
    </member>
    <member name="M:Microsoft.Ink.Stroke.GetPacketData(System.Int32)">
      <summary>Returns the packet data for one packet, at a specified index, within the Stroke object.    </summary>
      <param name="index">The starting point of the zero-based index to a packet within the stroke.  </param>
      <returns>Returns a signed 32-bit integer array containing the packet data for the requested points in the Stroke object</returns>
    </member>
    <member name="M:Microsoft.Ink.Stroke.GetPacketData">
      <summary>Returns the packet data associated with one or more points in a Stroke object.    </summary>
      <returns>Returns a signed 32-bit integer array containing the packet data for the requested points in the Stroke object</returns>
    </member>
    <member name="M:Microsoft.Ink.Stroke.GetPacketValuesByProperty(System.Guid,System.Int32,System.Int32)">
      <summary> Returns the data for a known packet property from one or more packets in the Stroke object.</summary>
      <param name="id">The Guid identifier from the PacketProperty object that is used to select which packet data is retrieved.</param>
      <param name="index">The starting point of the zero-based index to a packet within the Stroke object</param>
      <param name="count">The number of points that make up the stroke data</param>
      <returns> Returns an array of signed 32-bit integers that specifies the value of the requested PacketProperty object for each point requested from the Stroke object</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Stroke.GetPacketValuesByProperty(System.Guid,System.Int32)">
      <summary> Returns the data for a known packet property from one or more packets in the Stroke object.</summary>
      <param name="id">The Guid identifier from the PacketProperty object that is used to select which packet data is retrieved.</param>
      <param name="index">The starting point of the zero-based index to a packet within the Stroke object</param>
      <returns> Returns an array of signed 32-bit integers that specifies the value of the requested PacketProperty object for each point requested from the Stroke object</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Stroke.GetPacketValuesByProperty(System.Guid)">
      <summary> Returns the data for a known packet property from one or more packets in the Stroke object.</summary>
      <param name="id">The Guid identifier from the PacketProperty object that is used to select which packet data is retrieved.</param>
      <returns> Returns an array of signed 32-bit integers that specifies the value of the requested PacketProperty object for each point requested from the Stroke object</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Stroke.SetPacketValuesByProperty(System.Guid,System.Int32,System.Int32,System.Int32[])">
      <summary> Sets the packet values for a particular PacketProperty object within this Stroke object</summary>
      <param name="id">The Guid identifier from the PacketProperty object that is used to select which packet data is set</param>
      <param name="index">The starting index of the packet to be modified</param>
      <param name="count">The number of packets in the stroke to modify and the number of values in packetValues</param>
      <param name="packetValues">The array of packet data values</param>
      <returns> Returns the actual number of packets set</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Stroke.SetPacketValuesByProperty(System.Guid,System.Int32,System.Int32[])">
      <summary> Sets the packet values for a particular PacketProperty object within this Stroke object</summary>
      <param name="id">The Guid identifier from the PacketProperty object that is used to select which packet data is set</param>
      <param name="index">The starting index of the packet to be modified</param>
      <param name="packetValues">The array of packet data values</param>
      <returns> Returns the actual number of packets set</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Stroke.SetPacketValuesByProperty(System.Guid,System.Int32[])">
      <summary> Sets the packet values for a particular PacketProperty object within this Stroke object</summary>
      <param name="id">The Guid identifier from the PacketProperty object that is used to select which packet data is set</param>
      <param name="packetValues">The array of packet data values</param>
      <returns> Returns the actual number of packets set</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Stroke.GetRectangleIntersections(System.Drawing.Rectangle)">
      <summary>Returns an array of Point structures that indicate where a Stroke object intersects a given Rectangle.</summary>
      <param name="intersectRectangle">The Rectangle structure, in ink space coordinates, that describes the hit test area</param>
      <returns> Returns an array of Point structures that indicate where a Stroke object intersects the intersectRectangle parameter</returns>
    </member>
    <member name="M:Microsoft.Ink.Stroke.FindIntersections(Microsoft.Ink.Strokes)">
      <summary>Finds the points where this Stroke object intersects other Stroke objects within a given Strokes collection</summary>
      <param name="strokes"> The Strokes collection used to test for intersections with this Stroke object</param>
      <returns> This method returns an array of floating point index values that indicate the locations where the intersections occur</returns>
    </member>
    <member name="M:Microsoft.Ink.Stroke.HitTest(System.Drawing.Point,System.Single)">
      <summary> Returns a value that indicates whether a Stroke object is either completely inside or intersected by a given circle.</summary>
      <param name="pt">The center of the hit test circle, in ink space coordinates</param>
      <param name="radius">The radius of the hit test circle</param>
      <returns>Whether a Stroke object is either completely inside or intersected by a given circle.</returns>
    </member>
    <member name="M:Microsoft.Ink.Stroke.NearestPoint(System.Drawing.Point,System.Single@)">
      <summary>Returns the location on the Stroke object nearest to a specified Point and the distance between the point and the Stroke object.</summary>
      <param name="pt">The specified point, in ink space coordinates</param>
      <param name="distance">The distance from the point to the Stroke object, as a floating point index</param>
      <returns>Returns the location on the Stroke object nearest to a specified Point.</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Stroke.NearestPoint(System.Drawing.Point)">
      <summary>Returns the location on the Stroke object nearest to a specified Point.</summary>
      <param name="pt">The specified point, in ink space coordinates</param>
      <returns>Returns the location on the Stroke object nearest to a specified Point.</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Stroke.Split(System.Single)">
      <summary>Splits the Stroke object at the specified location on the Stroke object and returns the new Stroke object</summary>
      <param name="findex">The floating point index value that represents where to split the Stroke object</param>
      <remarks>
      </remarks>
      <returns>The new Stroke object that is created as a result of calling this method</returns>
    </member>
    <member name="M:Microsoft.Ink.Stroke.Clip(System.Drawing.Rectangle)">
      <summary> Removes the portions of the Stroke object that are outside a given rectangle</summary>
      <param name="r"> The rectangle outside of which each Stroke object is clipped.</param>
    </member>
    <member name="M:Microsoft.Ink.Stroke.Transform(System.Drawing.Drawing2D.Matrix,System.Boolean)">
      <summary> Applies a linear transformation to a Stroke, object</summary>
      <param name="inkTransform">The Matrix transform to use on the Stroke object</param>
      <param name="applyOnPenWidth">The Boolean value that indicates whether to apply the transform to the width of the ink in the DrawingAttributes of the Stroke object.</param>
    </member>
    <member name="M:Microsoft.Ink.Stroke.Transform(System.Drawing.Drawing2D.Matrix)">
      <summary> Applies a linear transformation to a Stroke, object</summary>
      <param name="inkTransform">The Matrix transform to use on the Stroke object</param>
    </member>
    <member name="M:Microsoft.Ink.Stroke.ScaleToRectangle(System.Drawing.Rectangle)">
      <summary>  Scales the Stroke object to fit in the specified Rectangle structure</summary>
      <param name="scaleRectangle">The Rectangle structure, in ink space coordinates, to which the Stroke object is scaled</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Stroke.Move(System.Single,System.Single)">
      <summary>Applies a translation to the ink of the Stroke object.</summary>
      <param name="offsetX">The distance to translate the view transform in the X dimension, in HIMETRIC units, in ink space coordinates</param>
      <param name="offsetY">The distance to translate the view transform in the Y dimension, in HIMETRIC units, in ink space coordinates</param>
    </member>
    <member name="M:Microsoft.Ink.Stroke.Rotate(System.Single,System.Drawing.Point)">
      <summary> Rotates the Stroke object around a center point</summary>
      <param name="degrees">The degrees by which to rotate clockwise</param>
      <param name="point">The point-in ink space coordinates-around which to rotate</param>
    </member>
    <member name="M:Microsoft.Ink.Stroke.Scale(System.Single,System.Single)">
      <summary> Scales the Stroke object in the X and Y dimensions</summary>
      <param name="scaleX">The factor to scale the X dimension of the view transform</param>
      <param name="scaleY">The factor to scale the Y dimension of the view transform</param>
    </member>
    <member name="M:Microsoft.Ink.Stroke.Shear(System.Single,System.Single)">
      <summary>Shears the Stroke object by the specified horizontal and vertical factors.    </summary>
      <param name="shearX">The horizontal factor of the shear.    </param>
      <param name="shearY">The vertical factor of the shear.    </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.Stroke.Id">
      <summary>Gets the identifier of the Stroke object.</summary>
    </member>
    <member name="P:Microsoft.Ink.Stroke.Deleted">
      <summary>Gets a value that indicates whether the Stroke object has been deleted from its parent Ink object.    </summary>
    </member>
    <member name="P:Microsoft.Ink.Stroke.PolylineCusps">
      <summary>      Gets an array that contains the indices of the cusps of the Stroke object</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.Stroke.BezierCusps">
      <summary>Gets an array that contains the indices of the cusps of the Bezier approximation of the Stroke object.	</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.Stroke.BezierPoints">
      <summary>Gets the array of control points that represent the Bezier approximation of the stroke</summary>
    </member>
    <member name="P:Microsoft.Ink.Stroke.SelfIntersections">
      <summary>Gets the self-intersections of the Stroke object.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.Stroke.PacketCount">
      <summary>Gets the number of packet received for a Stroke object.</summary>
    </member>
    <member name="P:Microsoft.Ink.Stroke.PacketSize">
      <summary>Gets the size, in bytes, of a packet.    </summary>
    </member>
    <member name="P:Microsoft.Ink.Stroke.PacketDescription">
      <summary>Gets an array of type Guid that describes the types of packet data stored in the Stroke object.    </summary>
    </member>
    <member name="P:Microsoft.Ink.Stroke.DrawingAttributes">
      <summary>Gets or sets the drawing attributes to apply to ink as it is drawn</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.Stroke.Ink">
      <summary>      Gets the parent Ink object of the Stroke object.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.Stroke.ExtendedProperties">
      <summary>Gets the collection of application-defined data.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:Microsoft.Ink.StrokeIntersection">
      <summary> Represents the floating point index values where an intersection begins and ends on a stroke.    </summary>
    </member>
    <member name="M:Microsoft.Ink.StrokeIntersection.#ctor(System.Single,System.Single)">
      <summary> Creates a StrokeIntersection structure from the start and end indices.    </summary>
      <param name="beginIndex"> [in] The start of the stroke intersection as a floating point index</param>
      <param name="endIndex"> [in] The end the stroke intersection as a floating point index</param>
    </member>
    <member name="P:Microsoft.Ink.StrokeIntersection.BeginIndex">
      <summary> Gets or sets the beginning point of the StrokeIntersection.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.StrokeIntersection.EndIndex">
      <summary> Gets or sets the ending point of the StrokeIntersection.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:Microsoft.Ink.StrokesEventHandler">
      <summary>Represents the method that handles stroke adding and removing events of the Ink object, InkOverlay object, InkPicture object, and Strokes collection.</summary>
      <param name="sender">[in] Specifies the source Ink object or Strokes collection of this event.</param>
      <param name="e">[in] Specifies the StrokesEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.StrokesEventArgs">
      <summary>      Provides data for StrokesAdded and StrokesRemoved events.    </summary>
    </member>
    <member name="M:Microsoft.Ink.StrokesEventArgs.#ctor(System.Int32[])">
      <summary>Initializes a new instance of the StrokesEventArgs class</summary>
      <remarks>
      </remarks>
      <param name="ids">The integer array of Id properties for all of the Stroke objects that changed.</param>
    </member>
    <member name="P:Microsoft.Ink.StrokesEventArgs.StrokeIds">
      <value>      Gets an array of identifiers, of type Int32, for every Stroke object affected by the event.    </value>
    </member>
    <member name="T:Microsoft.Ink.Strokes">
      <summary>      Contains the collection of Stroke objects.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Strokes.#ctor">
    </member>
    <member name="M:Microsoft.Ink.Strokes.Dispose">
      <summary>Releases resources used by the Strokes collection.		</summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Strokes.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the Strokes collection and optionally releases the managed resources.		</summary>
      <remarks>
      </remarks>
      <param name="disposing">Set to true to release both managed and unmanaged resources; false to release only unmanaged resources.		</param>
    </member>
    <member name="M:Microsoft.Ink.Strokes.Finalize">
      <summary>Frees the resources of the current Strokes object before it is reclaimed by the garbage collector.		</summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Strokes.Clear">
      <summary> Clears all the Stroke objects from the Strokes collection</summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Strokes.IndexOf(Microsoft.Ink.Stroke)">
      <summary> Returns the index of a specific Stroke object within a Strokes collection.</summary>
      <remarks>
      </remarks>
      <param name="s">The Stroke object to check for</param>
      <returns>Returns the index of the Stroke within the Strokes collection</returns>
    </member>
    <member name="M:Microsoft.Ink.Strokes.Contains(Microsoft.Ink.Stroke)">
      <summary>Indicates whether the Strokes collection contains a specific Stroke object.</summary>
      <remarks>
      </remarks>
      <param name="s">The Stroke object to check for.</param>
      <returns>Whether the Strokes collection contains a specific Stroke object.</returns>
    </member>
    <member name="M:Microsoft.Ink.Strokes.Add(Microsoft.Ink.Stroke)">
      <summary> Adds a Stroke object to the Strokes collection</summary>
      <param name="stroke">The Stroke to add to the Strokes collection.    </param>
      <returns>This method always returns a value of -1</returns>
    </member>
    <member name="M:Microsoft.Ink.Strokes.Add(Microsoft.Ink.Strokes)">
      <summary>
      </summary>
      <param name="strokes">
      </param>
    </member>
    <member name="M:Microsoft.Ink.Strokes.Remove(Microsoft.Ink.Stroke)">
      <summary>Removes a Stroke object from the Strokes collection</summary>
      <param name="stroke">The Stroke object to remove</param>
    </member>
    <member name="M:Microsoft.Ink.Strokes.Remove(Microsoft.Ink.Strokes)">
      <summary>
      </summary>
      <param name="strokes">
      </param>
    </member>
    <member name="M:Microsoft.Ink.Strokes.RemoveAt(System.Int32)">
      <summary>Removes the Stroke object at the specified index of the Strokes collection</summary>
      <param name="i">The index of the Stroke object to remove from the collection</param>
    </member>
    <member name="M:Microsoft.Ink.Strokes.CopyTo(System.Array,System.Int32)">
      <summary>Copies all of the elements of the current Strokes collection to the specified one-dimensional array, starting at the specified destination array index.</summary>
      <param name="array">The one-dimensional array that is the destination of elements copied from the collection</param>
      <param name="index">The zero-based index in the array parameter at which copying begins.</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Strokes.ModifyDrawingAttributes(Microsoft.Ink.DrawingAttributes)">
      <value>Sets the DrawingAttributes property of all of the Stroke objects in Strokes collection.</value>
      <param name="da">The new DrawingAttributes object assigned to all of the Stroke objects in the Strokes collection</param>
    </member>
    <member name="M:Microsoft.Ink.Strokes.GetBoundingBox(Microsoft.Ink.BoundingBoxMode)">
      <summary>Returns the bounding Rectangle that contains the Stroke object, by using the specified BoundingBoxMode flag to determine the bounds.</summary>
      <param name="mode">A member of the BoundingBoxMode enumeration that specifies which characteristics of a Strokes collection, such as drawing attributes, are used to calculate the bounding box of the Strokes collection.</param>
      <remarks>
      </remarks>
      <returns>Returns the bounding Rectangle that defines the bounding box for the Strokes collection.</returns>
    </member>
    <member name="M:Microsoft.Ink.Strokes.GetBoundingBox">
      <summary> Returns the bounding Rectangle that contains the Strokes collection.</summary>
      <remarks>
      </remarks>
      <returns>Returns the bounding Rectangle that defines the bounding box for the Strokes collection.</returns>
    </member>
    <member name="M:Microsoft.Ink.Strokes.ToString">
      <summary>Deprecated</summary>
      <returns>Returns a string that represents the top RecognitionResult object for the current Strokes collection.	</returns>
    </member>
    <member name="M:Microsoft.Ink.Strokes.RemoveRecognitionResult">
      <summary>      Removes the RecognitionResult object that is associated with the Strokes collection.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Strokes.Transform(System.Drawing.Drawing2D.Matrix,System.Boolean)">
      <summary>Applies a linear transformation to a Strokes collection.</summary>
      <param name="inkTransform">The Matrix transform to use on the Strokes collection</param>
      <param name="applyOnPenWidth">The Boolean value that indicates whether to apply the transform to the width of the ink in the DrawingAttributes of the Stroke objects in the Strokes collection.</param>
    </member>
    <member name="M:Microsoft.Ink.Strokes.Clip(System.Drawing.Rectangle)">
      <summary> Removes the portions of every Stroke object in the Strokes collection that are outside a given rectangle</summary>
      <param name="r"> The rectangle outside of which each Stroke object in the collection is clipped.</param>
    </member>
    <member name="M:Microsoft.Ink.Strokes.Transform(System.Drawing.Drawing2D.Matrix)">
      <summary>Applies a linear transformation to a Strokes collection.</summary>
      <param name="inkTransform">The Matrix transform to use on the Strokes collection</param>
    </member>
    <member name="M:Microsoft.Ink.Strokes.ScaleToRectangle(System.Drawing.Rectangle)">
      <summary>Scales the Strokes collection to fit in the specified Rectangle structure</summary>
      <param name="scaleRectangle">The Rectangle structure, in ink space coordinates, to which the Strokes collection is scaled</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Strokes.Move(System.Single,System.Single)">
      <summary>Applies a translation to the ink of the Strokes collection.</summary>
      <param name="offsetX">The distance to translate the view transform in the X dimension, in HIMETRIC units and in ink space coordinates</param>
      <param name="offsetY">The distance to translate the view transform in the Y dimension, in HIMETRIC units and in ink space coordinates.</param>
    </member>
    <member name="M:Microsoft.Ink.Strokes.Rotate(System.Single,System.Drawing.Point)">
      <summary> Rotates the Strokes collection around a center point.</summary>
      <param name="degrees">The degrees by which to rotate clockwise</param>
      <param name="point">The point-in ink space coordinates-around which to rotate</param>
    </member>
    <member name="M:Microsoft.Ink.Strokes.Scale(System.Single,System.Single)">
      <summary> Scales the Strokes collection in the X and Y dimensions</summary>
      <param name="scaleX">The factor to scale the X dimension of the view transform.</param>
      <param name="scaleY">The factor to scale the Y dimension of the view transform.</param>
    </member>
    <member name="M:Microsoft.Ink.Strokes.Shear(System.Single,System.Single)">
      <summary>Shears the Strokes collection by the specified horizontal and vertical factors.    </summary>
      <param name="shearX">The horizontal factor of the shear.    </param>
      <param name="shearY">The vertical factor of the shear.    </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Strokes.GetEnumerator">
      <summary> Returns an object that implements the IEnumerator interface and that can iterate through the Stroke objects within the Strokes collection.    </summary>
      <returns> Returns an object that implements the IEnumerator interface and that can iterate through the Stroke objects within the Strokes collection.    </returns>
    </member>
    <member name="M:Microsoft.Ink.Strokes.System#Collections#IEnumerable#GetEnumerator">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="E:Microsoft.Ink.Strokes.StrokesAdded">
      <summary>Occurs when one or more strokes are added to the Strokes collection.</summary>
    </member>
    <member name="E:Microsoft.Ink.Strokes.StrokesRemoved">
      <summary>Occurs when one or more strokes are deleted from the Strokes collection.</summary>
    </member>
    <member name="P:Microsoft.Ink.Strokes.Count">
      <value>      Gets the number of Stroke objects contained in the Strokes collection.    </value>
    </member>
    <member name="P:Microsoft.Ink.Strokes.IsFixedSize">
      <value>Gets a value indicating whether the Strokes collection has a fixed size.</value>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.Strokes.IsSynchronized">
      <value>      Gets a value that indicates whether or not access to the Strokes collection is synchronized (thread safe).    </value>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.Strokes.SyncRoot">
      <value>Returns an object that can be used to synchronize access to the Strokes collection.</value>
    </member>
    <member name="P:Microsoft.Ink.Strokes.IsReadOnly">
      <value>Gets a value indicating whether the Strokes collection is read-only.</value>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.Strokes.Item(System.Int32)">
      <summary>
      </summary>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.Ink.Strokes.Ink">
      <value>Gets the Ink object that contains the Strokes collection.    </value>
    </member>
    <member name="P:Microsoft.Ink.Strokes.RecognitionResult">
      <summary>Gets the RecognitionResult object of the Strokes collection.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:Microsoft.Ink.Strokes.StrokesEnumerator">
      <summary>      An implementation of the IEnumerator interface that supports iterating over a Strokes collection.    </summary>
    </member>
    <member name="M:Microsoft.Ink.Strokes.StrokesEnumerator.#ctor(Microsoft.Ink.Strokes)">
      <summary>Initializes a new instance of the StrokesEnumerator class.    </summary>
      <param name="s">The Strokes collection that this enumerator iterates over.    </param>
    </member>
    <member name="M:Microsoft.Ink.Strokes.StrokesEnumerator.MoveNext">
      <summary>Moves the enumerator index to the next object in the collection.		</summary>
      <returns>Set to true if the index position references an object; false if the index position references the end of the collection.		</returns>
    </member>
    <member name="M:Microsoft.Ink.Strokes.StrokesEnumerator.Reset">
      <summary>Resets the enumerator index to the beginning of the Strokes collection.		</summary>
    </member>
    <member name="P:Microsoft.Ink.Strokes.StrokesEnumerator.System#Collections#IEnumerator#Current">
      <value>
      </value>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.Ink.Strokes.StrokesEnumerator.Current">
      <value>Gets the Stroke object in the Strokes collection to which the enumerator is pointing.    </value>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.Ink.TabletHardwareCapabilities">
      <summary>      Defines values that specify the hardware capabilities of a Tablet PC.      This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.</summary>
    </member>
    <member name="F:Microsoft.Ink.TabletHardwareCapabilities.Integrated">
      <summary>      Indicates the digitizer is integrated with the display.    </summary>
    </member>
    <member name="F:Microsoft.Ink.TabletHardwareCapabilities.CursorMustTouch">
      <summary>      Indicates the cursor must be in physical contact with the device to report position.    </summary>
    </member>
    <member name="F:Microsoft.Ink.TabletHardwareCapabilities.HardProximity">
      <summary>      Indicates the device can generate in-air packets when the cursor is in the physical detection range (proximity) of the device.    </summary>
    </member>
    <member name="F:Microsoft.Ink.TabletHardwareCapabilities.CursorsHavePhysicalIds">
      <summary>      Indicates the device can uniquely identify the active cursor.    </summary>
    </member>
    <member name="T:Microsoft.Ink.TabletPropertyMetricUnit">
      <summary>      Defines values that indicate the unit of measurement of a property.    </summary>
    </member>
    <member name="F:Microsoft.Ink.TabletPropertyMetricUnit.Default">
      <summary>      Specifies the units are unknown.    </summary>
    </member>
    <member name="F:Microsoft.Ink.TabletPropertyMetricUnit.Inches">
      <summary>      Specifies the property value is in inches (distance units).    </summary>
    </member>
    <member name="F:Microsoft.Ink.TabletPropertyMetricUnit.Centimeters">
      <summary>      Specifies the property value is in centimeters (distance units).    </summary>
    </member>
    <member name="F:Microsoft.Ink.TabletPropertyMetricUnit.Degrees">
      <summary>      Specifies the property value is in degrees (angle units).    </summary>
    </member>
    <member name="F:Microsoft.Ink.TabletPropertyMetricUnit.Radians">
      <summary>      Specifies the property value is in radians (angle units).    </summary>
    </member>
    <member name="F:Microsoft.Ink.TabletPropertyMetricUnit.Seconds">
      <summary>      Specifies the property value is in seconds (angle units).    </summary>
    </member>
    <member name="F:Microsoft.Ink.TabletPropertyMetricUnit.Pounds">
      <summary>      Specifies the property value is in pounds (force, or mass, units).    </summary>
    </member>
    <member name="F:Microsoft.Ink.TabletPropertyMetricUnit.Grams">
      <summary>      Specifies the property value is in grams (force, or mass, units).    </summary>
    </member>
    <member name="T:Microsoft.Ink.TabletPropertyMetrics">
      <summary> Defines the range and resolution of a packet property.    </summary>
    </member>
    <member name="F:Microsoft.Ink.TabletPropertyMetrics.Minimum">
      <summary> The minimum value, in logical units, that the tablet reports for this property</summary>
    </member>
    <member name="F:Microsoft.Ink.TabletPropertyMetrics.Maximum">
      <summary> The maximum value, in logical units, that the tablet reports for this property.    </summary>
    </member>
    <member name="F:Microsoft.Ink.TabletPropertyMetrics.Units">
      <summary> The physical units of the property, such as inches or degrees</summary>
    </member>
    <member name="F:Microsoft.Ink.TabletPropertyMetrics.Resolution">
      <summary> The resolution or increment value for the Units member</summary>
    </member>
    <member name="T:Microsoft.Ink.TabletPropertyDescription">
      <summary>Describes a PacketProperty that is reported by the digitizer.    </summary>
    </member>
    <member name="M:Microsoft.Ink.TabletPropertyDescription.#ctor(System.Guid,Microsoft.Ink.TabletPropertyMetrics)">
      <summary>Initializes a new instance of the TabletPropertyDescription class.    </summary>
      <param name="packetPropertyId">
      </param>
      <param name="tabletPropertyMetrics">The TabletPropertyMetrics property of the TabletPropertyDescription object, defined by the tablet device.    </param>
    </member>
    <member name="P:Microsoft.Ink.TabletPropertyDescription.PacketPropertyId">
      <summary>Gets the identifier for the TabletPropertyDescription object.    </summary>
    </member>
    <member name="P:Microsoft.Ink.TabletPropertyDescription.TabletPropertyMetrics">
      <summary>Gets the metrics for this packet property.    </summary>
    </member>
    <member name="T:Microsoft.Ink.TabletPropertyDescriptionCollection">
      <summary>      Contains an ordered collection of TabletPropertyDescription objects.    </summary>
    </member>
    <member name="M:Microsoft.Ink.TabletPropertyDescriptionCollection.#ctor">
      <summary>Initializes a new instance of the TabletPropertyDescriptionCollection collection.</summary>
    </member>
    <member name="M:Microsoft.Ink.TabletPropertyDescriptionCollection.#ctor(System.Single,System.Single)">
      <summary>Initializes a new instance of the TabletPropertyDescriptionCollection collection that uses the specified conversion factors for ink space to digitizer coordinates.</summary>
      <param name="inkToDeviceScaleX">The horizontal, or x-axis, conversion factor.    </param>
      <param name="inkToDeviceScaleY">The vertical, or y-axis, conversion factor.    </param>
    </member>
    <member name="M:Microsoft.Ink.TabletPropertyDescriptionCollection.Add(Microsoft.Ink.TabletPropertyDescription)">
      <summary>Adds a TabletPropertyDescription object to the end of the TabletPropertyDescriptionCollection collection.    </summary>
      <param name="value">      The TabletPropertyDescription object to add to the end of the TabletPropertyDescriptionCollection collection.    </param>
      <returns>      The zero-based index of the TabletPropertyDescription object within the TabletPropertyDescriptionCollection collection.    </returns>
    </member>
    <member name="M:Microsoft.Ink.TabletPropertyDescriptionCollection.Remove(Microsoft.Ink.TabletPropertyDescription)">
      <summary>Removes a specified TabletPropertyDescription object from the TabletPropertyDescriptionCollection collection.    </summary>
      <param name="value">The TabletPropertyDescription object to remove.    </param>
    </member>
    <member name="P:Microsoft.Ink.TabletPropertyDescriptionCollection.InkToDeviceScaleX">
      <summary>Gets the conversion factor for the horizontal axis from ink space to digitizer coordinates.    </summary>
    </member>
    <member name="P:Microsoft.Ink.TabletPropertyDescriptionCollection.InkToDeviceScaleY">
      <summary>Gets the conversion factor for the vertical axis from ink space to digitizer coordinates.    </summary>
    </member>
    <member name="P:Microsoft.Ink.TabletPropertyDescriptionCollection.Item(System.Int32)">
      <summary>
      </summary>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.Ink.Tablet">
      <summary>Represents the digitizer device of Tablet PC that receives tablet device messages or events.    </summary>
    </member>
    <member name="M:Microsoft.Ink.Tablet.ToString">
      <summary>Returns a string that represents the current Tablet object.</summary>
      <returns>Returns a string that represents the current Tablet object</returns>
    </member>
    <member name="M:Microsoft.Ink.Tablet.IsPacketPropertySupported(System.Guid)">
      <summary>Returns a value that indicates whether a PacketProperty field, identified with a globally unique identifier (GUID), is supported by this Tablet object.    </summary>
      <param name="id">
      </param>
      <returns>Returns a value that indicates whether a PacketProperty field, identified with a globally unique identifier (GUID), is supported by this Tablet object.</returns>
    </member>
    <member name="M:Microsoft.Ink.Tablet.GetPropertyMetrics(System.Guid)">
      <summary>Returns the metrics data for a known PacketProperty object.</summary>
      <param name="id">The Guid identifier for the PacketProperty that you are requesting.</param>
      <returns> This method returns a TabletPropertyMetrics object for the requested property that is supported by the tablet</returns>
    </member>
    <member name="P:Microsoft.Ink.Tablet.Name">
      <summary>Gets the name of the Tablet object.    </summary>
    </member>
    <member name="P:Microsoft.Ink.Tablet.PlugAndPlayId">
      <summary>Gets a string representation of the Plug and Play identifier of the Tablet object.    </summary>
    </member>
    <member name="P:Microsoft.Ink.Tablet.MaximumInputRectangle">
      <summary>Gets the maximum input rectangle, in tablet device coordinates, that the Tablet object supports.    </summary>
    </member>
    <member name="P:Microsoft.Ink.Tablet.HardwareCapabilities">
      <summary>Gets a value from the TabletHardwareCapabilities enumeration that defines the hardware capabilities of the Tablet object.    </summary>
    </member>
    <member name="T:Microsoft.Ink.Tablets">
      <summary>      Contains the Tablet objects that represent the hardware-specific properties of all tablets that are attached to the system.    </summary>
    </member>
    <member name="M:Microsoft.Ink.Tablets.#ctor">
      <summary>Initializes a new instance of the Tablets class</summary>
    </member>
    <member name="M:Microsoft.Ink.Tablets.CopyTo(System.Array,System.Int32)">
      <summary>Copies all of the elements of the current Tablets collection to the specified one-dimensional array, starting at the specified destination array index.</summary>
      <param name="array">The one-dimensional array that is the destination of elements copied from the collection</param>
      <param name="index">The zero-based index in the array parameter at which copying begins.</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Tablets.IsPacketPropertySupported(System.Guid)">
      <summary>Returns a value that indicates whether a PacketProperty field, identified with a globally unique identifier (GUID), is supported by all Tablet objects in this Tablets collection.    </summary>
      <returns>Returns a value that indicates whether a PacketProperty field, identified with a globally unique identifier (GUID), is supported by all Tablet objects in this Tablets collection.</returns>
      <param name="g">The Guid identifier for the requested PacketProperty field.</param>
    </member>
    <member name="M:Microsoft.Ink.Tablets.GetEnumerator">
      <summary> Returns an object that implements the IEnumerator interface and that can iterate through the Tablet objects within the Tablets collection.    </summary>
      <returns> Returns an object that implements the IEnumerator interface and that can iterate through the Tablet objects within the Tablets collection.    </returns>
    </member>
    <member name="M:Microsoft.Ink.Tablets.System#Collections#IEnumerable#GetEnumerator">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.Ink.Tablets.SyncRoot">
      <value>Returns an object that can be used to synchronize access to the Tablets collection.</value>
    </member>
    <member name="P:Microsoft.Ink.Tablets.Count">
      <value>Gets the number of Tablet objects contained in the Tablets collection.</value>
    </member>
    <member name="P:Microsoft.Ink.Tablets.IsSynchronized">
      <value>Gets a value that indicates whether or not access to the Tablets collection is synchronized (thread safe).</value>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.Tablets.Item(System.Int32)">
      <summary>
      </summary>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.Ink.Tablets.DefaultTablet">
      <summary>Gets the default Tablet object of the Tablets collection.</summary>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.Ink.Tablets.TabletsEnumerator">
      <summary>      An implementation of the IEnumerator interface that supports iterating over a Tablets collection.    </summary>
    </member>
    <member name="M:Microsoft.Ink.Tablets.TabletsEnumerator.#ctor(Microsoft.Ink.Tablets)">
      <summary>Initializes a new instance of the TabletsEnumerator class.</summary>
      <param name="t">The Tablets collection that this enumerator iterates over.</param>
    </member>
    <member name="M:Microsoft.Ink.Tablets.TabletsEnumerator.MoveNext">
      <summary>Moves the enumerator index to the next object in the collection.		</summary>
      <returns>Set to true if the index position references an object; false if the index position references the end of the collection.		</returns>
    </member>
    <member name="M:Microsoft.Ink.Tablets.TabletsEnumerator.Reset">
      <summary>Resets the enumerator index to the beginning of the Tablets collection.		</summary>
    </member>
    <member name="P:Microsoft.Ink.Tablets.TabletsEnumerator.System#Collections#IEnumerator#Current">
      <value>
      </value>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.Ink.Tablets.TabletsEnumerator.Current">
      <value>Gets the Tablet object in the Tablets collection to which the enumerator is pointing.    </value>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.Ink.Factoid">
      <summary>      This class contains the pre-defined factoid identifiers</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.None">
      <summary> A constant string value that is used to increase recognition accuracy by not using any recognizer context.	</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.Default">
      <summary> The Default setting for factoids for western languages includes the system dictionary, user dictionary, various punctuations, and the Web and Number factoid</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.SystemDictionary">
      <summary> A constant string value that is used to increase recognition accuracy by only using the system dictionary.	</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.WordList">
      <summary> A constant string value that is used to increase recognition accuracy by having the recognizer use a programmatically-defined list of words</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.Email">
      <summary> A constant string value that is used to increase recognition accuracy by providing an e-mail context to a recognizer.	</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.Web">
      <summary> A constant string value that is used to increase recognition accuracy by providing a web address context to a recognizer.	</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.OneChar">
      <summary> A constant string value that is used to increase recognition accuracy by providing a single character context to a recognizer.	</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.Number">
      <summary> A constant string value that is used to increase recognition accuracy by providing a numeric context to a recognizer.	</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.Digit">
      <summary> A constant string value that is used to increase recognition accuracy by providing a digit context to a recognizer. </summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.NumberSimple">
      <summary> A constant string value that is used to increase recognition accuracy by providing a simple numeric context to a recognizer.	</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.Currency">
      <summary> A constant string value that is used to increase recognition accuracy by providing a context of currency to a recognizer.	</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.PostalCode">
      <summary> A constant string value that is used to increase recognition accuracy by providing a postal code context to a recognizer.	</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.Percent">
      <summary> A constant string value that is used to increase recognition accuracy by providing a percent context to a recognizer.	</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.Date">
      <summary> A constant string value that is used to increase recognition accuracy by providing a date context to a recognizer.	</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.Time">
      <summary> A constant string value that is used to increase recognition accuracy by providing a time context to a recognizer.	</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.Telephone">
      <summary> A constant string value that is used to increase recognition accuracy by providing a telephone number context to a recognizer.	</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.Filename">
      <summary> A constant string value that is used to increase recognition accuracy by providing a file name context to a recognizer.	</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.UpperChar">
      <summary> A constant string value that is used to increase recognition accuracy by providing an uppercase character context to a recognizer.	</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.LowerChar">
      <summary> A constant string value that is used to increase recognition accuracy by providing a lowercase character context to a recognizer</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.PuncChar">
      <summary> A constant string value that is used to increase recognition accuracy by providing a punctuation context to a recognizer.	</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.JapaneseCommon">
      <summary> A constant string value that is used to increase recognition accuracy by providing a context of commonly used Kanji, Katakana, and Hiragana characters to a recognizer.	</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.ChineseSimpleCommon">
      <summary> A constant string value that is used to increase recognition accuracy by providing a context of commonly used Simplified Chinese characters to a recognizer</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.ChineseTraditionalCommon">
      <summary> A constant string value that is used to increase recognition accuracy by providing a context of commonly used Traditional Chinese characters to a recognizer</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.KoreanCommon">
      <summary> A constant string value that is used to increase recognition accuracy by providing a context of commonly used Korean characters to a recognizer.	</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.Hiragana">
      <summary> A constant string value that is used to increase recognition accuracy by providing a context of Hiragana characters to a recognizer.	</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.Katakana">
      <summary> A constant string value that is used to increase recognition accuracy by providing a context of Katakana characters to a recognizer.	</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.KanjiCommon">
      <summary> A constant string value that is used to increase recognition accuracy by providing a context of commonly used Kanji characters to a recognizer.	</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.KanjiRare">
      <summary> A constant string value that is used to increase recognition accuracy by providing a context of rarely used Kanji characters to a recognizer.</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.Bopomofo">
      <summary> A constant string value that is used to increase recognition accuracy by providing a Bopomofo context to the recognizer</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.Jamo">
      <summary> A constant string value that is used to increase recognition accuracy by providing a context of Hangul compatibility Jamo characters to a recognizer.	</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.HangulCommon">
      <summary> A constant string value that is used to increase recognition accuracy by providing a context of commonly used Hangul characters to a recognizer.	</summary>
    </member>
    <member name="F:Microsoft.Ink.Factoid.HangulRare">
      <summary> A constant string value that is used to increase recognition accuracy by providing a context of rarely used Hangul characters to a recognizer.	</summary>
    </member>
    <member name="T:Microsoft.Ink.Line">
      <summary> Defines the beginning and end points of a line segment.    </summary>
    </member>
    <member name="M:Microsoft.Ink.Line.#ctor(System.Drawing.Point,System.Drawing.Point)">
      <summary> Creates a Line structure with the specified begin and end points.    </summary>
      <param name="beginPoint"> [in] The starting point of the line</param>
      <param name="endPoint"> [in] The ending point of the line</param>
    </member>
    <member name="M:Microsoft.Ink.Line.#ctor(System.Int32[])">
    </member>
    <member name="P:Microsoft.Ink.Line.BeginPoint">
      <summary> Gets or sets the beginning point of the Line.    </summary>
    </member>
    <member name="P:Microsoft.Ink.Line.EndPoint">
      <summary> Gets or sets the ending point of the Line.    </summary>
    </member>
    <member name="T:Microsoft.Ink.RecognitionAlternate">
      <summary>Represents the possible word matches for segments of ink that are compared to a recognizer dictionary.    </summary>
    </member>
    <member name="M:Microsoft.Ink.RecognitionAlternate.ToString">
      <summary>Returns a string that represents the current RecognitionAlternate object.	</summary>
      <returns>Returns a string that represents the current RecognitionAlternate object.	</returns>
    </member>
    <member name="M:Microsoft.Ink.RecognitionAlternate.GetPropertyValue(System.Guid)">
      <summary>Returns the value of a specified RecognitionProperty of the RecognitionAlternate object</summary>
      <param name="g">The property of the alternate to return, as a globally unique identifier (GUID) for one of the fields on the RecognitionProperty object</param>
      <returns>Returns the value of the property type in the form of a byte array</returns>
    </member>
    <member name="M:Microsoft.Ink.RecognitionAlternate.GetTextRangeFromStrokes(Microsoft.Ink.Strokes,System.Int32@,System.Int32@)">
      <summary>Determines the smallest range of recognized text for which the recognizer can return an alternate that contains a known Strokes collection.	&lt;!-- parameters --&gt;</summary>
      <param name="s">The Strokes collection contained within the alternate.	</param>
      <param name="selectionStart">The start position of the range of recognized text.	</param>
      <param name="selectionLength">The length of the range of recognized text.	</param>
    </member>
    <member name="M:Microsoft.Ink.RecognitionAlternate.GetStrokesFromTextRange(System.Int32@,System.Int32@)">
      <summary>Returns the Strokes collection that corresponds to the smallest set of recognition segment that contains a specified character range within the alternate.  	</summary>
      <param name="selectionStart">The start of the character range within this alternate.</param>
      <param name="selectionLength">The length of the character range within the alternate</param>
      <returns>Returns the Strokes collection that corresponds to the smallest set of recognition segments that contains a specified character range within the alternate.  	</returns>
    </member>
    <member name="M:Microsoft.Ink.RecognitionAlternate.GetStrokesFromStrokeRanges(Microsoft.Ink.Strokes)">
      <summary>Returns the smallest Strokes collection that contains a known Strokes collection and for which the recognizer can provide alternates.	</summary>
      <param name="s">The Strokes collection to use to find the smallest Strokes collection of the recognition result alternate that contains this collection</param>
      <returns>Returns the smallest Strokes collection that contains a known Strokes collection and for which the recognizer can provide alternates.	</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.RecognitionAlternate.AlternatesWithConstantPropertyValues(System.Guid)">
      <summary>Returns a RecognitionAlternates collection that is made of a division of the RecognitionAlternate object on which this method is called</summary>
      <param name="g">The Guid identifier for the RecognitionProperty type for which each returned RecognitionAlternate in the collection has the same constant value.	</param>
      <returns>Returns a RecognitionAlternates collection that is made of a division of the RecognitionAlternate object on which this method is called</returns>
    </member>
    <member name="P:Microsoft.Ink.RecognitionAlternate.Strokes">
      <summary>      Gets the Strokes collection that was used by the recognizer to generate the RecognitionAlternate object.    </summary>
    </member>
    <member name="P:Microsoft.Ink.RecognitionAlternate.Midline">
      <summary>      Gets the midline for a RecognitionAlternate object that represents a single line of text.    </summary>
    </member>
    <member name="P:Microsoft.Ink.RecognitionAlternate.Ascender">
      <summary>      Gets the ascender line for a RecognitionAlternate object that represents a single line of text.    </summary>
    </member>
    <member name="P:Microsoft.Ink.RecognitionAlternate.Descender">
      <summary>      Gets the descender line for a RecognitionAlternate object that represents a single line of text.    </summary>
    </member>
    <member name="P:Microsoft.Ink.RecognitionAlternate.Baseline">
      <summary>      Gets the baseline for a RecognitionAlternate object that represents a single line of text.    </summary>
    </member>
    <member name="P:Microsoft.Ink.RecognitionAlternate.LineNumber">
      <summary>      Gets the line number that the recognition alternate corresponds to in the recognition result.    </summary>
    </member>
    <member name="P:Microsoft.Ink.RecognitionAlternate.LineAlternates">
      <summary>      Gets the RecognitionAlternates collection in which each alternate in the collection is on a separate line.     </summary>
    </member>
    <member name="P:Microsoft.Ink.RecognitionAlternate.ConfidenceAlternates">
      <summary>Gets the collection of alternates where the current alternate is split into a collection of smaller alternates</summary>
    </member>
    <member name="P:Microsoft.Ink.RecognitionAlternate.Confidence">
      <summary>Gets the level of confidence that a recognizer has in the recognition of a RecognitionAlternate object.    </summary>
    </member>
    <member name="T:Microsoft.Ink.RecognitionAlternates">
      <summary>      Contains the RecognitionAlternate objects that represent possible word matches for segments of ink.    </summary>
    </member>
    <member name="M:Microsoft.Ink.RecognitionAlternates.CopyTo(System.Array,System.Int32)">
      <summary>Copies all of the elements of the current RecognitionAlternates collection to the specified one-dimensional array, starting at the specified destination array index.</summary>
      <param name="array">The one-dimensional array that is the destination of elements copied from the collection</param>
      <param name="index">The zero-based index in the array parameter at which copying begins.</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.RecognitionAlternates.GetEnumerator">
      <summary> Returns an object that implements the  IEnumerator interface that can iterate through the RecognitionAlternate objects within the RecognitionAlternates collection.    </summary>
      <returns> Returns an object that implements the  IEnumerator interface that can iterate through the RecognitionAlternate objects within the RecognitionAlternates collection.    </returns>
    </member>
    <member name="M:Microsoft.Ink.RecognitionAlternates.System#Collections#IEnumerable#GetEnumerator">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.Ink.RecognitionAlternates.Strokes">
      <summary>      Gets the Strokes collection that the recognizer used to generate the RecognitionAlternates collection.    </summary>
    </member>
    <member name="P:Microsoft.Ink.RecognitionAlternates.SyncRoot">
      <value>      Gets an object that can be used to synchronize access to the RecognitionAlternates collection.    </value>
    </member>
    <member name="P:Microsoft.Ink.RecognitionAlternates.Count">
      <value>      Gets the number of RecognitionAlternate objects contained in the RecognitionAlternates collection.    </value>
    </member>
    <member name="P:Microsoft.Ink.RecognitionAlternates.IsSynchronized">
      <value>Gets a value that indicates whether or not access to the RecognitionAlternates collection is synchronized (thread safe).    </value>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.RecognitionAlternates.Item(System.Int32)">
      <summary>
      </summary>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.Ink.RecognitionAlternates.RecognitionAlternatesEnumerator">
      <summary>An implementation of the IEnumerator interface that supports iterating over a RecognitionAlternates collection.    </summary>
    </member>
    <member name="M:Microsoft.Ink.RecognitionAlternates.RecognitionAlternatesEnumerator.#ctor(Microsoft.Ink.RecognitionAlternates)">
      <summary>Initializes a new instance of the RecognitionAlternatesEnumerator class.	  </summary>
      <param name="a">The RecognitionAlternates collection that this enumerator iterates over.	  </param>
    </member>
    <member name="M:Microsoft.Ink.RecognitionAlternates.RecognitionAlternatesEnumerator.MoveNext">
      <summary>Moves the enumerator index to the next object in the collection.		</summary>
      <returns>Set to true if the index position references an object; false if the index position references the end of the collection.		</returns>
    </member>
    <member name="M:Microsoft.Ink.RecognitionAlternates.RecognitionAlternatesEnumerator.Reset">
      <summary>Resets the enumerator index to the beginning of the RecognitionAlternates collection.		</summary>
    </member>
    <member name="P:Microsoft.Ink.RecognitionAlternates.RecognitionAlternatesEnumerator.System#Collections#IEnumerator#Current">
      <value>
      </value>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.Ink.RecognitionAlternates.RecognitionAlternatesEnumerator.Current">
      <value>Gets the RecognitionAlternate object in the RecognitionAlternates collection to which the enumerator is pointing.    </value>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.Ink.RecognizerCharacterAutoCompletionMode">
      <summary>      Defines values that specify types of character input modes.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognizerCharacterAutoCompletionMode.Full">
      <summary>      Specifies recognition occurs as if all strokes have been input.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognizerCharacterAutoCompletionMode.Random">
      <summary>      Specifies recognition occurs on partial input</summary>
    </member>
    <member name="F:Microsoft.Ink.RecognizerCharacterAutoCompletionMode.Prefix">
      <summary>      Specifies recognition occurs on partial input</summary>
    </member>
    <member name="T:Microsoft.Ink.RecognitionStatus">
      <summary>      Defines values that indicate whether an error occurred during recognition and, if so, which error occurred.		This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.		</summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionStatus.NoError">
      <summary>      Indicates no errors occurred.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionStatus.Interrupted">
      <summary>      Indicates the recognition was interrupted by a call to StopBackgroundRecognition.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionStatus.ProcessFailed">
      <summary>      Indicates the ink recognition process failed.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionStatus.InkAddedFailed">
      <summary>      Indicates the ink could not be added.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionStatus.SetAutoCompletionModeFailed">
      <summary>      Indicates the character Autocomplete mode could not be set.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionStatus.SetStrokesFailed">
      <summary>      Indicates the strokes could not be set.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionStatus.SetGuideFailed">
      <summary>      Indicates the recognition guide could not be set.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionStatus.SetFlagsFailed">
      <summary>      Indicates the flags could not be set.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionStatus.SetFactoidFailed">
      <summary>      Indicates the factoid could not be set.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionStatus.SetPrefixSuffixFailed">
      <summary>      Indicates the suffix or the prefix could not be set.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionStatus.SetWordListFailed">
      <summary>      Indicates the word list could not be set.    </summary>
    </member>
    <member name="T:Microsoft.Ink.RecognizerContextRecognitionEventHandler">
      <summary>Represents the method that handles the Recognition event of a RecognizerContext object.</summary>
      <param name="sender">[in] Specifies the source RecognizerContext object of this event.</param>
      <param name="e">[in] Specifies the RecognizerContextRecognitionEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.RecognizerContextRecognitionEventArgs">
      <summary>      Provides data for Recognition events, which occur when stroke are recognized.    </summary>
    </member>
    <member name="M:Microsoft.Ink.RecognizerContextRecognitionEventArgs.#ctor(System.String,System.Object,Microsoft.Ink.RecognitionStatus)">
      <summary>Initializes a new instance of the RecognizerContextRecognitionEventArgs class.    	  </summary>
      <remarks>
      </remarks>
      <param name="text">The RecognitionResult.    	</param>
      <param name="customData">The custom data supplied by the application.    	</param>
      <param name="recognitionStatus">One of the values from the RecognitionStatus enumeration value that indicates the recognition status as of the most recent recognition result.    	</param>
    </member>
    <member name="P:Microsoft.Ink.RecognizerContextRecognitionEventArgs.Text">
      <value>      Gets a string that contains the recognition result text with the highest confidence.    </value>
    </member>
    <member name="P:Microsoft.Ink.RecognizerContextRecognitionEventArgs.CustomData">
      <value>Gets the object that contains the custom data for the recognition result.    </value>
    </member>
    <member name="P:Microsoft.Ink.RecognizerContextRecognitionEventArgs.RecognitionStatus">
      <value>      Gets a RecognitionStatus enumeration value that indicates the recognition status as of the most recent recognition result.    </value>
    </member>
    <member name="T:Microsoft.Ink.RecognizerContextRecognitionWithAlternatesEventHandler">
      <summary>Represents the method that handles the RecognitionWithAlternates event of a RecognizerContext object.</summary>
      <param name="sender">[in] Specifies the source RecognizerContext object of this event.</param>
      <param name="e">[in] Specifies the RecognizerContextRecognitionWithAlternatesEventArgs object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Ink.RecognizerContextRecognitionWithAlternatesEventArgs">
      <summary>      Provides data for RecognitionWithAlternates events, which occur when stroke are recognized.    </summary>
    </member>
    <member name="M:Microsoft.Ink.RecognizerContextRecognitionWithAlternatesEventArgs.#ctor(Microsoft.Ink.RecognitionResult,System.Object,Microsoft.Ink.RecognitionStatus)">
      <summary>Initializes a new instance of the RecognizerContextRecognitionWithAlternatesEventArgs class.	  </summary>
      <remarks>
      </remarks>
      <param name="result">The RecognitionResult object that the recognizer returned.	  </param>
      <param name="customData">The custom data supplied by the application.	  </param>
      <param name="recognitionStatus">One of the values from the RecognitionStatus enumeration value that indicates the recognition status as of the most recent recognition result.  	</param>
    </member>
    <member name="P:Microsoft.Ink.RecognizerContextRecognitionWithAlternatesEventArgs.Result">
      <value>      Gets the RecognitionResult object from the event.    </value>
    </member>
    <member name="P:Microsoft.Ink.RecognizerContextRecognitionWithAlternatesEventArgs.RecognitionStatus">
      <value>      Gets a RecognitionStatus enumeration value that indicates the recognition status as of the most recent recognition result.    </value>
    </member>
    <member name="P:Microsoft.Ink.RecognizerContextRecognitionWithAlternatesEventArgs.CustomData">
      <value>      Gets the object that contains the custom data for the recognition result.    </value>
    </member>
    <member name="T:Microsoft.Ink.RecognitionModes">
      <summary>      Defines values that specify how the recognizer interprets the ink and determines the result string.      This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.</summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionModes.None">
      <summary>      Specifies that the recognizer applies no recognition modes.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionModes.WordMode">
      <summary>      Specifies that the recognizer treats the ink as a single word</summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionModes.TopInkBreaksOnly">
      <summary>      Disables multiple segmentation.      This turns off the recognizer's ability to return recognition results based on more than one recognition segment of the ink, where each segment corresponds to a word (in recognizers of Latin script) or a character (in recognizers of East Asian characters).The word "together" always returns alternates based on "together" being a single word, and the recognizer does not consider the string might also be "to get her" or some other variation with differing segmentation.Turning on this flag enhances recognition speed.</summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionModes.Coerce">
      <summary>      Specifies that the recognizer coerces the result based on the factoid that you specified for the context.      For example, if the Telephone factoid is specified and the user enters the word hello, the recognizer may return a random phone number or an empty string</summary>
    </member>
    <member name="T:Microsoft.Ink.RecognizerContext">
      <summary>      Enables the ability to perform ink recognition, retrieve the recognition result, and retrieve alternates</summary>
    </member>
    <member name="F:Microsoft.Ink.RecognizerContext.m_Context">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.Ink.RecognizerContext.#ctor(Microsoft.Ink._Internal.InkRecognizerContext)">
      <summary>
      </summary>
      <param name="context">
      </param>
    </member>
    <member name="M:Microsoft.Ink.RecognizerContext.#ctor">
      <summary>Initializes a new instance of the RecognizerContext class.</summary>
    </member>
    <member name="M:Microsoft.Ink.RecognizerContext.Dispose">
      <summary>Releases resources used by the RecognizerContext object.		</summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.RecognizerContext.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the RecognizerContext object and optionally releases the managed resources.		</summary>
      <remarks>
      </remarks>
      <param name="disposing">Set to true to release both managed and unmanaged resources; false to release only unmanaged resources.		</param>
    </member>
    <member name="M:Microsoft.Ink.RecognizerContext.Finalize">
      <summary>Frees the resources of the current RecognizerContext object before it is reclaimed by the garbage collector.		</summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.RecognizerContext.System#ICloneable#Clone">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.Ink.RecognizerContext.Clone">
      <summary>Creates a copy of this RecognizerContext object</summary>
      <returns>The new copy of the original RecognizerContext object.	</returns>
    </member>
    <member name="M:Microsoft.Ink.RecognizerContext.IsStringSupported(System.String)">
      <summary>Returns a value that indicates whether the system dictionary, user dictionary, or WordList contain a specified string</summary>
      <param name="s">The string to look up in the dictionaries and word list.	</param>
      <returns>A value that indicates whether the system dictionary, user dictionary, or WordList contain a specified string</returns>
    </member>
    <member name="M:Microsoft.Ink.RecognizerContext.StopBackgroundRecognition">
      <summary>Ends background recognition that was started with a call to BackgroundRecognize or BackgroundRecognizeWithAlternates</summary>
    </member>
    <member name="M:Microsoft.Ink.RecognizerContext.BackgroundRecognize(System.Object)">
      <summary>Causes the Recognizer object to recognize the associated Strokes collection and raise a Recognition event when recognition is complete</summary>
      <param name="customData">Any application-defined data that is available to the application in the Recognition event</param>
    </member>
    <member name="M:Microsoft.Ink.RecognizerContext.BackgroundRecognize">
      <summary>Causes the Recognizer object to recognize the associated Strokes collection and raise a Recognition event when recognition is complete</summary>
    </member>
    <member name="M:Microsoft.Ink.RecognizerContext.Recognize(Microsoft.Ink.RecognitionStatus@)">
      <summary>Returns a RecognitionResult object for a Strokes collection.	</summary>
      <returns>The RecognitionResult object for a recognized Strokes collection</returns>
      <param name="recognitionStatus">A member of the RecognitionStatus enumeration that indicates whether an error occurred during recognition and, if so, which error occurred</param>
    </member>
    <member name="M:Microsoft.Ink.RecognizerContext.EndInkInput">
      <summary>Ends ink input to the RecognizerContext object.	</summary>
    </member>
    <member name="M:Microsoft.Ink.RecognizerContext.BackgroundRecognizeWithAlternates(System.Object)">
      <summary>Causes the Recognizer object to recognize the associated Strokes collection and raise a Recognition event when recognition is complete</summary>
      <param name="customData">Any application-defined data that is available to the application in the Recognition event</param>
    </member>
    <member name="M:Microsoft.Ink.RecognizerContext.BackgroundRecognizeWithAlternates">
      <summary>Causes the Recognizer object to recognize the associated Strokes collection and raise a Recognition event when recognition is complete</summary>
    </member>
    <member name="E:Microsoft.Ink.RecognizerContext.Recognition">
      <summary>Occurs when the RecognizerContext has generated results from the BackgroundRecognize method.</summary>
    </member>
    <member name="E:Microsoft.Ink.RecognizerContext.RecognitionWithAlternates">
      <summary>Occurs when the RecognizerContext has generated results after calling the BackgroundRecognizeWithAlternates method.</summary>
    </member>
    <member name="P:Microsoft.Ink.RecognizerContext.WordList">
      <summary>      Gets or sets the WordList object that is used to improve the recognition results.    </summary>
    </member>
    <member name="P:Microsoft.Ink.RecognizerContext.PrefixText">
      <summary>Gets or sets the characters that come before the Strokes collection in the RecognizerContext object</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.RecognizerContext.SuffixText">
      <summary>      Gets or sets the characters that come after the Strokes collection in the RecognizerContext object</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.RecognizerContext.Strokes">
      <summary>      Gets or sets the Strokes collection associated with the RecognizerContext object.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.RecognizerContext.Recognizer">
      <summary>Gets or sets the Recognizer object used by the RecognizerContext object.</summary>
    </member>
    <member name="P:Microsoft.Ink.RecognizerContext.RecognitionFlags">
      <summary>      Gets or sets the flags that specify how the recognizer interprets the ink and determines the result string.    </summary>
    </member>
    <member name="P:Microsoft.Ink.RecognizerContext.Guide">
      <summary>      Gets or sets the RecognizerGuide to use for ink input.    </summary>
    </member>
    <member name="P:Microsoft.Ink.RecognizerContext.Factoid">
      <summary>Gets or sets the string name of the factoid used by the RecognizerContext object</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.RecognizerContext.CharacterAutoCompletion">
      <summary>      Gets or sets the character Autocomplete mode, which determines when characters or words are recognized</summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:Microsoft.Ink.RecognizerGuide">
      <summary> Represents the area that the recognizer uses in which ink can be drawn</summary>
    </member>
    <member name="M:Microsoft.Ink.RecognizerGuide.#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.Rectangle)">
      <summary> Creates a RecognizerGuide object.    </summary>
      <param name="rows"> [in] The number of rows in the guide box</param>
      <param name="columns"> [in] The number of columns in the guide box</param>
      <param name="midline"> [in] The midline height, or distance from the baseline to the midline, of the guide box</param>
      <param name="writingBox"> [in] The invisible writing area of the guide box in which writing can actually take place</param>
      <param name="drawnBox"> [in] The box that is physically drawn on the tablet's screen and in which writing takes place</param>
    </member>
    <member name="P:Microsoft.Ink.RecognizerGuide.Rows">
      <summary> Gets or sets the number of rows in the recognition guide box.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.RecognizerGuide.Columns">
      <summary> Gets or sets the number of columns in the recognition guide box.    </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.RecognizerGuide.Midline">
      <summary> Gets or sets the midline height</summary>
    </member>
    <member name="P:Microsoft.Ink.RecognizerGuide.WritingBox">
      <summary> Gets or sets the invisible writing area of the recognition guide in which writing can actually take place</summary>
    </member>
    <member name="P:Microsoft.Ink.RecognizerGuide.DrawnBox">
      <summary> Gets or sets the box that is physically drawn on the tablet's screen and in which writing takes place.    </summary>
    </member>
    <member name="T:Microsoft.Ink.RecognitionResult">
      <summary>      Represents the result of the recognition</summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionResult.DefaultMaximumRecognitionAlternates">
      <summary>Retrieves the default maximum number of RecognitionAlternates to get from the recognizer.	</summary>
    </member>
    <member name="M:Microsoft.Ink.RecognitionResult.ToString">
      <summary>Returns a string that represents the TopAlternate property of the current RecognitionResult object.	</summary>
      <returns>Returns a string that represents the TopAlternate property of the current RecognitionResult object.	</returns>
    </member>
    <member name="M:Microsoft.Ink.RecognitionResult.ModifyTopAlternate(Microsoft.Ink.RecognitionAlternate)">
      <summary>Modifies the RecognitionResult object with a known RecognitionAlternate object.	</summary>
      <param name="alternate">The RecognitionAlternate object to use to modify the RecognitionResult object.	</param>
    </member>
    <member name="M:Microsoft.Ink.RecognitionResult.GetAlternatesFromSelection(System.Int32,System.Int32,System.Int32)">
      <summary> Returns the RecognitionAlternates collection from a selection within the best result string of the RecognitionResult object, so that each RecognitionAlternate object in the collection corresponds to only one segment of ink.	</summary>
      <param name="selectionStart">The start of the text selection from which the RecognitionAlternates collection is returned</param>
      <param name="selectionLength">The length of the text selection from which the RecognitionAlternates collection is returned</param>
      <param name="maximumAlternates">The maximum number of alternates to return</param>
      <returns>Returns the RecognitionAlternates collection from a selection within the best result string of the RecognitionResult object, so that each RecognitionAlternate object in the collection corresponds to only one segment of ink.    </returns>
    </member>
    <member name="M:Microsoft.Ink.RecognitionResult.GetAlternatesFromSelection(System.Int32,System.Int32)">
      <summary> Returns the RecognitionAlternates collection from a selection within the best result string of the RecognitionResult object, so that each RecognitionAlternate object in the collection corresponds to only one segment of ink.	</summary>
      <param name="selectionStart">The start of the text selection from which the RecognitionAlternates collection is returned</param>
      <param name="selectionLength">The length of the text selection from which the RecognitionAlternates collection is returned</param>
      <returns>Returns the RecognitionAlternates collection from a selection within the best result string of the RecognitionResult object, so that each RecognitionAlternate object in the collection corresponds to only one segment of ink.    </returns>
    </member>
    <member name="M:Microsoft.Ink.RecognitionResult.GetAlternatesFromSelection">
      <summary> Returns the RecognitionAlternates collection from a selection within the best result string of the RecognitionResult object, so that each RecognitionAlternate object in the collection corresponds to only one segment of ink.	</summary>
      <returns>Returns the RecognitionAlternates collection from a selection within the best result string of the RecognitionResult object, so that each RecognitionAlternate object in the collection corresponds to only one segment of ink.    </returns>
    </member>
    <member name="M:Microsoft.Ink.RecognitionResult.SetResultOnStrokes">
      <summary>Assigns the RecognitionResult object to the Strokes collection that was used to generate the results.	</summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.RecognitionResult.TopString">
      <summary>Gets the result text for the TopAlternate property.    </summary>
    </member>
    <member name="P:Microsoft.Ink.RecognitionResult.TopConfidence">
      <summary>Gets the confidence level of the TopAlternate property of the RecognitionResult object.    </summary>
    </member>
    <member name="P:Microsoft.Ink.RecognitionResult.Strokes">
      <summary>Gets the Strokes collection that was used by the recognizer to generate the RecognitionResult object.    </summary>
    </member>
    <member name="P:Microsoft.Ink.RecognitionResult.TopAlternate">
      <summary>Gets the top alternate of the recognition result.    </summary>
    </member>
    <member name="T:Microsoft.Ink.RecognitionProperty">
      <summary>      Defines values that specify the properties of the recognition alternate.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionProperty.LineNumber">
      <summary>Retrieves a globally unique identifier (GUID) that specifies the line number of the RecognitionAlternate object.</summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionProperty.BoxNumber">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionProperty.Segmentation">
      <summary>Retrieves a globally unique identifier (GUID) that specifies the segmentation of the RecognitionAlternate object.</summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionProperty.HotPoint">
      <summary>Retrieves a globally unique identifier (GUID) that specifies the hot point of the RecognitionAlternate object.</summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionProperty.MaximumStrokeCount">
      <summary>Retrieves a globally unique identifier (GUID) that specifies the maximum stroke count of the RecognitionAlternate object.</summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionProperty.PointsPerInch">
      <summary>Retrieves a globally unique identifier (GUID) that specifies the points-per-inch metric of the RecognitionAlternate object.</summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionProperty.ConfidenceLevel">
      <summary>Retrieves a globally unique identifier (GUID) that specifies the confidence level of the RecognitionAlternate object.</summary>
    </member>
    <member name="F:Microsoft.Ink.RecognitionProperty.LineMetrics">
      <summary>Retrieves a globally unique identifier (GUID) that specifies the line metrics of the RecognitionAlternate object.</summary>
    </member>
    <member name="T:Microsoft.Ink.RecognizerCapabilities">
      <summary>      Defines values that specify the attributes of a recognizer</summary>
    </member>
    <member name="F:Microsoft.Ink.RecognizerCapabilities.DontCare">
      <summary>      Ignores all other flags that are set.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognizerCapabilities.Object">
      <summary>      If set, specifies the recognizer performs object recognition; otherwise, the recognizer performs text recognition.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognizerCapabilities.FreeInput">
      <summary>      Specifies the recognizer supports free input</summary>
    </member>
    <member name="F:Microsoft.Ink.RecognizerCapabilities.LinedInput">
      <summary>      Specifies the recognizer supports lined input, which is similar to writing on lined paper.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognizerCapabilities.BoxedInput">
      <summary>      Specifies the recognizer supports boxed input, in which each character or word is entered in a box.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognizerCapabilities.CharacterAutoCompletionInput">
      <summary>      Specifies the recognizer supports character Autocomplete</summary>
    </member>
    <member name="F:Microsoft.Ink.RecognizerCapabilities.RightAndDown">
      <summary>      Specifies the recognizer supports western and Asian languages.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognizerCapabilities.LeftAndDown">
      <summary>      Specifies that the recognizer supports Hebrew and Arabic languages.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognizerCapabilities.DownAndLeft">
      <summary>      Specifies the recognizer supports Asian languages.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognizerCapabilities.DownAndRight">
      <summary>      Specifies the recognizer supports the Chinese language.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognizerCapabilities.ArbitraryAngle">
      <summary>      Specifies the recognizer supports text is written at arbitrary angles.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognizerCapabilities.Lattice">
      <summary>      Specifies the recognizer can return a lattice object.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognizerCapabilities.AdviseInkChange">
      <summary>      Specifies that the recognizer's background recogition can be interrupted, as in when the ink has changed.    </summary>
    </member>
    <member name="F:Microsoft.Ink.RecognizerCapabilities.StrokeReorder">
      <summary>      Specifies that stroke order - spatial and temporal - is handled.    </summary>
    </member>
    <member name="T:Microsoft.Ink.Recognizer">
      <summary>Represents the ability to process ink, or handwriting, and translate the stroke into text or gestures</summary>
    </member>
    <member name="M:Microsoft.Ink.Recognizer.ToString">
      <summary>Returns a string that represents the current Recognizer object.	</summary>
      <returns>Returns a string that represents the current Recognizer object.	</returns>
    </member>
    <member name="M:Microsoft.Ink.Recognizer.CreateRecognizerContext">
      <summary>Creates a new RecognizerContext object for this Recognizer object.	</summary>
      <returns>The new RecognizerContext object.	</returns>
    </member>
    <member name="P:Microsoft.Ink.Recognizer.Name">
      <summary>Gets the name of the Recognizer object.    </summary>
    </member>
    <member name="P:Microsoft.Ink.Recognizer.Vendor">
      <summary>Gets the vendor name of the Recognizer object.    </summary>
    </member>
    <member name="P:Microsoft.Ink.Recognizer.Capabilities">
      <summary>Gets the capabilities of the Recognizer object.    </summary>
    </member>
    <member name="P:Microsoft.Ink.Recognizer.PreferredPacketDescription">
      <summary>Gets an array of type Guid that represents the preferred packet properties for the recognizer.    </summary>
    </member>
    <member name="P:Microsoft.Ink.Recognizer.SupportedProperties">
      <summary>      Gets an array of type Guid that describe the properties that the Recognizer object supports.          </summary>
    </member>
    <member name="P:Microsoft.Ink.Recognizer.Languages">
      <summary>      Gets an array of language identifiers for the languages that the Recognizer object supports.    </summary>
    </member>
    <member name="T:Microsoft.Ink.Recognizers">
      <summary>      Contains the Recognizer objects that represent the ability to create a recognizer context, retrieve its attributes and properties, and determine which packet properties the recognizer needs to perform recognition.    </summary>
    </member>
    <member name="M:Microsoft.Ink.Recognizers.#ctor">
      <summary>Initializes a new instance of the Recognizers class.	</summary>
    </member>
    <member name="M:Microsoft.Ink.Recognizers.CopyTo(System.Array,System.Int32)">
      <summary>Copies all of the elements of the current Recognizers collection to the specified one-dimensional array, starting at the specified destination array index.</summary>
      <param name="array">The one-dimensional array that is the destination of elements copied from the collection</param>
      <param name="index">The zero-based index in the array parameter at which copying begins.</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.Ink.Recognizers.GetDefaultRecognizer">
      <summary>Returns the default recognizer.</summary>
      <remarks>
      </remarks>
      <returns>      Returns the requested recognizer.    </returns>
    </member>
    <member name="M:Microsoft.Ink.Recognizers.GetDefaultRecognizer(System.Int32)">
      <summary>      Returns the default recognizer for a known language, specified by a national language support (NLS) language code identifier (LCID).  	</summary>
      <param name="lcid">The language code identifier (LCID) of the language for which you are retrieving the default recognizer</param>
      <returns>      Returns the requested recognizer.    </returns>
    </member>
    <member name="M:Microsoft.Ink.Recognizers.GetEnumerator">
      <summary> Returns an object that implements the IEnumerator interface and that can iterate through the Recognizer objects within the Recognizers collection.    </summary>
      <returns> Returns an object that implements the IEnumerator interface and that can iterate through the Recognizer objects within the Recognizers collection.    </returns>
    </member>
    <member name="M:Microsoft.Ink.Recognizers.System#Collections#IEnumerable#GetEnumerator">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.Ink.Recognizers.SyncRoot">
      <value>Returns an object that can be used to synchronize access to the Recognizers collection.</value>
    </member>
    <member name="P:Microsoft.Ink.Recognizers.Count">
      <value>      Gets the number of Recognizer objects contained in the Recognizers collection.    </value>
    </member>
    <member name="P:Microsoft.Ink.Recognizers.IsSynchronized">
      <value>      Gets a value that indicates whether or not access to the Recognizers collection is synchronized (thread safe).    </value>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.Ink.Recognizers.Item(System.Int32)">
      <summary>
      </summary>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.Ink.Recognizers.RecognizersEnumerator">
      <summary>      An implementation of the IEnumerator interface that supports iterating over a Recognizers collection</summary>
    </member>
    <member name="M:Microsoft.Ink.Recognizers.RecognizersEnumerator.#ctor(Microsoft.Ink.Recognizers)">
      <summary>Initializes a new instance of the RecognizersEnumerator class.	</summary>
      <param name="r">The Recognizers collection that this enumerator iterates over.	</param>
    </member>
    <member name="M:Microsoft.Ink.Recognizers.RecognizersEnumerator.MoveNext">
      <summary>Moves the enumerator index to the next object in the collection.		</summary>
      <returns>Set to true if the index position references an object; false if the index position references the end of the collection.		</returns>
    </member>
    <member name="M:Microsoft.Ink.Recognizers.RecognizersEnumerator.Reset">
      <summary>Resets the enumerator index to the beginning of the Recognizers collection.		</summary>
    </member>
    <member name="P:Microsoft.Ink.Recognizers.RecognizersEnumerator.System#Collections#IEnumerator#Current">
      <value>
      </value>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.Ink.Recognizers.RecognizersEnumerator.Current">
      <value>Gets the Recognizer object in the Recognizers collection to which the enumerator is pointing.    </value>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.Ink.WordList">
      <summary>      Represents a list of String types that can be used to improve the recognition result.    </summary>
    </member>
    <member name="M:Microsoft.Ink.WordList.#ctor">
      <summary>Initializes a new instance of the WordList class.    </summary>
    </member>
    <member name="M:Microsoft.Ink.WordList.Add(System.String)">
      <summary>Adds a single string to the WordList object.</summary>
      <param name="s">The string to add to the WordList object</param>
    </member>
    <member name="M:Microsoft.Ink.WordList.Remove(System.String)">
      <summary>Removes a single string from a WordList object.</summary>
      <param name="s">The string to remove from the WordList</param>
    </member>
    <member name="M:Microsoft.Ink.WordList.Merge(Microsoft.Ink.WordList)">
      <summary>Merges a specified WordList object into this WordList object.</summary>
      <param name="wl">The specified WordList object to merge into this WordList object. </param>
    </member>
    <member name="T:Microsoft.StylusInput.PluginData.StylusQueues">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.StylusInput.PluginData.StylusQueues.Input">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.StylusInput.PluginData.StylusQueues.OutputImmediate">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.StylusInput.PluginData.StylusQueues.Output">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.StylusInput.PluginData.CustomStylusData">
      <summary>Container to encapsulate any arbitrary developer custom data in the Data member, with a Guid identifier in the CustomStylusDataId member to pass type information.   </summary>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.CustomStylusData.#ctor(System.Guid,System.Object)">
      <summary>
      </summary>
      <param name="customDataId">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.CustomStylusData.CustomDataId">
      <summary>Gets a unique identifier for the CustomStylusData object.    </summary>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.CustomStylusData.Data">
      <summary>Gets the user data for the CustomStylusData object.    </summary>
    </member>
    <member name="T:Microsoft.StylusInput.DynamicRenderer">
      <summary>An object that displays the tablet pen data in real-time as it is being handled by the RealTimeStylus object</summary>
    </member>
    <member name="T:Microsoft.StylusInput.IStylusSyncPlugin">
      <summary>Interface implemented by synchronous plug-ins</summary>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusSyncPlugin.RealTimeStylusEnabled(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.RealTimeStylusEnabledData)">
      <summary>Informs the implementing plug-in that the RealTimeStylus is enabled</summary>
      <param name="sender">The RealTimeStylus that sent the notification.</param>
      <param name="data">Contains information about the Tablets associated with this RealTimeStylus.</param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusSyncPlugin.RealTimeStylusDisabled(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.RealTimeStylusDisabledData)">
      <summary>Informs the implementing plug-in that the RealTimeStylus is disabled.</summary>
      <param name="sender">The RealTimeStylus that sent the disabled notification.</param>
      <param name="data">Contains information about the Tablets associated with this RealTimeStylus.</param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusSyncPlugin.StylusInRange(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusInRangeData)">
      <summary>Informs the implementing plug-in that the Stylus is in range of the digitizer.</summary>
      <param name="sender">The RealTimeStylus that sent the notification.</param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusSyncPlugin.StylusOutOfRange(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusOutOfRangeData)">
      <summary>Occurs when the stylus is out of range of the digitizer.</summary>
      <param name="sender">The RealTimeStylus that sent the notification.</param>
      <param name="data">Provides access to the stylus associated with the notification.</param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusSyncPlugin.StylusDown(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusDownData)">
      <summary>Informs the implementing plug-in that the Stylus has touched the digitizer.</summary>
      <param name="sender">The RealTimeStylus that sent the notification.</param>
      <param name="data">Contains information about the stylus.</param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusSyncPlugin.StylusUp(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusUpData)">
      <summary>Notification occurs when the stylus is raised off of the digitizer.</summary>
      <param name="sender">The RealTimeStylus that sent the notification.</param>
      <param name="data">Provides access to the stylus associated with the notification.</param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusSyncPlugin.StylusButtonDown(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusButtonDownData)">
      <summary>Informs the implementing plug-in that the stylus button is pressed</summary>
      <param name="sender">The RealTimeStylus that sent the notification.</param>
      <param name="data">Contains information about the button that was pressed.</param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusSyncPlugin.StylusButtonUp(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusButtonUpData)">
      <summary>Informs the implementing plug-in that the stylus button has been released.</summary>
      <param name="sender">The RealTimeStylus that sent the notification.</param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusSyncPlugin.InAirPackets(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.InAirPacketsData)">
      <summary>Informs the object implementing the IStylusSyncPlugin interface that the stylus is moving above the digitizer.    </summary>
      <param name="sender">The RealTimeStylus which called this method.    </param>
      <param name="data">The information about the stylus movement.    </param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusSyncPlugin.Packets(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.PacketsData)">
      <summary>Informs the object implementing the IStylusSyncPlugin interface that the stylus is moving on the digitizer.    </summary>
      <param name="sender">The RealTimeStylus which called this method.    </param>
      <param name="data">The information about the stylus movement.    </param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusSyncPlugin.SystemGesture(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.SystemGestureData)">
      <summary>Notification occurs when a system gesture is received.</summary>
      <param name="sender">The RealTimeStylus that sent the notification.</param>
      <param name="data">Provides access to information about the system gesture.</param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusSyncPlugin.TabletAdded(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.TabletAddedData)">
      <summary>Notification occurs when a Tablet is attached to the system.</summary>
      <param name="sender">The RealTimeStylus that sent the notification.</param>
      <param name="data">Provides access to the Tablet that was added.</param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusSyncPlugin.TabletRemoved(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.TabletRemovedData)">
      <summary>Notification occurs when a Tablet is removed from the system.</summary>
      <param name="sender">The RealTimeStylus that sent the notification.</param>
      <param name="data">Provides access to the Tablet that was added.</param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusSyncPlugin.CustomStylusDataAdded(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.CustomStylusData)">
      <summary>Informs the implementing plug-in that CustomStylusData is available.</summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusSyncPlugin.Error(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.ErrorData)">
      <summary>Informs the implementing object that this plug-in or one of the previous ones in the list threw an error.</summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="P:Microsoft.StylusInput.IStylusSyncPlugin.DataInterest">
      <summary>Used to define the set of data notifications that the plug-in requires.</summary>
    </member>
    <member name="F:Microsoft.StylusInput.DynamicRenderer.DynamicRendererCachedDataGuid">
      <summary>      The Guid that is used by a CustomStylusData object to indicate that the Data property contains DynamicRendererCachedData from a DynamicRenderer.    </summary>
    </member>
    <member name="M:Microsoft.StylusInput.DynamicRenderer.#ctor(System.Windows.Forms.Control)">
      <summary>      Creates a DynamicRenderer object.    </summary>
      <param name="control">      The control on which the tablet pen data is displayed</param>
    </member>
    <member name="M:Microsoft.StylusInput.DynamicRenderer.#ctor(System.IntPtr)">
      <summary>      Creates a DynamicRenderer object.    </summary>
      <param name="handle">      The handle for the window on which the tablet pen data is displayed</param>
    </member>
    <member name="M:Microsoft.StylusInput.DynamicRenderer.Finalize">
      <summary>Frees the resources of the current DynamicRenderer object before it is reclaimed by the garbage collector.		</summary>
    </member>
    <member name="M:Microsoft.StylusInput.DynamicRenderer.ReleaseCachedData(System.Int32)">
      <summary>      Releases stroke data from the temporal data held by the DynamicRenderer.    </summary>
      <param name="cachedDataId">      The identifier for the data to be released.    </param>
    </member>
    <member name="M:Microsoft.StylusInput.DynamicRenderer.Refresh">
      <summary>Causes the DynamicRenderer to refresh the data that it is currently rendering.</summary>
    </member>
    <member name="M:Microsoft.StylusInput.DynamicRenderer.Dispose(System.Boolean)">
      <summary>      Releases the unmanaged resources used by the object and optionally releases the managed resources.    </summary>
      <param name="disposing">A value that indicates whether to release the managed resources.</param>
    </member>
    <member name="M:Microsoft.StylusInput.DynamicRenderer.InternalSetHandle(System.IntPtr)">
      <summary>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.DynamicRenderer.OnHandleDestroyed(System.Object,System.EventArgs)">
    </member>
    <member name="M:Microsoft.StylusInput.DynamicRenderer.OnHandleCreated(System.Object,System.EventArgs)">
    </member>
    <member name="M:Microsoft.StylusInput.DynamicRenderer.Microsoft#StylusInput#IStylusSyncPlugin#RealTimeStylusEnabled(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.RealTimeStylusEnabledData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.DynamicRenderer.Microsoft#StylusInput#IStylusSyncPlugin#RealTimeStylusDisabled(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.RealTimeStylusDisabledData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.DynamicRenderer.Microsoft#StylusInput#IStylusSyncPlugin#StylusInRange(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusInRangeData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.DynamicRenderer.Microsoft#StylusInput#IStylusSyncPlugin#StylusOutOfRange(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusOutOfRangeData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.DynamicRenderer.Microsoft#StylusInput#IStylusSyncPlugin#StylusDown(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusDownData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.DynamicRenderer.Microsoft#StylusInput#IStylusSyncPlugin#StylusUp(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusUpData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.DynamicRenderer.Microsoft#StylusInput#IStylusSyncPlugin#StylusButtonDown(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusButtonDownData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.DynamicRenderer.Microsoft#StylusInput#IStylusSyncPlugin#StylusButtonUp(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusButtonUpData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.DynamicRenderer.Microsoft#StylusInput#IStylusSyncPlugin#InAirPackets(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.InAirPacketsData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.DynamicRenderer.Microsoft#StylusInput#IStylusSyncPlugin#Packets(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.PacketsData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.DynamicRenderer.Microsoft#StylusInput#IStylusSyncPlugin#SystemGesture(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.SystemGestureData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.DynamicRenderer.Microsoft#StylusInput#IStylusSyncPlugin#TabletAdded(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.TabletAddedData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.DynamicRenderer.Microsoft#StylusInput#IStylusSyncPlugin#TabletRemoved(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.TabletRemovedData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.DynamicRenderer.Microsoft#StylusInput#IStylusSyncPlugin#CustomStylusDataAdded(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.CustomStylusData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.DynamicRenderer.Microsoft#StylusInput#IStylusSyncPlugin#Error(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.ErrorData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.DynamicRenderer.Dispose">
      <summary>      Releases resources used by the object.    </summary>
    </member>
    <member name="P:Microsoft.StylusInput.DynamicRenderer.DrawingAttributes">
      <summary> Gets and sets the DrawingAttributes used by the DynamicRenderer.    </summary>
      <remarks>
      </remarks>
      <example>
        <code>
        </code>
      </example>
      <value>
      </value>
    </member>
    <member name="P:Microsoft.StylusInput.DynamicRenderer.Enabled">
      <summary> Turns dynamic rendering on and off.    </summary>
    </member>
    <member name="P:Microsoft.StylusInput.DynamicRenderer.ClipRegion">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.StylusInput.DynamicRenderer.EnableDataCache">
      <summary>Gets or sets whether data caching is enabled for the DynamicRender.</summary>
    </member>
    <member name="P:Microsoft.StylusInput.DynamicRenderer.Microsoft#StylusInput#IStylusSyncPlugin#DataInterest">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.StylusInput.DynamicRenderer.Microsoft#StylusInput#INativeImplementationWrapper#SyncPlugin">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.StylusInput.PluginData.DynamicRendererCachedData">
      <summary>The DynamicRenderer instantiates this data object and adds it to the queue using the AddCustomStylusDataToQueue method with the CustomDataId set to DynamicRendererCachedDataGuid.</summary>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.DynamicRendererCachedData.CachedDataId">
      <summary>Gets the identifier of the corresponding data cache that can be released by the DynamicRenderer when this data object reaches the asynchronous plug-in that stores and renders ink.</summary>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.DynamicRendererCachedData.DynamicRenderer">
      <summary>Gets a reference back to the DynamicRenderer to release the cached data.</summary>
    </member>
    <member name="T:Microsoft.StylusInput.PluginData.GestureAlternate">
      <summary>Data object created by GestureRecognizer as part of the GestureRecognitionData object</summary>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.GestureAlternate.#ctor(Microsoft.StylusInput.GestureAlternateNative)">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.GestureAlternate.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
      </summary>
      <param name="id">
      </param>
      <param name="confidence">
      </param>
      <param name="strokeCount">
      </param>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.GestureAlternate.Id">
      <summary>ApplicationGesture of the gesture that occured.    </summary>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.GestureAlternate.Confidence">
      <summary>Confidence level assigned to this alternate by the gesture recongizer.    </summary>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.GestureAlternate.StrokeCount">
      <summary>The number of most recent Strokes assumed to be a part of the gesture.    </summary>
    </member>
    <member name="T:Microsoft.StylusInput.PluginData.GestureRecognitionData">
      <summary>Provides a container for gesture recognition results.    </summary>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.GestureRecognitionData.GetEnumerator">
      <summary> Returns the IEnumerator interface used to iterate through the gesture recognition alternates.    </summary>
      <returns>  Returns the IEnumerator interface used to iterate through the gesture recognition alternates.    </returns>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.GestureRecognitionData.Item(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.GestureRecognitionData.Count">
      <summary>Returns the number of alternates.    </summary>
    </member>
    <member name="T:Microsoft.StylusInput.GestureRecognizer">
      <summary>      An object that reacts to events by recognizing gesture and adding gesture data into the input queue.    </summary>
    </member>
    <member name="T:Microsoft.StylusInput.IStylusAsyncPlugin">
      <summary>Interface implemented by asynchronous plug-ins</summary>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusAsyncPlugin.RealTimeStylusEnabled(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.RealTimeStylusEnabledData)">
      <summary>Informs the implementing plug-in that the RealTimeStylus is enabled</summary>
      <param name="sender">The RealTimeStylus that sent the notification.</param>
      <param name="data">Contains information about the Tablets associated with this RealTimeStylus.</param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusAsyncPlugin.RealTimeStylusDisabled(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.RealTimeStylusDisabledData)">
      <summary>Informs the implementing plug-in that the RealTimeStylus is disabled.</summary>
      <param name="sender">The RealTimeStylus that sent the disabled notification.</param>
      <param name="data">Contains information about the Tablets associated with this RealTimeStylus.</param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusAsyncPlugin.StylusInRange(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusInRangeData)">
      <summary>Informs the implementing plug-in that the Stylus is in range of the digitizer.</summary>
      <param name="sender">The RealTimeStylus that sent the notification.</param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusAsyncPlugin.StylusOutOfRange(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusOutOfRangeData)">
      <summary>Occurs when the stylus is out of range of the digitizer.</summary>
      <param name="sender">The RealTimeStylus that sent the notification.</param>
      <param name="data">Provides access to the stylus associated with the notification.</param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusAsyncPlugin.StylusDown(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusDownData)">
      <summary>Informs the implementing plug-in that the Stylus has touched the digitizer.</summary>
      <param name="sender">The RealTimeStylus that sent the notification.</param>
      <param name="data">Contains information about the stylus.</param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusAsyncPlugin.StylusUp(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusUpData)">
      <summary>Notification occurs when the stylus is raised off of the digitizer.</summary>
      <param name="sender">The RealTimeStylus that sent the notification.</param>
      <param name="data">Provides access to the stylus associated with the notification.</param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusAsyncPlugin.StylusButtonDown(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusButtonDownData)">
      <summary>Informs the implementing plug-in that the stylus button is pressed</summary>
      <param name="sender">The RealTimeStylus that sent the notification.</param>
      <param name="data">Contains information about the button that was pressed.</param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusAsyncPlugin.StylusButtonUp(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusButtonUpData)">
      <summary>Informs the implementing plug-in that the stylus button has been released.</summary>
      <param name="sender">The RealTimeStylus that sent the notification.</param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusAsyncPlugin.InAirPackets(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.InAirPacketsData)">
      <summary>Informs the object implementing the IStylusAsyncPlugin interface that the stylus is moving above the digitizer.    </summary>
      <param name="sender">The RealTimeStylus which called this method.    </param>
      <param name="data">The information about the stylus movement.    </param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusAsyncPlugin.Packets(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.PacketsData)">
      <summary>Informs the object implementing the IStylusAsyncPlugin interface that the stylus is moving on the digitizer.    </summary>
      <param name="sender">The RealTimeStylus which called this method.    </param>
      <param name="data">The information about the stylus movement.    </param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusAsyncPlugin.SystemGesture(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.SystemGestureData)">
      <summary>Notification occurs when a system gesture is received.</summary>
      <param name="sender">The RealTimeStylus that sent the notification.</param>
      <param name="data">Provides access to information about the system gesture.</param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusAsyncPlugin.TabletAdded(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.TabletAddedData)">
      <summary>Notification occurs when a Tablet is attached to the system.</summary>
      <param name="sender">The RealTimeStylus that sent the notification.</param>
      <param name="data">Provides access to the Tablet that was added.</param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusAsyncPlugin.TabletRemoved(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.TabletRemovedData)">
      <summary>Notification occurs when a Tablet is removed from the system.</summary>
      <param name="sender">The RealTimeStylus that sent the notification.</param>
      <param name="data">Provides access to the Tablet that was added.</param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusAsyncPlugin.CustomStylusDataAdded(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.CustomStylusData)">
      <summary>Informs the implementing plug-in that CustomStylusData is available.</summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.IStylusAsyncPlugin.Error(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.ErrorData)">
      <summary>Informs the implementing object that this plug-in or one of the previous ones in the list threw an error.</summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="P:Microsoft.StylusInput.IStylusAsyncPlugin.DataInterest">
      <summary>Used to define the set of data notifications that the plug-in requires.</summary>
    </member>
    <member name="F:Microsoft.StylusInput.GestureRecognizer.GestureRecognitionDataGuid">
      <summary>      The Guid that is used by a CustomStylusData object to indicate that the Data property contains GestureRecognitionData from a GestureRecognizer.    </summary>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.#ctor">
      <summary>      Initializes a new instance of the GestureRecognizer class.    </summary>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Finalize">
      <summary>Frees the resources of the current GestureRecognizer object before it is reclaimed by the garbage collector.		</summary>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Dispose(System.Boolean)">
      <summary>      Releases the unmanaged resources used by the object and optionally releases the managed resources.    </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.    </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.EnableGestures(Microsoft.Ink.ApplicationGesture[])">
      <summary>       Sets which ApplicationGesture will result in the GestureRecognizer adding GestureRecognitionData into the input q  queue.    </summary>
      <param name="gestures">      The ApplicationGesture that the GestureRecognizer will respond to.    </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Reset">
      <summary>        Clears the GestureRecognizer of past stroke information</summary>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusSyncPlugin#RealTimeStylusEnabled(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.RealTimeStylusEnabledData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusSyncPlugin#RealTimeStylusDisabled(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.RealTimeStylusDisabledData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusSyncPlugin#StylusInRange(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusInRangeData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusSyncPlugin#StylusOutOfRange(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusOutOfRangeData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusSyncPlugin#StylusDown(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusDownData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusSyncPlugin#StylusUp(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusUpData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusSyncPlugin#StylusButtonDown(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusButtonDownData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusSyncPlugin#StylusButtonUp(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusButtonUpData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusSyncPlugin#InAirPackets(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.InAirPacketsData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusSyncPlugin#Packets(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.PacketsData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusSyncPlugin#SystemGesture(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.SystemGestureData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusSyncPlugin#TabletAdded(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.TabletAddedData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusSyncPlugin#TabletRemoved(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.TabletRemovedData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusSyncPlugin#CustomStylusDataAdded(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.CustomStylusData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusSyncPlugin#Error(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.ErrorData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusAsyncPlugin#RealTimeStylusEnabled(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.RealTimeStylusEnabledData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusAsyncPlugin#RealTimeStylusDisabled(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.RealTimeStylusDisabledData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusAsyncPlugin#StylusInRange(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusInRangeData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusAsyncPlugin#StylusOutOfRange(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusOutOfRangeData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusAsyncPlugin#StylusDown(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusDownData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusAsyncPlugin#StylusUp(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusUpData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusAsyncPlugin#StylusButtonDown(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusButtonDownData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusAsyncPlugin#StylusButtonUp(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusButtonUpData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusAsyncPlugin#InAirPackets(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.InAirPacketsData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusAsyncPlugin#Packets(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.PacketsData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusAsyncPlugin#SystemGesture(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.SystemGestureData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusAsyncPlugin#TabletAdded(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.TabletAddedData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusAsyncPlugin#TabletRemoved(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.TabletRemovedData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusAsyncPlugin#CustomStylusDataAdded(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.CustomStylusData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusAsyncPlugin#Error(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.ErrorData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.GestureRecognizer.Dispose">
      <summary>      Releases resources used by the object.    </summary>
    </member>
    <member name="P:Microsoft.StylusInput.GestureRecognizer.Enabled">
      <summary>Gets or sets a value which indicates whether gesture recognition is enabled.    </summary>
    </member>
    <member name="P:Microsoft.StylusInput.GestureRecognizer.MaxStrokeCount">
      <summary>Sets the maximum number of strokes allowed for gesture recognition.</summary>
    </member>
    <member name="P:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusSyncPlugin#DataInterest">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#IStylusAsyncPlugin#DataInterest">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#INativeImplementationWrapper#SyncPlugin">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.StylusInput.GestureRecognizer.Microsoft#StylusInput#INativeImplementationWrapper#AsyncPlugin">
    </member>
    <member name="T:Microsoft.StylusInput.PluginData.InAirPacketsData">
      <summary>Passed in via the InAirPackets and InAirPackets methods when packets are detected as the pen passes above the digitizer.    </summary>
    </member>
    <member name="T:Microsoft.StylusInput.PluginData.StylusDataBase">
      <summary>Base class for the various data classes.    </summary>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.StylusDataBase.#ctor">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.StylusDataBase.Initialize(Microsoft.StylusInput.Stylus,System.Int32,System.Int32[])">
      <summary>
      </summary>
      <param name="stylus">
      </param>
      <param name="packetPropertyCount">
      </param>
      <param name="packetData">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.StylusDataBase.GetData">
      <summary>Returns the packet data.    </summary>
      <returns>The packet data as an array of integers.    </returns>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.StylusDataBase.SetData(System.Int32[])">
      <summary>Replaces the packet data with the data argument    </summary>
      <param name="value">Integer array containing the new packet data</param>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.StylusDataBase.VerifyPacketData(System.Int32,System.Int32[])">
      <summary>Packet data validation called when the object is initialized.    </summary>
      <param name="packetPropertyCount">
      </param>
      <param name="packetData">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.StylusDataBase.GetEnumerator">
      <summary>Returns the IEnumerator interface used to iterate through the data.    </summary>
      <returns>The IEnumerator interface.    </returns>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.StylusDataBase.Stylus">
      <summary>Gets information about the tablet pen at the time the associated data is generated.    </summary>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.StylusDataBase.PacketPropertyCount">
      <summary>Gets the number of packets contained in the plug-in data object.    </summary>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.StylusDataBase.Count">
      <summary>Returns the length of the packet data.    </summary>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.StylusDataBase.Item(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.InAirPacketsData.#ctor(Microsoft.StylusInput.Stylus,System.Int32,System.Int32[])">
      <summary>Creates an InAirPacketsData object.    </summary>
      <param name="stylus">The stylus associated with the data in the notification.    </param>
      <param name="packetPropertyCount">Number of packet properties in the array of packet data.    </param>
      <param name="packetData">Array of packet data.    </param>
    </member>
    <member name="T:Microsoft.StylusInput.DataInterestMask">
      <summary>Used by plug-ins to specify interest in receiving notification about events.</summary>
    </member>
    <member name="F:Microsoft.StylusInput.DataInterestMask.AllStylusData">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.StylusInput.DataInterestMask.Error">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.StylusInput.DataInterestMask.RealTimeStylusEnabled">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.StylusInput.DataInterestMask.RealTimeStylusDisabled">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.StylusInput.DataInterestMask.StylusInRange">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.StylusInput.DataInterestMask.InAirPackets">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.StylusInput.DataInterestMask.StylusOutOfRange">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.StylusInput.DataInterestMask.StylusDown">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.StylusInput.DataInterestMask.Packets">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.StylusInput.DataInterestMask.StylusUp">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.StylusInput.DataInterestMask.StylusButtonUp">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.StylusInput.DataInterestMask.StylusButtonDown">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.StylusInput.DataInterestMask.SystemGesture">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.StylusInput.DataInterestMask.TabletAdded">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.StylusInput.DataInterestMask.TabletRemoved">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.StylusInput.DataInterestMask.CustomStylusDataAdded">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.StylusInput.DataInterestMask.DefaultStylusData">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.StylusInput.PluginData.PacketsData">
      <summary>Passed in the Packets and Packets methods when packets are detected.</summary>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.PacketsData.#ctor(Microsoft.StylusInput.Stylus,System.Int32,System.Int32[])">
      <summary>Creates a PacketsData object.</summary>
      <param name="stylus">
      </param>
      <param name="packetPropertyCount">
      </param>
      <param name="packetData">
      </param>
    </member>
    <member name="T:Microsoft.StylusInput.RealTimeStylus">
      <summary>      Handles the stylus packet data from a digitizer in real time</summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.#ctor">
      <summary>Creates a RealTimeStylus object.    </summary>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.#ctor(System.IntPtr)">
      <summary>Creates a RealTimeStylus object and attaches it to the specified window.    </summary>
      <param name="handle">The handle of the window to which to attach the RealTimeStylus object</param>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.#ctor(System.IntPtr,System.Boolean)">
      <summary>Creates a RealTimeStylus object, attaches it to the specified window, and specifies whether or not to use the mouse for input.    </summary>
      <param name="handle">The handle of the window to which to attach the RealTimeStylus object</param>
      <param name="useMouseForInput">Set to true to use the mouse for tablet input; otherwise, false.    </param>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.#ctor(System.IntPtr,Microsoft.Ink.Tablet)">
      <summary>Creates a RealTimeStylus object, attaches it to the specified window, and restricts ink collection to the specified tablet.    </summary>
      <param name="handle">The handle of the window to which to attach the RealTimeStylus object</param>
      <param name="tablet">The tablet on which to collect ink, or null (Nothing in Microsoft Visual Basic .NET) to allow ink collection on any attached tablet.    </param>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.#ctor(System.Windows.Forms.Control)">
      <summary>Creates a RealTimeStylus object and attaches it to the specified control.    </summary>
      <param name="attachedControl">The control to which to attach the RealTimeStylus object</param>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.#ctor(System.Windows.Forms.Control,System.Boolean)">
      <summary>Creates a RealTimeStylus object, attaches it to the specified control, and specifies whether or not to use the mouse for input.    </summary>
      <param name="attachedControl">The control to which to attach the RealTimeStylus object</param>
      <param name="useMouseForInput">Set to true to use the mouse for tablet input; otherwise, false.    </param>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.#ctor(System.Windows.Forms.Control,Microsoft.Ink.Tablet)">
      <summary>Creates a RealTimeStylus object, attaches it to the specified control, and restricts ink collection to the specified tablet.    </summary>
      <param name="attachedControl">The control to which to attach the RealTimeStylus object</param>
      <param name="tablet">The tablet on which to collect ink, or null (Nothing in Microsoft Visual Basic .NET) to allow ink collection on any attached tablet.    </param>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.#ctor(System.IntPtr,System.Boolean,Microsoft.Ink.Tablet,System.Boolean,System.Boolean)">
      <summary>
      </summary>
      <param name="handle">
      </param>
      <param name="isControl">
      </param>
      <param name="tablet">
      </param>
      <param name="useMouseForInput">
      </param>
      <param name="allowNull">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.Finalize">
      <summary>Frees the resources of the current RealTimeStylus object before it is reclaimed by the garbage collector.		</summary>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.GetStyluses">
      <summary>      Returns the array of Stylus objects encountered by the RealTimeStylus.    </summary>
      <value>
      </value>
      <returns>      The styluses encountered by the RealTimeStylus.    </returns>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.GetDesiredPacketDescription">
      <summary>      Gets the RealTimeStylus object's interest in aspects of the packet collected on a tablet context.    </summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>
            </description>
          </item>
        </list>
      </remarks>
      <value>
      </value>
      <returns>      Returns the globally unique identifier (GUID) for the packet properties in which the RealTimeStylus object is interested.    </returns>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.SetDesiredPacketDescription(System.Guid[])">
      <summary>      Sets the RealTimeStylus object's interest in aspects of the packet collected on a tablet context.    </summary>
      <param name="value">      The globally unique identifier (GUID) for the packet properties in which the RealTimeStylus object is interested.    </param>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.GetTabletPropertyDescriptionCollection(System.Int32)">
      <summary>      Returns the TabletPropertyDescriptionCollection collection that is associated with a given tablet context identifier.    </summary>
      <param name="tabletContextId">
      </param>
      <returns>      The TabletPropertyDescriptionCollection collection that is associated with a given tablet context identifier.    </returns>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.AddCustomStylusDataToQueue(Microsoft.StylusInput.PluginData.StylusQueues,System.Guid,System.Object)">
      <summary>
      </summary>
      <param name="queue">
      </param>
      <param name="guid">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.ClearStylusQueues">
      <summary>      Clears the stylus queues.    </summary>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.GetTabletFromTabletContextId(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.GetTabletContextIdFromTablet(Microsoft.Ink.Tablet)">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.OnHandleDestroyed(System.Object,System.EventArgs)">
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.OnHandleCreated(System.Object,System.EventArgs)">
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.Dispose(System.Boolean)">
      <summary>      Releases all resources used by the object.    </summary>
      <param name="disposing">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.CreateStylusFrom(Microsoft.Ink.Cursor)">
      <summary>
      </summary>
      <param name="cursor">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.CreateStylusFrom(Microsoft.Ink.Cursor,System.Int32)">
      <summary>
      </summary>
      <param name="cursor">
      </param>
      <param name="tcid">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus._GetDesiredPacketDescription">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.GetNativeDataInterestMask(Microsoft.StylusInput.DataInterestMask)">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.AddCursorToCollection(System.Int32,System.Int32)">
      <summary>
      </summary>
      <param name="cid">
      </param>
      <param name="tcid">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.GetStylusForId(System.Int32)">
      <summary>
      </summary>
      <param name="cid">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.PluginCollectionModificationValidate">
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.SyncPluginCollectionInsert(System.Int32,System.Object)">
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.Dispose">
      <summary>      Releases all resources used by the object.    </summary>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.Microsoft#StylusInput#IStylusAsyncPlugin#RealTimeStylusEnabled(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.RealTimeStylusEnabledData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.Microsoft#StylusInput#IStylusAsyncPlugin#RealTimeStylusDisabled(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.RealTimeStylusDisabledData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.Microsoft#StylusInput#IStylusAsyncPlugin#StylusInRange(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusInRangeData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.Microsoft#StylusInput#IStylusAsyncPlugin#StylusOutOfRange(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusOutOfRangeData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.Microsoft#StylusInput#IStylusAsyncPlugin#StylusDown(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusDownData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.Microsoft#StylusInput#IStylusAsyncPlugin#StylusUp(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusUpData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.Microsoft#StylusInput#IStylusAsyncPlugin#StylusButtonDown(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusButtonDownData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.Microsoft#StylusInput#IStylusAsyncPlugin#StylusButtonUp(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.StylusButtonUpData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.Microsoft#StylusInput#IStylusAsyncPlugin#InAirPackets(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.InAirPacketsData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.Microsoft#StylusInput#IStylusAsyncPlugin#Packets(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.PacketsData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.Microsoft#StylusInput#IStylusAsyncPlugin#SystemGesture(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.SystemGestureData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.Microsoft#StylusInput#IStylusAsyncPlugin#TabletAdded(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.TabletAddedData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.Microsoft#StylusInput#IStylusAsyncPlugin#TabletRemoved(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.TabletRemovedData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.Microsoft#StylusInput#IStylusAsyncPlugin#CustomStylusDataAdded(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.CustomStylusData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.RealTimeStylus.Microsoft#StylusInput#IStylusAsyncPlugin#Error(Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.PluginData.ErrorData)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="P:Microsoft.StylusInput.RealTimeStylus.SyncPluginCollection">
      <summary>Gets the collection of IStylusAsyncPlugin plug-ins that receive tablet pen data from the RealTimeStylus object.    </summary>
    </member>
    <member name="P:Microsoft.StylusInput.RealTimeStylus.AsyncPluginCollection">
      <summary>Gets the collection of IStylusSyncPlugin plug-ins that receive tablet pen data from the RealTimeStylus object.    </summary>
    </member>
    <member name="P:Microsoft.StylusInput.RealTimeStylus.Enabled">
      <summary>      Gets or sets a value which indicates whether the collection of stylus data is enabled.    </summary>
    </member>
    <member name="P:Microsoft.StylusInput.RealTimeStylus.WindowInputRectangle">
      <summary>      Gets or sets the input rectangle for the RealTimeStylus object.    </summary>
      <value>
      </value>
      <remarks>
      </remarks>
    </member>
    <member name="P:Microsoft.StylusInput.RealTimeStylus.Microsoft#StylusInput#IStylusAsyncPlugin#DataInterest">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.StylusInput.RealTimeStylus.Microsoft#StylusInput#INativeImplementationWrapper#SyncPlugin">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.StylusInput.RealTimeStylus.Microsoft#StylusInput#INativeImplementationWrapper#AsyncPlugin">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.StylusInput.PluginData.RealTimeStylusDisabledData">
      <summary>Passed into the RealTimeStylusDisabled and RealTimeStylusDisabled methods when the RealTimeStylus is being disabled.</summary>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.RealTimeStylusDisabledData.#ctor(System.Int32[])">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.RealTimeStylusDisabledData.GetEnumerator">
      <summary>Gets the enumerator for the TabletContextID collection.</summary>
      <returns>The enumerator for the TabletContextID collection.</returns>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.RealTimeStylusDisabledData.Item(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.RealTimeStylusDisabledData.Count">
      <summary>Gets the number of TabletContextID objects related to the RealTimeStylus.</summary>
    </member>
    <member name="T:Microsoft.StylusInput.PluginData.RealTimeStylusEnabledData">
      <summary>Passed into the RealTimeStylusEnabled and RealTimeStylusEnabled methods when the RealTimeStylus is being enabled.    </summary>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.RealTimeStylusEnabledData.#ctor(System.Int32[])">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.RealTimeStylusEnabledData.GetEnumerator">
      <summary>Gets the enumerator for the TabletContextID collection.</summary>
      <returns>The enumerator for the TabletContextID collection.</returns>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.RealTimeStylusEnabledData.Item(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.RealTimeStylusEnabledData.Count">
      <summary>Gets the number of TabletContextID objects related to the RealTimeStylus.</summary>
    </member>
    <member name="T:Microsoft.StylusInput.Stylus">
      <summary>      Provides access to general information about a tablet stylus.    </summary>
    </member>
    <member name="M:Microsoft.StylusInput.Stylus.#ctor(System.Int32,System.Int32,System.Boolean,System.String,Microsoft.StylusInput.StylusButtons)">
      <summary>
      </summary>
      <param name="inverted">
      </param>
      <param name="id">
      </param>
      <param name="name">
      </param>
      <param name="tabletContextId">
      </param>
      <param name="buttons">
      </param>
    </member>
    <member name="P:Microsoft.StylusInput.Stylus.Inverted">
      <summary>      Gets a value that indicates whether the stylus is inverted or not.    </summary>
    </member>
    <member name="P:Microsoft.StylusInput.Stylus.Id">
      <summary>      Gets the globally unique identifier (GUID) of the stylus.    </summary>
    </member>
    <member name="P:Microsoft.StylusInput.Stylus.Name">
      <summary>      Gets the name of the Stylus object.    </summary>
    </member>
    <member name="P:Microsoft.StylusInput.Stylus.TabletContextId">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.StylusInput.Stylus.Buttons">
      <summary>      Gets the stylus buttons that are available on the stylus</summary>
    </member>
    <member name="T:Microsoft.StylusInput.StylusAsyncPluginCollection">
      <summary>      Maintains a sequenced list of asynchronous plug-ins that implement IStylusAsyncPlugin</summary>
    </member>
    <member name="T:Microsoft.StylusInput.StylusPluginCollectionBase">
      <summary>This class supports the RealTimeStylus infrastructure and is not intended to be used directly from your code.    </summary>
    </member>
    <member name="M:Microsoft.StylusInput.StylusPluginCollectionBase.OnInsert(System.Int32,System.Object)">
      <summary>This class supports the RealTimeStylus infrastructure and is not intended to be used directly from your code.    </summary>
      <param name="index">      The zero-based index at which to insert item.    </param>
      <param name="item">      The new value of the element at index.    </param>
    </member>
    <member name="M:Microsoft.StylusInput.StylusPluginCollectionBase.OnRemove(System.Int32,System.Object)">
      <summary>This class supports the RealTimeStylus infrastructure and is not intended to be used directly from your code.    </summary>
      <param name="index">
      </param>
      <param name="item">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.StylusPluginCollectionBase.OnSet(System.Int32,System.Object,System.Object)">
      <summary>This class supports the RealTimeStylus infrastructure and is not intended to be used directly from your code.    </summary>
      <param name="index">
      </param>
      <param name="oldValue">
      </param>
      <param name="newValue">
      </param>
    </member>
    <member name="M:Microsoft.StylusInput.StylusPluginCollectionBase.OnClear">
      <summary>This class supports the RealTimeStylus infrastructure and is not intended to be used directly from your code.    </summary>
    </member>
    <member name="M:Microsoft.StylusInput.StylusAsyncPluginCollection.OnValidate(System.Object)">
      <summary>Performs additional validation of a value.    </summary>
      <param name="item">      The object to validate.    </param>
    </member>
    <member name="M:Microsoft.StylusInput.StylusAsyncPluginCollection.Add(Microsoft.StylusInput.IStylusAsyncPlugin)">
      <summary>Adds an asynchronous plug-in to the end of the asynchronous plug-in collection.    </summary>
      <param name="item">      The asynchronous plug-in to be added to the end of the saynchronous plug-in collection.    </param>
    </member>
    <member name="M:Microsoft.StylusInput.StylusAsyncPluginCollection.Insert(System.Int32,Microsoft.StylusInput.IStylusAsyncPlugin)">
      <summary>Inserts an asynchronous plug-in into the asynchronous plug-in collection at the specified index.    </summary>
      <param name="index">      The zero-based index at which item should be inserted.    </param>
      <param name="item">      The asynchronous plug-in to insert.    </param>
    </member>
    <member name="M:Microsoft.StylusInput.StylusAsyncPluginCollection.Remove(Microsoft.StylusInput.IStylusAsyncPlugin)">
      <summary>Removes the asynchronous plug-in from the asynchronous plug-in collection.    </summary>
      <param name="item">      The asynchronous plug-in to remove from the asynchronous plug-in collection.    </param>
    </member>
    <member name="M:Microsoft.StylusInput.StylusAsyncPluginCollection.IndexOf(Microsoft.StylusInput.IStylusAsyncPlugin)">
      <summary>Searches for the specified asynchronous plug-in and returns the zero-based index of the first occurrence within the entire asynchronous plug-in collection.    </summary>
      <param name="plugin">      The asynchronous plug-in to locate in the asynchronous plug-in collection.    </param>
      <returns>      The zero-based index of the first occurrence of plugin within the entire asynchronous plug-in collection, if found; otherwise, -1.    </returns>
    </member>
    <member name="M:Microsoft.StylusInput.StylusAsyncPluginCollection.Contains(Microsoft.StylusInput.IStylusAsyncPlugin)">
      <summary>Determines whether the asynchronous plug-in collection contains a specific asynchronous plug-in.    </summary>
      <param name="plugin">      The asynchronous plug-in to locate in the asynchronous plug-in collection.    </param>
      <returns>true if the asynchronous plug-in collection contains the specified asynchronous plug-in; otherwise, false.    </returns>
    </member>
    <member name="M:Microsoft.StylusInput.StylusAsyncPluginCollection.CopyTo(Microsoft.StylusInput.IStylusAsyncPlugin[],System.Int32)">
      <summary>Copies the entire asynchronous plug-in collection to a compatible one-dimensional Array, starting at the specified index of the target array.    </summary>
      <param name="array">      The one-dimensional Array that is the destination of the elements copied from the asynchronous plug-in collection</param>
      <param name="index">      The zero-based index in array at which copying begins.    </param>
    </member>
    <member name="P:Microsoft.StylusInput.StylusAsyncPluginCollection.Item(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.StylusInput.PluginData.StylusButtonDownData">
      <summary>Contains data passed when a button down occurs.    </summary>
    </member>
    <member name="T:Microsoft.StylusInput.PluginData.StylusButtonDataBase">
      <summary>Abstract base class for button state data objects passed with button up and down methods.    </summary>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.StylusButtonDataBase.#ctor(Microsoft.StylusInput.Stylus,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.StylusButtonDataBase.Stylus">
      <summary>The Stylus the button is on.    </summary>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.StylusButtonDataBase.ButtonIndex">
      <summary>Index of the button that had a state change.    </summary>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.StylusButtonDownData.#ctor(Microsoft.StylusInput.Stylus,System.Int32)">
      <summary>Creates a new &lt;xref rid="" /&gt; object.</summary>
      <param name="stylus">Stylus the button is on.</param>
      <param name="buttonIndex">Index of the button</param>
    </member>
    <member name="T:Microsoft.StylusInput.StylusButtons">
      <summary>      Provides access to the stylus buttons of a stylus.    </summary>
    </member>
    <member name="M:Microsoft.StylusInput.StylusButtons.GetId(System.Int32)">
      <summary>
      </summary>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.StylusInput.StylusButtons.GetName(System.Int32)">
      <summary>      Gets the name of the button at the given index.    </summary>
      <param name="index">      The index of the button.    </param>
      <returns>      Returns the name for the specified button.    </returns>
    </member>
    <member name="P:Microsoft.StylusInput.StylusButtons.Count">
      <summary>      Gets the number of buttons on the stylus.    </summary>
    </member>
    <member name="T:Microsoft.StylusInput.PluginData.StylusButtonUpData">
      <summary>Contains the data passed by the StylusButtonUp and StylusButtonUp method.    </summary>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.StylusButtonUpData.#ctor(Microsoft.StylusInput.Stylus,System.Int32)">
      <summary>
      </summary>
      <param name="stylus">The Stylus with which the button is associated..</param>
      <param name="buttonIndex">The index of the button that is pressed.</param>
    </member>
    <member name="T:Microsoft.StylusInput.PluginData.StylusDownData">
      <summary>Provides data for the StylusDown and StylusDown methods</summary>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.StylusDownData.#ctor(Microsoft.StylusInput.Stylus,System.Int32,System.Int32[])">
      <summary>Creates a StylusDownData object.    </summary>
      <param name="stylus">      Information about the tablet pen for the StylusDownData object.    </param>
      <param name="packetPropertyCount">      The number of packets contained in this StylusDownData object</param>
      <param name="packetData">      The packet data for packets contained in this StylusDownData object.    </param>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.StylusDownData.VerifyPacketData(System.Int32,System.Int32[])">
      <summary>Verifies the packet data for the StylusDownData object</summary>
      <param name="packetPropertyCount">
      </param>
      <param name="packetData">
      </param>
    </member>
    <member name="T:Microsoft.StylusInput.PluginData.ErrorData">
      <summary>Contains error data, including the exception thrown to generate the object and the plug-in that threw the exception.</summary>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.ErrorData.#ctor(System.Object,Microsoft.StylusInput.DataInterestMask,System.Exception)">
      <summary>
      </summary>
      <param name="plugin ">
      </param>
      <param name="dataId">
      </param>
      <param name="innerException">
      </param>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.ErrorData.DataId">
      <summary>Returns the plug-in method on which the exception originated.</summary>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.ErrorData.Plugin">
      <summary>Returns a reference to the plug-in where the exception originated.    </summary>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.ErrorData.InnerException">
      <summary>Returns the exception object that originated the notification.</summary>
    </member>
    <member name="M:Microsoft.StylusInput.StylusAsyncPluginNativeShim.#ctor(Microsoft.StylusInput.IStylusAsyncPlugin,Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.RealTimeStylusDataInterest)">
    </member>
    <member name="M:Microsoft.StylusInput.StylusAsyncPluginNativeShim.MarshalQueueDataIfChanged(Microsoft.StylusInput.PluginData.StylusDataBase,System.IntPtr@,System.UInt32@)">
      <summary>
      </summary>
      <param name="data">
      </param>
      <param name="queueArray">
      </param>
      <param name="cPkts">
      </param>
    </member>
    <member name="T:Microsoft.StylusInput.PluginData.StylusInRangeData">
      <summary>Provides data for the StylusInRange and StylusInRange methods</summary>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.StylusInRangeData.#ctor(Microsoft.StylusInput.Stylus)">
      <summary>Creates a StylusInRangeData object.    </summary>
      <param name="stylus">      Information about the tablet pen for the StylusInRangeData object.    </param>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.StylusInRangeData.Stylus">
      <summary>Gets the information about the tablet pen at the time that it enters the input area of the RealTimeStylus object or enters the detection range of the digitizer above the input area of the RealTimeStylus object.    </summary>
    </member>
    <member name="T:Microsoft.StylusInput.PluginData.StylusOutOfRangeData">
      <summary>Provides data for the StylusOutOfRange and StylusOutOfRange methods</summary>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.StylusOutOfRangeData.#ctor(Microsoft.StylusInput.Stylus)">
      <summary>Creates a StylusOutOfRangeData object.    </summary>
      <param name="stylus">      Information about the tablet pen for the StylusOutOfRangeData object.    </param>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.StylusOutOfRangeData.Stylus">
      <summary>Gets the information about the tablet pen at the time that it leaves the input area of the RealTimeStylus object or leaves the detection range of the digitizer above the input area of the RealTimeStylus object.    </summary>
    </member>
    <member name="M:Microsoft.StylusInput.StylusSyncPluginNativeShim.#ctor(Microsoft.StylusInput.IStylusSyncPlugin,Microsoft.StylusInput.RealTimeStylus,Microsoft.StylusInput.RealTimeStylusDataInterest)">
    </member>
    <member name="M:Microsoft.StylusInput.StylusSyncPluginNativeShim.MarshalQueueDataIfChanged(Microsoft.StylusInput.PluginData.StylusDataBase,System.IntPtr@,System.UInt32@)">
      <summary>
      </summary>
      <param name="data">
      </param>
      <param name="queueArray">
      </param>
      <param name="cPkts">
      </param>
    </member>
    <member name="T:Microsoft.StylusInput.StylusSyncPluginCollection">
      <summary>      Maintains a sequenced list of synchronous plug-ins that implement IStylusSyncPlugin</summary>
    </member>
    <member name="M:Microsoft.StylusInput.StylusSyncPluginCollection.OnValidate(System.Object)">
      <summary>Performs additional validation of a value.    </summary>
      <param name="item">      The object to validate.    </param>
    </member>
    <member name="M:Microsoft.StylusInput.StylusSyncPluginCollection.Add(Microsoft.StylusInput.IStylusSyncPlugin)">
      <summary>Adds a synchronous plug-in to the end of the synchronous plug-in collection.    </summary>
      <param name="item">      The synchronous plug-in to be added to the end of the synchronous plug-in collection.    </param>
    </member>
    <member name="M:Microsoft.StylusInput.StylusSyncPluginCollection.Insert(System.Int32,Microsoft.StylusInput.IStylusSyncPlugin)">
      <summary>Inserts a synchronous plug-in into the synchronous plug-in collection at the specified index.    </summary>
      <param name="index">      The zero-based index at which item should be inserted.    </param>
      <param name="item">      The synchronous plug-in to insert.    </param>
    </member>
    <member name="M:Microsoft.StylusInput.StylusSyncPluginCollection.Remove(Microsoft.StylusInput.IStylusSyncPlugin)">
      <summary>Removes the synchronous plug-in from the synchronous plug-in collection.    </summary>
      <param name="item">      The synchronous plug-in to remove from the synchronous plug-in collection.    </param>
    </member>
    <member name="M:Microsoft.StylusInput.StylusSyncPluginCollection.IndexOf(Microsoft.StylusInput.IStylusSyncPlugin)">
      <summary>Searches for the specified synchronous plug-in and returns the zero-based index of the first occurrence within the entire synchronous plug-in collection.    </summary>
      <param name="plugin">      The synchronous plug-in to locate in the synchronous plug-in collection.    </param>
      <returns>      The zero-based index of the first occurrence of plugin within the entire synchronous plug-in collection, if found; otherwise, -1.    </returns>
    </member>
    <member name="M:Microsoft.StylusInput.StylusSyncPluginCollection.Contains(Microsoft.StylusInput.IStylusSyncPlugin)">
      <summary>Determines whether the synchronous plug-in collection contains a specific synchronous plug-in.    </summary>
      <param name="plugin">      The synchronous plug-in to locate in the synchronous plug-in collection.    </param>
      <returns>true if the synchronous plug-in collection contains the specified synchronous plug-in; otherwise, false.    </returns>
    </member>
    <member name="M:Microsoft.StylusInput.StylusSyncPluginCollection.CopyTo(Microsoft.StylusInput.IStylusSyncPlugin[],System.Int32)">
      <summary>Copies the entire synchronous plug-in collection to a compatible one-dimensional Array, starting at the specified index of the target array.    </summary>
      <param name="array">      The one-dimensional Array that is the destination of the elements copied from the synchronous plug-in collection</param>
      <param name="index">      The zero-based index in array at which copying begins.    </param>
    </member>
    <member name="P:Microsoft.StylusInput.StylusSyncPluginCollection.Item(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.StylusInput.PluginData.StylusUpData">
      <summary>Provides data for the StylusUp and StylusUp methods</summary>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.StylusUpData.#ctor(Microsoft.StylusInput.Stylus,System.Int32,System.Int32[])">
      <summary>Creates a StylusUpData object.    </summary>
      <param name="stylus">      Information about the tablet pen for the StylusUpData object.    </param>
      <param name="packetPropertyCount">      The number of packets contained in this StylusUpData object</param>
      <param name="packetData">      The packet data for packets contained in this StylusUpData object.    </param>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.StylusUpData.VerifyPacketData(System.Int32,System.Int32[])">
      <summary>Verifies the packet data for the StylusUpData object</summary>
      <param name="packetPropertyCount">
      </param>
      <param name="packetData">
      </param>
    </member>
    <member name="T:Microsoft.StylusInput.PluginData.SystemGestureData">
      <summary>Provides data for the SystemGesture and SystemGesture methods</summary>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.SystemGestureData.#ctor(Microsoft.StylusInput.Stylus,Microsoft.Ink.SystemGesture,System.Drawing.Point,System.Int32,System.Char,System.Int32)">
      <summary>
      </summary>
      <param name="stylus">
      </param>
      <param name="id">
      </param>
      <param name="pt">
      </param>
      <param name="modifier">
      </param>
      <param name="character">
      </param>
      <param name="cursorMode">
      </param>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.SystemGestureData.Stylus">
      <summary>Gets the information about the tablet pen at the time the system gesture occurs.    </summary>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.SystemGestureData.Id">
      <summary>Gets the system gesture that generated this data.    </summary>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.SystemGestureData.Point">
      <summary>Gets the location of the system gesture in pixel space.    </summary>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.SystemGestureData.Modifier">
      <summary>Reserved.</summary>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.SystemGestureData.Character">
      <summary>Reserved.</summary>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.SystemGestureData.CursorMode">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.StylusInput.PluginData.TabletAddedData">
      <summary>Provides data for the TabletAdded and TabletAdded methods</summary>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.TabletAddedData.#ctor(Microsoft.Ink.Tablet)">
      <summary>
      </summary>
      <param name="tablet">
      </param>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.TabletAddedData.Tablet">
      <summary>Gets the Tablet object that is being added.    </summary>
    </member>
    <member name="T:Microsoft.StylusInput.PluginData.TabletRemovedData">
      <summary>Provides data for the TabletRemoved and TabletRemoved methods</summary>
    </member>
    <member name="M:Microsoft.StylusInput.PluginData.TabletRemovedData.#ctor(System.Int32)">
      <summary>
      </summary>
      <param name="tabletIndex">
      </param>
    </member>
    <member name="P:Microsoft.StylusInput.PluginData.TabletRemovedData.TabletIndex">
      <summary>Gets the tablet context identifier for the removed Tablet.    </summary>
    </member>
  </members>
</doc>
