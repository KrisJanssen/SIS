<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutDialog.CreditsLabel.Text" xml:space="preserve">
    <value>Credits:</value>
  </data>
  <data name="AboutDialog.Text.Format" xml:space="preserve">
    <value>About {0}</value>
  </data>
  <data name="Application.Copyright.AllRightsReserved" xml:space="preserve">
    <value>All Rights Reserved.</value>
  </data>
  <data name="Application.ProductName.Bare" xml:space="preserve">
    <value>Spectroscopy Imaging Suite</value>
  </data>
  <data name="Application.ProductName.Format" xml:space="preserve">
    <value>{0} v{1}{2}</value>
    <comment>{0} is Application.ProductName.Bare. {1} is the version number (e.g., "2.6"). {2} is either an empty string, or a version tag constructed with Application.ProductNage.Format (e.g., "Beta 5")</comment>
  </data>
  <data name="Application.ProductName.Tag.Format" xml:space="preserve">
    <value> {0}</value>
    <comment>{0} is the version tag, e.g. Beta 5</comment>
  </data>
  <data name="EraseSelectionAction.Name" xml:space="preserve">
    <value>Erase Selection</value>
  </data>
  <data name="Error.OSRequirement" xml:space="preserve">
    <value>SIS requires Windows XP SP2, Windows Vista, Windows Server 2003, or later.</value>
  </data>
  <data name="ExecuteFunction.GenericError" xml:space="preserve">
    <value>There was an error performing the action.</value>
  </data>
  <data name="ExecuteFunction.GenericOutOfMemory" xml:space="preserve">
    <value>There was not enough memory to perform the action.</value>
  </data>
  <data name="ExecuteFunction.ProgressDialog.Description.Text" xml:space="preserve">
    <value>Please wait...</value>
  </data>
  <data name="ExpiredDialog.Message" xml:space="preserve">
    <value>This pre-release version of SIS has expired (30 days).

Click OK to go to the SIS website where you may download a newer version.</value>
  </data>
  <data name="ExpiredTaskDialog.CheckForUpdatesTB.ActionText" xml:space="preserve">
    <value>&amp;Check for an Update</value>
  </data>
  <data name="ExpiredTaskDialog.CheckForUpdatesTB.ExplanationText" xml:space="preserve">
    <value>Check to see if an update is available, and then install it.</value>
  </data>
  <data name="ExpiredTaskDialog.DoNotCheckForUpdatesTB.ActionText" xml:space="preserve">
    <value>E&amp;xit</value>
  </data>
  <data name="ExpiredTaskDialog.DoNotCheckForUpdatesTB.ExplanationText" xml:space="preserve">
    <value>Exit SIS without checking for updates.</value>
  </data>
  <data name="ExpiredTaskDialog.GoToWebSiteTB.ActionText" xml:space="preserve">
    <value>&amp;Go to the SIS website</value>
  </data>
  <data name="ExpiredTaskDialog.GoToWebSiteTB.ExplanationText" xml:space="preserve">
    <value>If checking for updates does not work, you may try going to the website to manually find an update.</value>
  </data>
  <data name="ExpiredTaskDialog.InfoText" xml:space="preserve">
    <value>This pre-release version of SIS has expired. To continue using SIS, you must update to the latest version.</value>
  </data>
  <data name="SISInfo.AboutRedirectPage" xml:space="preserve">
    <value>pdnabout.html</value>
  </data>
  <data name="SISInfo.FriendlyVersionString.ConfigWithSpace.Format" xml:space="preserve">
    <value> {0}</value>
  </data>
  <data name="SISInfo.FriendlyVersionString.Format" xml:space="preserve">
    <value>version {0}{1}</value>
    <comment>{0} is the version, such as "2.5". {1} is the configuration ("Beta 5") formatted via PdnInfo.FriendlyVersionString.ConfigWithSpace.Format, or it is an empty string if the configuration is "Final"</comment>
  </data>
  <data name="SISInfo.FullAppName.Format" xml:space="preserve">
    <value>{0} ({1})</value>
    <comment>{0} is the product name ("SIS"), {1} is the version string ("2.2.2000.3000")</comment>
  </data>
  <data name="SISInfo.VersionString.Format" xml:space="preserve">
    <value>{0} {1} build {2}</value>
    <comment>{0} is the friendly version name (configuration name), such as "Beta 2" or "Final". {1} is Debug or Release. {2} is the product version.</comment>
  </data>
  <data name="SetupWizard.ReadyToInstallPage.HeaderText" xml:space="preserve">
    <value>Confirm Installation</value>
  </data>
  <data name="SetupWizard.ReadyToInstallPage.IntroText.Text.Format" xml:space="preserve">
    <value>The installer is ready to install {0} on your computer.

Click "Next" to start the installation.</value>
  </data>
  <data name="SetupWizard.x86Msi.LaunchCondition.NotAllowedOn64bitOS" xml:space="preserve">
    <value>32-bit MSI may not be installed on 64-bit OS.</value>
  </data>
  <data name="ShapeDrawTypeConfigWidget.BothButton.ToolTipText" xml:space="preserve">
    <value>Draw Filled Shape With Outline</value>
  </data>
  <data name="ShapeDrawTypeConfigWidget.InteriorButton.ToolTipText" xml:space="preserve">
    <value>Draw Filled Shape</value>
  </data>
  <data name="ShapeDrawTypeConfigWidget.OutlineButton.ToolTipText" xml:space="preserve">
    <value>Draw Shape Outline</value>
  </data>
  <data name="SharpenEffect.ConfigDialog.SliderLabel" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="SharpenEffect.Name" xml:space="preserve">
    <value>Sharpen</value>
  </data>
  <data name="SplashForm.StatusLabel.Text" xml:space="preserve">
    <value>Starting...</value>
  </data>
  <data name="Startup.UnhandledError.Format" xml:space="preserve">
    <value>Havia um erro, e SIS deve ser fechado. Refira a ficha ' {0} ' , que foi colocado em seu "Desktop", para mais informação.</value>
    <comment>{0} is a filename</comment>
  </data>
  <data name="Startup.MDIwarning" xml:space="preserve">
    <value>"WARNING! This software is designed to support multiple documents at the same time (MDI). However, full support for this is not yet implemented so DON'T try it! Always close a document before opening another.</value>
  </data>
</root>